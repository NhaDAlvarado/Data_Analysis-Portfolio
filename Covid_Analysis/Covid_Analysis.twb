<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20242.24.0807.0327                               -->
<workbook original-version='18.1' source-build='2024.2.2 (20242.24.0807.0327)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <BasicButtonObject />
    <CollapsiblePane />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
    <ZoneFriendlyName />
    <ZoneVisibilityControl />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style>
    <style-rule element='all'>
      <format attr='font-family' value='Verdana' />
      <format attr='color' value='#78290f' />
    </style-rule>
  </style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Select Continent' datatype='string' name='[Continent Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;North America&quot;'>
        <calculation class='tableau' formula='&quot;North America&quot;' />
        <members>
          <member value='&quot;Africa&quot;' />
          <member value='&quot;Asia&quot;' />
          <member value='&quot;Europe&quot;' />
          <member value='&quot;North America&quot;' />
          <member value='&quot;Oceania&quot;' />
          <member value='&quot;South America&quot;' />
        </members>
      </column>
    </datasource>
    <datasource caption='CovidDeaths_cleaned' inline='true' name='federated.1sfrzyp1v45e731di51f21buvywi' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='CovidDeaths_cleaned' name='textscan.11mfhmv09f8irm1g1he5d02k6pq9'>
            <connection class='textscan' directory='/Users/miadang/Desktop/DA/Covid_Analysis' filename='CovidDeaths_cleaned.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.11mfhmv09f8irm1g1he5d02k6pq9' name='CovidDeaths_cleaned.csv' table='[CovidDeaths_cleaned#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='iso_code' ordinal='0' />
            <column datatype='string' name='continent' ordinal='1' />
            <column datatype='string' name='location' ordinal='2' />
            <column datatype='date' name='date' ordinal='3' />
            <column datatype='integer' name='total_cases' ordinal='4' />
            <column datatype='integer' name='new_cases' ordinal='5' />
            <column datatype='real' name='new_cases_smoothed' ordinal='6' />
            <column datatype='integer' name='total_deaths' ordinal='7' />
            <column datatype='integer' name='new_deaths' ordinal='8' />
            <column datatype='real' name='new_deaths_smoothed' ordinal='9' />
            <column datatype='real' name='total_cases_per_million' ordinal='10' />
            <column datatype='real' name='new_cases_per_million' ordinal='11' />
            <column datatype='real' name='new_cases_smoothed_per_million' ordinal='12' />
            <column datatype='real' name='total_deaths_per_million' ordinal='13' />
            <column datatype='real' name='new_deaths_per_million' ordinal='14' />
            <column datatype='real' name='new_deaths_smoothed_per_million' ordinal='15' />
            <column datatype='real' name='reproduction_rate' ordinal='16' />
            <column datatype='integer' name='icu_patients' ordinal='17' />
            <column datatype='integer' name='icu_patients_per_million' ordinal='18' />
            <column datatype='integer' name='hosp_patients' ordinal='19' />
            <column datatype='integer' name='hosp_patients_per_million' ordinal='20' />
            <column datatype='integer' name='weekly_icu_admissions' ordinal='21' />
            <column datatype='integer' name='weekly_icu_admissions_per_million' ordinal='22' />
            <column datatype='integer' name='weekly_hosp_admissions' ordinal='23' />
            <column datatype='integer' name='weekly_hosp_admissions_per_million' ordinal='24' />
            <column datatype='integer' name='new_tests' ordinal='25' />
            <column datatype='integer' name='total_tests' ordinal='26' />
            <column datatype='real' name='total_tests_per_thousand' ordinal='27' />
            <column datatype='real' name='new_tests_per_thousand' ordinal='28' />
            <column datatype='integer' name='new_tests_smoothed' ordinal='29' />
            <column datatype='real' name='new_tests_smoothed_per_thousand' ordinal='30' />
            <column datatype='real' name='positive_rate' ordinal='31' />
            <column datatype='real' name='tests_per_case' ordinal='32' />
            <column datatype='string' name='tests_units' ordinal='33' />
            <column datatype='integer' name='total_vaccinations' ordinal='34' />
            <column datatype='integer' name='people_vaccinated' ordinal='35' />
            <column datatype='integer' name='people_fully_vaccinated' ordinal='36' />
            <column datatype='integer' name='new_vaccinations' ordinal='37' />
            <column datatype='integer' name='new_vaccinations_smoothed' ordinal='38' />
            <column datatype='real' name='total_vaccinations_per_hundred' ordinal='39' />
            <column datatype='real' name='people_vaccinated_per_hundred' ordinal='40' />
            <column datatype='real' name='people_fully_vaccinated_per_hundred' ordinal='41' />
            <column datatype='integer' name='new_vaccinations_smoothed_per_million' ordinal='42' />
            <column datatype='real' name='stringency_index' ordinal='43' />
            <column datatype='integer' name='population' ordinal='44' />
            <column datatype='real' name='population_density' ordinal='45' />
            <column datatype='real' name='median_age' ordinal='46' />
            <column datatype='real' name='aged_65_older' ordinal='47' />
            <column datatype='real' name='aged_70_older' ordinal='48' />
            <column datatype='real' name='gdp_per_capita' ordinal='49' />
            <column datatype='real' name='extreme_poverty' ordinal='50' />
            <column datatype='real' name='cardiovasc_death_rate' ordinal='51' />
            <column datatype='real' name='diabetes_prevalence' ordinal='52' />
            <column datatype='real' name='female_smokers' ordinal='53' />
            <column datatype='real' name='male_smokers' ordinal='54' />
            <column datatype='real' name='handwashing_facilities' ordinal='55' />
            <column datatype='real' name='hospital_beds_per_thousand' ordinal='56' />
            <column datatype='real' name='life_expectancy' ordinal='57' />
            <column datatype='real' name='human_development_index' ordinal='58' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.11mfhmv09f8irm1g1he5d02k6pq9' name='CovidDeaths_cleaned.csv' table='[CovidDeaths_cleaned#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='iso_code' ordinal='0' />
            <column datatype='string' name='continent' ordinal='1' />
            <column datatype='string' name='location' ordinal='2' />
            <column datatype='date' name='date' ordinal='3' />
            <column datatype='integer' name='total_cases' ordinal='4' />
            <column datatype='integer' name='new_cases' ordinal='5' />
            <column datatype='real' name='new_cases_smoothed' ordinal='6' />
            <column datatype='integer' name='total_deaths' ordinal='7' />
            <column datatype='integer' name='new_deaths' ordinal='8' />
            <column datatype='real' name='new_deaths_smoothed' ordinal='9' />
            <column datatype='real' name='total_cases_per_million' ordinal='10' />
            <column datatype='real' name='new_cases_per_million' ordinal='11' />
            <column datatype='real' name='new_cases_smoothed_per_million' ordinal='12' />
            <column datatype='real' name='total_deaths_per_million' ordinal='13' />
            <column datatype='real' name='new_deaths_per_million' ordinal='14' />
            <column datatype='real' name='new_deaths_smoothed_per_million' ordinal='15' />
            <column datatype='real' name='reproduction_rate' ordinal='16' />
            <column datatype='integer' name='icu_patients' ordinal='17' />
            <column datatype='integer' name='icu_patients_per_million' ordinal='18' />
            <column datatype='integer' name='hosp_patients' ordinal='19' />
            <column datatype='integer' name='hosp_patients_per_million' ordinal='20' />
            <column datatype='integer' name='weekly_icu_admissions' ordinal='21' />
            <column datatype='integer' name='weekly_icu_admissions_per_million' ordinal='22' />
            <column datatype='integer' name='weekly_hosp_admissions' ordinal='23' />
            <column datatype='integer' name='weekly_hosp_admissions_per_million' ordinal='24' />
            <column datatype='integer' name='new_tests' ordinal='25' />
            <column datatype='integer' name='total_tests' ordinal='26' />
            <column datatype='real' name='total_tests_per_thousand' ordinal='27' />
            <column datatype='real' name='new_tests_per_thousand' ordinal='28' />
            <column datatype='integer' name='new_tests_smoothed' ordinal='29' />
            <column datatype='real' name='new_tests_smoothed_per_thousand' ordinal='30' />
            <column datatype='real' name='positive_rate' ordinal='31' />
            <column datatype='real' name='tests_per_case' ordinal='32' />
            <column datatype='string' name='tests_units' ordinal='33' />
            <column datatype='integer' name='total_vaccinations' ordinal='34' />
            <column datatype='integer' name='people_vaccinated' ordinal='35' />
            <column datatype='integer' name='people_fully_vaccinated' ordinal='36' />
            <column datatype='integer' name='new_vaccinations' ordinal='37' />
            <column datatype='integer' name='new_vaccinations_smoothed' ordinal='38' />
            <column datatype='real' name='total_vaccinations_per_hundred' ordinal='39' />
            <column datatype='real' name='people_vaccinated_per_hundred' ordinal='40' />
            <column datatype='real' name='people_fully_vaccinated_per_hundred' ordinal='41' />
            <column datatype='integer' name='new_vaccinations_smoothed_per_million' ordinal='42' />
            <column datatype='real' name='stringency_index' ordinal='43' />
            <column datatype='integer' name='population' ordinal='44' />
            <column datatype='real' name='population_density' ordinal='45' />
            <column datatype='real' name='median_age' ordinal='46' />
            <column datatype='real' name='aged_65_older' ordinal='47' />
            <column datatype='real' name='aged_70_older' ordinal='48' />
            <column datatype='real' name='gdp_per_capita' ordinal='49' />
            <column datatype='real' name='extreme_poverty' ordinal='50' />
            <column datatype='real' name='cardiovasc_death_rate' ordinal='51' />
            <column datatype='real' name='diabetes_prevalence' ordinal='52' />
            <column datatype='real' name='female_smokers' ordinal='53' />
            <column datatype='real' name='male_smokers' ordinal='54' />
            <column datatype='real' name='handwashing_facilities' ordinal='55' />
            <column datatype='real' name='hospital_beds_per_thousand' ordinal='56' />
            <column datatype='real' name='life_expectancy' ordinal='57' />
            <column datatype='real' name='human_development_index' ordinal='58' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[CovidDeaths_cleaned.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>iso_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[iso_code]</local-name>
            <parent-name>[CovidDeaths_cleaned.csv]</parent-name>
            <remote-alias>iso_code</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>continent</remote-name>
            <remote-type>129</remote-type>
            <local-name>[continent]</local-name>
            <parent-name>[CovidDeaths_cleaned.csv]</parent-name>
            <remote-alias>continent</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[CovidDeaths_cleaned.csv]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[CovidDeaths_cleaned.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[CovidDeaths_cleaned.csv]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_cases]</local-name>
            <parent-name>[CovidDeaths_cleaned.csv]</parent-name>
            <remote-alias>new_cases</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_smoothed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_smoothed]</local-name>
            <parent-name>[CovidDeaths_cleaned.csv]</parent-name>
            <remote-alias>new_cases_smoothed</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[CovidDeaths_cleaned.csv]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_deaths]</local-name>
            <parent-name>[CovidDeaths_cleaned.csv]</parent-name>
            <remote-alias>new_deaths</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_smoothed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_smoothed]</local-name>
            <parent-name>[CovidDeaths_cleaned.csv]</parent-name>
            <remote-alias>new_deaths_smoothed</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_cases_per_million]</local-name>
            <parent-name>[CovidDeaths_cleaned.csv]</parent-name>
            <remote-alias>total_cases_per_million</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_per_million]</local-name>
            <parent-name>[CovidDeaths_cleaned.csv]</parent-name>
            <remote-alias>new_cases_per_million</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_smoothed_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_smoothed_per_million]</local-name>
            <parent-name>[CovidDeaths_cleaned.csv]</parent-name>
            <remote-alias>new_cases_smoothed_per_million</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_deaths_per_million]</local-name>
            <parent-name>[CovidDeaths_cleaned.csv]</parent-name>
            <remote-alias>total_deaths_per_million</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_per_million]</local-name>
            <parent-name>[CovidDeaths_cleaned.csv]</parent-name>
            <remote-alias>new_deaths_per_million</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_smoothed_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_smoothed_per_million]</local-name>
            <parent-name>[CovidDeaths_cleaned.csv]</parent-name>
            <remote-alias>new_deaths_smoothed_per_million</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>reproduction_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[reproduction_rate]</local-name>
            <parent-name>[CovidDeaths_cleaned.csv]</parent-name>
            <remote-alias>reproduction_rate</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>icu_patients</remote-name>
            <remote-type>20</remote-type>
            <local-name>[icu_patients]</local-name>
            <parent-name>[CovidDeaths_cleaned.csv]</parent-name>
            <remote-alias>icu_patients</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>icu_patients_per_million</remote-name>
            <remote-type>20</remote-type>
            <local-name>[icu_patients_per_million]</local-name>
            <parent-name>[CovidDeaths_cleaned.csv]</parent-name>
            <remote-alias>icu_patients_per_million</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hosp_patients</remote-name>
            <remote-type>20</remote-type>
            <local-name>[hosp_patients]</local-name>
            <parent-name>[CovidDeaths_cleaned.csv]</parent-name>
            <remote-alias>hosp_patients</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hosp_patients_per_million</remote-name>
            <remote-type>20</remote-type>
            <local-name>[hosp_patients_per_million]</local-name>
            <parent-name>[CovidDeaths_cleaned.csv]</parent-name>
            <remote-alias>hosp_patients_per_million</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_icu_admissions</remote-name>
            <remote-type>20</remote-type>
            <local-name>[weekly_icu_admissions]</local-name>
            <parent-name>[CovidDeaths_cleaned.csv]</parent-name>
            <remote-alias>weekly_icu_admissions</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_icu_admissions_per_million</remote-name>
            <remote-type>20</remote-type>
            <local-name>[weekly_icu_admissions_per_million]</local-name>
            <parent-name>[CovidDeaths_cleaned.csv]</parent-name>
            <remote-alias>weekly_icu_admissions_per_million</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_hosp_admissions</remote-name>
            <remote-type>20</remote-type>
            <local-name>[weekly_hosp_admissions]</local-name>
            <parent-name>[CovidDeaths_cleaned.csv]</parent-name>
            <remote-alias>weekly_hosp_admissions</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_hosp_admissions_per_million</remote-name>
            <remote-type>20</remote-type>
            <local-name>[weekly_hosp_admissions_per_million]</local-name>
            <parent-name>[CovidDeaths_cleaned.csv]</parent-name>
            <remote-alias>weekly_hosp_admissions_per_million</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_tests]</local-name>
            <parent-name>[CovidDeaths_cleaned.csv]</parent-name>
            <remote-alias>new_tests</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_tests</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_tests]</local-name>
            <parent-name>[CovidDeaths_cleaned.csv]</parent-name>
            <remote-alias>total_tests</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_tests_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_tests_per_thousand]</local-name>
            <parent-name>[CovidDeaths_cleaned.csv]</parent-name>
            <remote-alias>total_tests_per_thousand</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_tests_per_thousand]</local-name>
            <parent-name>[CovidDeaths_cleaned.csv]</parent-name>
            <remote-alias>new_tests_per_thousand</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_smoothed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_tests_smoothed]</local-name>
            <parent-name>[CovidDeaths_cleaned.csv]</parent-name>
            <remote-alias>new_tests_smoothed</remote-alias>
            <ordinal>29</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_smoothed_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_tests_smoothed_per_thousand]</local-name>
            <parent-name>[CovidDeaths_cleaned.csv]</parent-name>
            <remote-alias>new_tests_smoothed_per_thousand</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>positive_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[positive_rate]</local-name>
            <parent-name>[CovidDeaths_cleaned.csv]</parent-name>
            <remote-alias>positive_rate</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tests_per_case</remote-name>
            <remote-type>5</remote-type>
            <local-name>[tests_per_case]</local-name>
            <parent-name>[CovidDeaths_cleaned.csv]</parent-name>
            <remote-alias>tests_per_case</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tests_units</remote-name>
            <remote-type>129</remote-type>
            <local-name>[tests_units]</local-name>
            <parent-name>[CovidDeaths_cleaned.csv]</parent-name>
            <remote-alias>tests_units</remote-alias>
            <ordinal>33</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_vaccinations</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_vaccinations]</local-name>
            <parent-name>[CovidDeaths_cleaned.csv]</parent-name>
            <remote-alias>total_vaccinations</remote-alias>
            <ordinal>34</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_vaccinated</remote-name>
            <remote-type>20</remote-type>
            <local-name>[people_vaccinated]</local-name>
            <parent-name>[CovidDeaths_cleaned.csv]</parent-name>
            <remote-alias>people_vaccinated</remote-alias>
            <ordinal>35</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_fully_vaccinated</remote-name>
            <remote-type>20</remote-type>
            <local-name>[people_fully_vaccinated]</local-name>
            <parent-name>[CovidDeaths_cleaned.csv]</parent-name>
            <remote-alias>people_fully_vaccinated</remote-alias>
            <ordinal>36</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_vaccinations</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_vaccinations]</local-name>
            <parent-name>[CovidDeaths_cleaned.csv]</parent-name>
            <remote-alias>new_vaccinations</remote-alias>
            <ordinal>37</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_vaccinations_smoothed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_vaccinations_smoothed]</local-name>
            <parent-name>[CovidDeaths_cleaned.csv]</parent-name>
            <remote-alias>new_vaccinations_smoothed</remote-alias>
            <ordinal>38</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_vaccinations_per_hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_vaccinations_per_hundred]</local-name>
            <parent-name>[CovidDeaths_cleaned.csv]</parent-name>
            <remote-alias>total_vaccinations_per_hundred</remote-alias>
            <ordinal>39</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_vaccinated_per_hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[people_vaccinated_per_hundred]</local-name>
            <parent-name>[CovidDeaths_cleaned.csv]</parent-name>
            <remote-alias>people_vaccinated_per_hundred</remote-alias>
            <ordinal>40</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_fully_vaccinated_per_hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[people_fully_vaccinated_per_hundred]</local-name>
            <parent-name>[CovidDeaths_cleaned.csv]</parent-name>
            <remote-alias>people_fully_vaccinated_per_hundred</remote-alias>
            <ordinal>41</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_vaccinations_smoothed_per_million</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_vaccinations_smoothed_per_million]</local-name>
            <parent-name>[CovidDeaths_cleaned.csv]</parent-name>
            <remote-alias>new_vaccinations_smoothed_per_million</remote-alias>
            <ordinal>42</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stringency_index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[stringency_index]</local-name>
            <parent-name>[CovidDeaths_cleaned.csv]</parent-name>
            <remote-alias>stringency_index</remote-alias>
            <ordinal>43</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[CovidDeaths_cleaned.csv]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>44</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population_density</remote-name>
            <remote-type>5</remote-type>
            <local-name>[population_density]</local-name>
            <parent-name>[CovidDeaths_cleaned.csv]</parent-name>
            <remote-alias>population_density</remote-alias>
            <ordinal>45</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_age</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_age]</local-name>
            <parent-name>[CovidDeaths_cleaned.csv]</parent-name>
            <remote-alias>median_age</remote-alias>
            <ordinal>46</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>aged_65_older</remote-name>
            <remote-type>5</remote-type>
            <local-name>[aged_65_older]</local-name>
            <parent-name>[CovidDeaths_cleaned.csv]</parent-name>
            <remote-alias>aged_65_older</remote-alias>
            <ordinal>47</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>aged_70_older</remote-name>
            <remote-type>5</remote-type>
            <local-name>[aged_70_older]</local-name>
            <parent-name>[CovidDeaths_cleaned.csv]</parent-name>
            <remote-alias>aged_70_older</remote-alias>
            <ordinal>48</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gdp_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[gdp_per_capita]</local-name>
            <parent-name>[CovidDeaths_cleaned.csv]</parent-name>
            <remote-alias>gdp_per_capita</remote-alias>
            <ordinal>49</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>extreme_poverty</remote-name>
            <remote-type>5</remote-type>
            <local-name>[extreme_poverty]</local-name>
            <parent-name>[CovidDeaths_cleaned.csv]</parent-name>
            <remote-alias>extreme_poverty</remote-alias>
            <ordinal>50</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cardiovasc_death_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cardiovasc_death_rate]</local-name>
            <parent-name>[CovidDeaths_cleaned.csv]</parent-name>
            <remote-alias>cardiovasc_death_rate</remote-alias>
            <ordinal>51</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>diabetes_prevalence</remote-name>
            <remote-type>5</remote-type>
            <local-name>[diabetes_prevalence]</local-name>
            <parent-name>[CovidDeaths_cleaned.csv]</parent-name>
            <remote-alias>diabetes_prevalence</remote-alias>
            <ordinal>52</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>female_smokers</remote-name>
            <remote-type>5</remote-type>
            <local-name>[female_smokers]</local-name>
            <parent-name>[CovidDeaths_cleaned.csv]</parent-name>
            <remote-alias>female_smokers</remote-alias>
            <ordinal>53</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>male_smokers</remote-name>
            <remote-type>5</remote-type>
            <local-name>[male_smokers]</local-name>
            <parent-name>[CovidDeaths_cleaned.csv]</parent-name>
            <remote-alias>male_smokers</remote-alias>
            <ordinal>54</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>handwashing_facilities</remote-name>
            <remote-type>5</remote-type>
            <local-name>[handwashing_facilities]</local-name>
            <parent-name>[CovidDeaths_cleaned.csv]</parent-name>
            <remote-alias>handwashing_facilities</remote-alias>
            <ordinal>55</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hospital_beds_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hospital_beds_per_thousand]</local-name>
            <parent-name>[CovidDeaths_cleaned.csv]</parent-name>
            <remote-alias>hospital_beds_per_thousand</remote-alias>
            <ordinal>56</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>life_expectancy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[life_expectancy]</local-name>
            <parent-name>[CovidDeaths_cleaned.csv]</parent-name>
            <remote-alias>life_expectancy</remote-alias>
            <ordinal>57</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>human_development_index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[human_development_index]</local-name>
            <parent-name>[CovidDeaths_cleaned.csv]</parent-name>
            <remote-alias>human_development_index</remote-alias>
            <ordinal>58</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='7 days Avg New Deaths w Chosen Continent' datatype='real' name='[7 days Avg New Cases w Chosen Continent (copy)_113786292401340419]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_AVG(SUM([New Cases w Chosen Continent (copy)_113786292401016834]), -6, 0)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='7 days Avg New Tests w Chosen Continent' datatype='real' name='[7 days Avg New Deaths w Chosen Continent (copy)_113786292446449671]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_AVG(SUM([New Deaths w Chosen Continent (copy)_113786292446183430]), -6, 0)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='7 days Avg New Vaccinations w Chosen Continent' datatype='real' name='[7 days Avg New Tests w Chosen Continent (copy)_28780849682935809]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_AVG(SUM([New Tests w Chosen Continent (copy)_28780849682558976]), -6, 0)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='New Cases w Chosen Continent' datatype='integer' name='[Calculation_113786292388573184]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [continent] = [Parameters].[Continent Parameter] THEN [new_cases]&#10;ELSE 0&#10;END' />
      </column>
      <column caption='Above Below Avg' datatype='string' name='[Calculation_113786292406697989]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF Avg([New Deaths w Chosen Continent (copy)_113786292404805636]) &gt; 0.01&#10;then &apos;above&apos;&#10;else &apos;below&apos;&#10;end' />
      </column>
      <column caption='Location  w Chosen Continent' datatype='string' name='[Calculation_168673914198233088]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
        <calculation class='tableau' formula='IF [continent] = [Parameters].[Continent Parameter] THEN [location]&#10;END' />
      </column>
      <column caption='Hosp Patients w Chosen Continent' datatype='integer' name='[Calculation_46161930967990272]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [continent] = [Parameters].[Continent Parameter] THEN [hosp_patients]&#10;ELSE 0&#10;END' />
      </column>
      <column caption='Ppl Fully Vaccinated w Chosen Continent' datatype='integer' name='[Calculation_46161930971766786]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [continent] = [Parameters].[Continent Parameter] THEN [people_fully_vaccinated]&#10;ELSE 0&#10;END' />
      </column>
      <column caption='7 days Avg New Cases w Chosen Continent' datatype='real' name='[New Cases w Chosen Continent (copy)_113786292398751745]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_AVG(SUM([Calculation_113786292388573184]), -6, 0)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='New Deaths w Chosen Continent' datatype='integer' name='[New Cases w Chosen Continent (copy)_113786292401016834]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [continent] = [Parameters].[Continent Parameter] THEN [new_deaths]&#10;ELSE 0&#10;END' />
      </column>
      <column caption='Positive Rate w Chosen Continent' datatype='real' name='[New Deaths w Chosen Continent (copy)_113786292404805636]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [continent] = [Parameters].[Continent Parameter] THEN [positive_rate]&#10;ELSE 0&#10;END' />
      </column>
      <column caption='New Tests w Chosen Continent' datatype='integer' name='[New Deaths w Chosen Continent (copy)_113786292446183430]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [continent] = [Parameters].[Continent Parameter] THEN [new_tests]&#10;ELSE 0&#10;END' />
      </column>
      <column caption='New Deaths Per Mil w Chosen Country' datatype='real' name='[New Deaths w Chosen Continent (copy)_168673914199609346]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [continent] = [Parameters].[Continent Parameter] THEN [new_deaths_per_million]&#10;ELSE 0&#10;END' />
      </column>
      <column caption='New Vaccinations w Chosen Continent' datatype='integer' name='[New Tests w Chosen Continent (copy)_28780849682558976]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [continent] = [Parameters].[Continent Parameter] THEN [new_vaccinations]&#10;ELSE 0&#10;END' />
      </column>
      <column caption='Ppl Fully Vaccinated Rate' datatype='real' name='[Ppl Fully Vaccinated w Chosen Continent (copy)_46161930972540931]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_46161930971766786]/ [population]' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='CovidDeaths_cleaned.csv' datatype='table' name='[__tableau_internal_object_id__].[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]' role='measure' type='quantitative' />
      <column caption='Aged 65 Older' datatype='real' name='[aged_65_older]' role='measure' type='quantitative' />
      <column caption='Aged 70 Older' datatype='real' name='[aged_70_older]' role='measure' type='quantitative' />
      <column caption='Cardiovasc Death Rate' datatype='real' name='[cardiovasc_death_rate]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[continent]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Diabetes Prevalence' datatype='real' name='[diabetes_prevalence]' role='measure' type='quantitative' />
      <column caption='Extreme Poverty' datatype='real' name='[extreme_poverty]' role='measure' type='quantitative' />
      <column caption='Female Smokers' datatype='real' name='[female_smokers]' role='measure' type='quantitative' />
      <column caption='Gdp Per Capita' datatype='real' name='[gdp_per_capita]' role='measure' type='quantitative' />
      <column caption='Handwashing Facilities' datatype='real' name='[handwashing_facilities]' role='measure' type='quantitative' />
      <column caption='Hosp Patients' datatype='integer' name='[hosp_patients]' role='measure' type='quantitative' />
      <column caption='Hosp Patients Per Million' datatype='integer' name='[hosp_patients_per_million]' role='measure' type='quantitative' />
      <column caption='Hospital Beds Per Thousand' datatype='real' name='[hospital_beds_per_thousand]' role='measure' type='quantitative' />
      <column caption='Human Development Index' datatype='real' name='[human_development_index]' role='measure' type='quantitative' />
      <column caption='Icu Patients' datatype='integer' name='[icu_patients]' role='measure' type='quantitative' />
      <column caption='Icu Patients Per Million' datatype='integer' name='[icu_patients_per_million]' role='measure' type='quantitative' />
      <column caption='Iso Code' datatype='string' name='[iso_code]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Life Expectancy' datatype='real' name='[life_expectancy]' role='measure' type='quantitative' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Male Smokers' datatype='real' name='[male_smokers]' role='measure' type='quantitative' />
      <column caption='Median Age' datatype='real' name='[median_age]' role='measure' type='quantitative' />
      <column caption='New Cases' datatype='integer' name='[new_cases]' role='measure' type='quantitative' />
      <column caption='New Cases Per Million' datatype='real' name='[new_cases_per_million]' role='measure' type='quantitative' />
      <column caption='New Cases Smoothed' datatype='real' name='[new_cases_smoothed]' role='measure' type='quantitative' />
      <column caption='New Cases Smoothed Per Million' datatype='real' name='[new_cases_smoothed_per_million]' role='measure' type='quantitative' />
      <column caption='New Deaths' datatype='integer' name='[new_deaths]' role='measure' type='quantitative' />
      <column caption='New Deaths Per Million' datatype='real' name='[new_deaths_per_million]' role='measure' type='quantitative' />
      <column caption='New Deaths Smoothed' datatype='real' name='[new_deaths_smoothed]' role='measure' type='quantitative' />
      <column caption='New Deaths Smoothed Per Million' datatype='real' name='[new_deaths_smoothed_per_million]' role='measure' type='quantitative' />
      <column caption='New Tests' datatype='integer' name='[new_tests]' role='measure' type='quantitative' />
      <column caption='New Tests Per Thousand' datatype='real' name='[new_tests_per_thousand]' role='measure' type='quantitative' />
      <column caption='New Tests Smoothed' datatype='integer' name='[new_tests_smoothed]' role='measure' type='quantitative' />
      <column caption='New Tests Smoothed Per Thousand' datatype='real' name='[new_tests_smoothed_per_thousand]' role='measure' type='quantitative' />
      <column caption='New Vaccinations' datatype='integer' name='[new_vaccinations]' role='measure' type='quantitative' />
      <column caption='New Vaccinations Smoothed' datatype='integer' name='[new_vaccinations_smoothed]' role='measure' type='quantitative' />
      <column caption='New Vaccinations Smoothed Per Million' datatype='integer' name='[new_vaccinations_smoothed_per_million]' role='measure' type='quantitative' />
      <column caption='People Fully Vaccinated' datatype='integer' name='[people_fully_vaccinated]' role='measure' type='quantitative' />
      <column caption='People Fully Vaccinated Per Hundred' datatype='real' name='[people_fully_vaccinated_per_hundred]' role='measure' type='quantitative' />
      <column caption='People Vaccinated' datatype='integer' name='[people_vaccinated]' role='measure' type='quantitative' />
      <column caption='People Vaccinated Per Hundred' datatype='real' name='[people_vaccinated_per_hundred]' role='measure' type='quantitative' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <column caption='Population Density' datatype='real' name='[population_density]' role='measure' type='quantitative' />
      <column caption='Positive Rate' datatype='real' name='[positive_rate]' role='measure' type='quantitative' />
      <column caption='Reproduction Rate' datatype='real' name='[reproduction_rate]' role='measure' type='quantitative' />
      <column caption='Stringency Index' datatype='real' name='[stringency_index]' role='measure' type='quantitative' />
      <column caption='Tests Per Case' datatype='real' name='[tests_per_case]' role='measure' type='quantitative' />
      <column caption='Tests Units' datatype='string' name='[tests_units]' role='dimension' type='nominal' />
      <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Cases Per Million' datatype='real' name='[total_cases_per_million]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
      <column caption='Total Deaths Per Million' datatype='real' name='[total_deaths_per_million]' role='measure' type='quantitative' />
      <column caption='Total Tests' datatype='integer' name='[total_tests]' role='measure' type='quantitative' />
      <column caption='Total Tests Per Thousand' datatype='real' name='[total_tests_per_thousand]' role='measure' type='quantitative' />
      <column caption='Total Vaccinations' datatype='integer' name='[total_vaccinations]' role='measure' type='quantitative' />
      <column caption='Total Vaccinations Per Hundred' datatype='real' name='[total_vaccinations_per_hundred]' role='measure' type='quantitative' />
      <column caption='Weekly Hosp Admissions' datatype='integer' name='[weekly_hosp_admissions]' role='measure' type='quantitative' />
      <column caption='Weekly Hosp Admissions Per Million' datatype='integer' name='[weekly_hosp_admissions_per_million]' role='measure' type='quantitative' />
      <column caption='Weekly Icu Admissions' datatype='integer' name='[weekly_icu_admissions]' role='measure' type='quantitative' />
      <column caption='Weekly Icu Admissions Per Million' datatype='integer' name='[weekly_icu_admissions_per_million]' role='measure' type='quantitative' />
      <column-instance column='[New Deaths w Chosen Continent (copy)_113786292404805636]' derivation='Avg' name='[avg:New Deaths w Chosen Continent (copy)_113786292404805636:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_168673914198233088]' derivation='None' name='[none:Calculation_168673914198233088:nk]' pivot='key' type='nominal' />
      <column-instance column='[new_deaths_per_million]' derivation='None' name='[none:new_deaths_per_million:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_113786292388573184]' derivation='Sum' name='[sum:Calculation_113786292388573184:qk]' pivot='key' type='quantitative' />
      <column-instance column='[New Cases w Chosen Continent (copy)_113786292401016834]' derivation='Sum' name='[sum:New Cases w Chosen Continent (copy)_113786292401016834:qk]' pivot='key' type='quantitative' />
      <column-instance column='[New Deaths w Chosen Continent (copy)_113786292404805636]' derivation='Sum' name='[sum:New Deaths w Chosen Continent (copy)_113786292404805636:qk]' pivot='key' type='quantitative' />
      <column-instance column='[New Deaths w Chosen Continent (copy)_113786292446183430]' derivation='Sum' name='[sum:New Deaths w Chosen Continent (copy)_113786292446183430:qk]' pivot='key' type='quantitative' />
      <column-instance column='[New Tests w Chosen Continent (copy)_28780849682558976]' derivation='Sum' name='[sum:New Tests w Chosen Continent (copy)_28780849682558976:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_deaths_per_million]' derivation='Sum' name='[sum:new_deaths_per_million:qk]' pivot='key' type='quantitative' />
      <column-instance column='[7 days Avg New Cases w Chosen Continent (copy)_113786292401340419]' derivation='User' name='[usr:7 days Avg New Cases w Chosen Continent (copy)_113786292401340419:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <column-instance column='[7 days Avg New Deaths w Chosen Continent (copy)_113786292446449671]' derivation='User' name='[usr:7 days Avg New Deaths w Chosen Continent (copy)_113786292446449671:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <column-instance column='[7 days Avg New Tests w Chosen Continent (copy)_28780849682935809]' derivation='User' name='[usr:7 days Avg New Tests w Chosen Continent (copy)_28780849682935809:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <column-instance column='[New Cases w Chosen Continent (copy)_113786292398751745]' derivation='User' name='[usr:New Cases w Chosen Continent (copy)_113786292398751745:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <drill-paths>
        <drill-path name='Location Hierachy'>
          <field>[continent]</field>
          <field>[location]</field>
        </drill-path>
      </drill-paths>
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='/var/folders/pz/x922ffzx1z77z1strd8qk2qh0000gn/T/tableau-temp/#TableauTemp_05y8sx203mbz3v18wbl6t01yokcx.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='01/03/2025 09:52:49 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>iso_code</remote-name>
              <remote-type>129</remote-type>
              <local-name>[iso_code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>iso_code</remote-alias>
              <ordinal>0</ordinal>
              <family>CovidDeaths_cleaned.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>289</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>continent</remote-name>
              <remote-type>129</remote-type>
              <local-name>[continent]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>continent</remote-alias>
              <ordinal>1</ordinal>
              <family>CovidDeaths_cleaned.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location</remote-alias>
              <ordinal>2</ordinal>
              <family>CovidDeaths_cleaned.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>289</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>date</remote-alias>
              <ordinal>3</ordinal>
              <family>CovidDeaths_cleaned.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1291</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_cases</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_cases]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_cases</remote-alias>
              <ordinal>4</ordinal>
              <family>CovidDeaths_cleaned.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>19854</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>new_cases</remote-name>
              <remote-type>20</remote-type>
              <local-name>[new_cases]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>new_cases</remote-alias>
              <ordinal>5</ordinal>
              <family>CovidDeaths_cleaned.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5166</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>new_cases_smoothed</remote-name>
              <remote-type>5</remote-type>
              <local-name>[new_cases_smoothed]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>new_cases_smoothed</remote-alias>
              <ordinal>6</ordinal>
              <family>CovidDeaths_cleaned.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>9498</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_deaths</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_deaths]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_deaths</remote-alias>
              <ordinal>7</ordinal>
              <family>CovidDeaths_cleaned.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6207</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>new_deaths</remote-name>
              <remote-type>20</remote-type>
              <local-name>[new_deaths]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>new_deaths</remote-alias>
              <ordinal>8</ordinal>
              <family>CovidDeaths_cleaned.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1158</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>new_deaths_smoothed</remote-name>
              <remote-type>5</remote-type>
              <local-name>[new_deaths_smoothed]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>new_deaths_smoothed</remote-alias>
              <ordinal>9</ordinal>
              <family>CovidDeaths_cleaned.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2426</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_cases_per_million</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_cases_per_million]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_cases_per_million</remote-alias>
              <ordinal>10</ordinal>
              <family>CovidDeaths_cleaned.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>34208</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>new_cases_per_million</remote-name>
              <remote-type>5</remote-type>
              <local-name>[new_cases_per_million]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>new_cases_per_million</remote-alias>
              <ordinal>11</ordinal>
              <family>CovidDeaths_cleaned.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>19945</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>new_cases_smoothed_per_million</remote-name>
              <remote-type>5</remote-type>
              <local-name>[new_cases_smoothed_per_million]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>new_cases_smoothed_per_million</remote-alias>
              <ordinal>12</ordinal>
              <family>CovidDeaths_cleaned.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>23122</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_deaths_per_million</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_deaths_per_million]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_deaths_per_million</remote-alias>
              <ordinal>13</ordinal>
              <family>CovidDeaths_cleaned.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>16845</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>new_deaths_per_million</remote-name>
              <remote-type>5</remote-type>
              <local-name>[new_deaths_per_million]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>new_deaths_per_million</remote-alias>
              <ordinal>14</ordinal>
              <family>CovidDeaths_cleaned.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5631</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>new_deaths_smoothed_per_million</remote-name>
              <remote-type>5</remote-type>
              <local-name>[new_deaths_smoothed_per_million]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>new_deaths_smoothed_per_million</remote-alias>
              <ordinal>15</ordinal>
              <family>CovidDeaths_cleaned.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6080</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>reproduction_rate</remote-name>
              <remote-type>5</remote-type>
              <local-name>[reproduction_rate]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>reproduction_rate</remote-alias>
              <ordinal>16</ordinal>
              <family>CovidDeaths_cleaned.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>513</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>icu_patients</remote-name>
              <remote-type>20</remote-type>
              <local-name>[icu_patients]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>icu_patients</remote-alias>
              <ordinal>17</ordinal>
              <family>CovidDeaths_cleaned.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3002</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>icu_patients_per_million</remote-name>
              <remote-type>20</remote-type>
              <local-name>[icu_patients_per_million]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>icu_patients_per_million</remote-alias>
              <ordinal>18</ordinal>
              <family>CovidDeaths_cleaned.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>hosp_patients</remote-name>
              <remote-type>20</remote-type>
              <local-name>[hosp_patients]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>hosp_patients</remote-alias>
              <ordinal>19</ordinal>
              <family>CovidDeaths_cleaned.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4990</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>hosp_patients_per_million</remote-name>
              <remote-type>20</remote-type>
              <local-name>[hosp_patients_per_million]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>hosp_patients_per_million</remote-alias>
              <ordinal>20</ordinal>
              <family>CovidDeaths_cleaned.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>weekly_icu_admissions</remote-name>
              <remote-type>20</remote-type>
              <local-name>[weekly_icu_admissions]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>weekly_icu_admissions</remote-alias>
              <ordinal>21</ordinal>
              <family>CovidDeaths_cleaned.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>weekly_icu_admissions_per_million</remote-name>
              <remote-type>20</remote-type>
              <local-name>[weekly_icu_admissions_per_million]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>weekly_icu_admissions_per_million</remote-alias>
              <ordinal>22</ordinal>
              <family>CovidDeaths_cleaned.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>weekly_hosp_admissions</remote-name>
              <remote-type>20</remote-type>
              <local-name>[weekly_hosp_admissions]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>weekly_hosp_admissions</remote-alias>
              <ordinal>23</ordinal>
              <family>CovidDeaths_cleaned.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>weekly_hosp_admissions_per_million</remote-name>
              <remote-type>20</remote-type>
              <local-name>[weekly_hosp_admissions_per_million]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>weekly_hosp_admissions_per_million</remote-alias>
              <ordinal>24</ordinal>
              <family>CovidDeaths_cleaned.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>new_tests</remote-name>
              <remote-type>20</remote-type>
              <local-name>[new_tests]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>new_tests</remote-alias>
              <ordinal>25</ordinal>
              <family>CovidDeaths_cleaned.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>20746</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_tests</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_tests]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_tests</remote-alias>
              <ordinal>26</ordinal>
              <family>CovidDeaths_cleaned.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>44113</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_tests_per_thousand</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_tests_per_thousand]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_tests_per_thousand</remote-alias>
              <ordinal>27</ordinal>
              <family>CovidDeaths_cleaned.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>30292</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>new_tests_per_thousand</remote-name>
              <remote-type>5</remote-type>
              <local-name>[new_tests_per_thousand]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>new_tests_per_thousand</remote-alias>
              <ordinal>28</ordinal>
              <family>CovidDeaths_cleaned.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6636</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>new_tests_smoothed</remote-name>
              <remote-type>20</remote-type>
              <local-name>[new_tests_smoothed]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>new_tests_smoothed</remote-alias>
              <ordinal>29</ordinal>
              <family>CovidDeaths_cleaned.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>26295</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>new_tests_smoothed_per_thousand</remote-name>
              <remote-type>5</remote-type>
              <local-name>[new_tests_smoothed_per_thousand]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>new_tests_smoothed_per_thousand</remote-alias>
              <ordinal>30</ordinal>
              <family>CovidDeaths_cleaned.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6938</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>positive_rate</remote-name>
              <remote-type>5</remote-type>
              <local-name>[positive_rate]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>positive_rate</remote-alias>
              <ordinal>31</ordinal>
              <family>CovidDeaths_cleaned.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>955</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>tests_per_case</remote-name>
              <remote-type>5</remote-type>
              <local-name>[tests_per_case]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>tests_per_case</remote-alias>
              <ordinal>32</ordinal>
              <family>CovidDeaths_cleaned.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2297</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>tests_units</remote-name>
              <remote-type>129</remote-type>
              <local-name>[tests_units]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>tests_units</remote-alias>
              <ordinal>33</ordinal>
              <family>CovidDeaths_cleaned.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_vaccinations</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_vaccinations]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_vaccinations</remote-alias>
              <ordinal>34</ordinal>
              <family>CovidDeaths_cleaned.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>9184</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>people_vaccinated</remote-name>
              <remote-type>20</remote-type>
              <local-name>[people_vaccinated]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>people_vaccinated</remote-alias>
              <ordinal>35</ordinal>
              <family>CovidDeaths_cleaned.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>8068</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>people_fully_vaccinated</remote-name>
              <remote-type>20</remote-type>
              <local-name>[people_fully_vaccinated]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>people_fully_vaccinated</remote-alias>
              <ordinal>36</ordinal>
              <family>CovidDeaths_cleaned.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4309</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>new_vaccinations</remote-name>
              <remote-type>20</remote-type>
              <local-name>[new_vaccinations]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>new_vaccinations</remote-alias>
              <ordinal>37</ordinal>
              <family>CovidDeaths_cleaned.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11247</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>new_vaccinations_smoothed</remote-name>
              <remote-type>20</remote-type>
              <local-name>[new_vaccinations_smoothed]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>new_vaccinations_smoothed</remote-alias>
              <ordinal>38</ordinal>
              <family>CovidDeaths_cleaned.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6391</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_vaccinations_per_hundred</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_vaccinations_per_hundred]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_vaccinations_per_hundred</remote-alias>
              <ordinal>39</ordinal>
              <family>CovidDeaths_cleaned.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3625</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>people_vaccinated_per_hundred</remote-name>
              <remote-type>5</remote-type>
              <local-name>[people_vaccinated_per_hundred]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>people_vaccinated_per_hundred</remote-alias>
              <ordinal>40</ordinal>
              <family>CovidDeaths_cleaned.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3472</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>people_fully_vaccinated_per_hundred</remote-name>
              <remote-type>5</remote-type>
              <local-name>[people_fully_vaccinated_per_hundred]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>people_fully_vaccinated_per_hundred</remote-alias>
              <ordinal>41</ordinal>
              <family>CovidDeaths_cleaned.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3304</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>new_vaccinations_smoothed_per_million</remote-name>
              <remote-type>20</remote-type>
              <local-name>[new_vaccinations_smoothed_per_million]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>new_vaccinations_smoothed_per_million</remote-alias>
              <ordinal>42</ordinal>
              <family>CovidDeaths_cleaned.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6098</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>stringency_index</remote-name>
              <remote-type>5</remote-type>
              <local-name>[stringency_index]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>stringency_index</remote-alias>
              <ordinal>43</ordinal>
              <family>CovidDeaths_cleaned.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>277</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>population</remote-alias>
              <ordinal>44</ordinal>
              <family>CovidDeaths_cleaned.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>288</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>population_density</remote-name>
              <remote-type>5</remote-type>
              <local-name>[population_density]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>population_density</remote-alias>
              <ordinal>45</ordinal>
              <family>CovidDeaths_cleaned.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>250</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>median_age</remote-name>
              <remote-type>5</remote-type>
              <local-name>[median_age]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>median_age</remote-alias>
              <ordinal>46</ordinal>
              <family>CovidDeaths_cleaned.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>155</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>aged_65_older</remote-name>
              <remote-type>5</remote-type>
              <local-name>[aged_65_older]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>aged_65_older</remote-alias>
              <ordinal>47</ordinal>
              <family>CovidDeaths_cleaned.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>205</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>aged_70_older</remote-name>
              <remote-type>5</remote-type>
              <local-name>[aged_70_older]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>aged_70_older</remote-alias>
              <ordinal>48</ordinal>
              <family>CovidDeaths_cleaned.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>203</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>gdp_per_capita</remote-name>
              <remote-type>5</remote-type>
              <local-name>[gdp_per_capita]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>gdp_per_capita</remote-alias>
              <ordinal>49</ordinal>
              <family>CovidDeaths_cleaned.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>226</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>extreme_poverty</remote-name>
              <remote-type>5</remote-type>
              <local-name>[extreme_poverty]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>extreme_poverty</remote-alias>
              <ordinal>50</ordinal>
              <family>CovidDeaths_cleaned.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>83</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cardiovasc_death_rate</remote-name>
              <remote-type>5</remote-type>
              <local-name>[cardiovasc_death_rate]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>cardiovasc_death_rate</remote-alias>
              <ordinal>51</ordinal>
              <family>CovidDeaths_cleaned.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>211</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>diabetes_prevalence</remote-name>
              <remote-type>5</remote-type>
              <local-name>[diabetes_prevalence]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>diabetes_prevalence</remote-alias>
              <ordinal>52</ordinal>
              <family>CovidDeaths_cleaned.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>170</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>female_smokers</remote-name>
              <remote-type>5</remote-type>
              <local-name>[female_smokers]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>female_smokers</remote-alias>
              <ordinal>53</ordinal>
              <family>CovidDeaths_cleaned.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>109</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>male_smokers</remote-name>
              <remote-type>5</remote-type>
              <local-name>[male_smokers]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>male_smokers</remote-alias>
              <ordinal>54</ordinal>
              <family>CovidDeaths_cleaned.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>133</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>handwashing_facilities</remote-name>
              <remote-type>5</remote-type>
              <local-name>[handwashing_facilities]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>handwashing_facilities</remote-alias>
              <ordinal>55</ordinal>
              <family>CovidDeaths_cleaned.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>104</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>hospital_beds_per_thousand</remote-name>
              <remote-type>5</remote-type>
              <local-name>[hospital_beds_per_thousand]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>hospital_beds_per_thousand</remote-alias>
              <ordinal>56</ordinal>
              <family>CovidDeaths_cleaned.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>109</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>life_expectancy</remote-name>
              <remote-type>5</remote-type>
              <local-name>[life_expectancy]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>life_expectancy</remote-alias>
              <ordinal>57</ordinal>
              <family>CovidDeaths_cleaned.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>268</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>human_development_index</remote-name>
              <remote-type>5</remote-type>
              <local-name>[human_development_index]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>human_development_index</remote-alias>
              <ordinal>58</ordinal>
              <family>CovidDeaths_cleaned.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>176</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1sfrzyp1v45e731di51f21buvywi]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1sfrzyp1v45e731di51f21buvywi].[none:new_deaths_per_million:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1sfrzyp1v45e731di51f21buvywi].[sum:new_deaths_per_million:qk]&quot;</bucket>
            </map>
            <map to='#bfbfbf'>
              <bucket>&quot;[federated.1sfrzyp1v45e731di51f21buvywi].[sum:Calculation_113786292388573184:qk]&quot;</bucket>
            </map>
            <map to='#bfbfbf'>
              <bucket>&quot;[federated.1sfrzyp1v45e731di51f21buvywi].[sum:New Cases w Chosen Continent (copy)_113786292401016834:qk]&quot;</bucket>
            </map>
            <map to='#bfbfbf'>
              <bucket>&quot;[federated.1sfrzyp1v45e731di51f21buvywi].[sum:New Deaths w Chosen Continent (copy)_113786292446183430:qk]&quot;</bucket>
            </map>
            <map to='#bfbfbf'>
              <bucket>&quot;[federated.1sfrzyp1v45e731di51f21buvywi].[sum:New Tests w Chosen Continent (copy)_28780849682558976:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1sfrzyp1v45e731di51f21buvywi].[avg:New Deaths w Chosen Continent (copy)_113786292404805636:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1sfrzyp1v45e731di51f21buvywi].[sum:New Deaths w Chosen Continent (copy)_113786292404805636:qk]&quot;</bucket>
            </map>
            <map to='#ff7d00'>
              <bucket>&quot;[federated.1sfrzyp1v45e731di51f21buvywi].[usr:7 days Avg New Cases w Chosen Continent (copy)_113786292401340419:qk]&quot;</bucket>
            </map>
            <map to='#ff7d00'>
              <bucket>&quot;[federated.1sfrzyp1v45e731di51f21buvywi].[usr:7 days Avg New Deaths w Chosen Continent (copy)_113786292446449671:qk]&quot;</bucket>
            </map>
            <map to='#ff7d00'>
              <bucket>&quot;[federated.1sfrzyp1v45e731di51f21buvywi].[usr:7 days Avg New Tests w Chosen Continent (copy)_28780849682935809:qk]&quot;</bucket>
            </map>
            <map to='#ff7d00'>
              <bucket>&quot;[federated.1sfrzyp1v45e731di51f21buvywi].[usr:New Cases w Chosen Continent (copy)_113786292398751745:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_168673914198233088:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='iso_code' />
        <field-sort-custom-order field='continent' />
        <field-sort-custom-order field='location' />
        <field-sort-custom-order field='date' />
        <field-sort-custom-order field='total_cases' />
        <field-sort-custom-order field='new_cases' />
        <field-sort-custom-order field='new_cases_smoothed' />
        <field-sort-custom-order field='total_deaths' />
        <field-sort-custom-order field='new_deaths' />
        <field-sort-custom-order field='new_deaths_smoothed' />
        <field-sort-custom-order field='total_cases_per_million' />
        <field-sort-custom-order field='new_cases_per_million' />
        <field-sort-custom-order field='new_cases_smoothed_per_million' />
        <field-sort-custom-order field='total_deaths_per_million' />
        <field-sort-custom-order field='new_deaths_per_million' />
        <field-sort-custom-order field='new_deaths_smoothed_per_million' />
        <field-sort-custom-order field='reproduction_rate' />
        <field-sort-custom-order field='icu_patients' />
        <field-sort-custom-order field='icu_patients_per_million' />
        <field-sort-custom-order field='hosp_patients' />
        <field-sort-custom-order field='hosp_patients_per_million' />
        <field-sort-custom-order field='Calculation_46161930967990272' />
        <field-sort-custom-order field='weekly_icu_admissions' />
        <field-sort-custom-order field='weekly_icu_admissions_per_million' />
        <field-sort-custom-order field='weekly_hosp_admissions' />
        <field-sort-custom-order field='weekly_hosp_admissions_per_million' />
        <field-sort-custom-order field='new_tests' />
        <field-sort-custom-order field='total_tests' />
        <field-sort-custom-order field='total_tests_per_thousand' />
        <field-sort-custom-order field='new_tests_per_thousand' />
        <field-sort-custom-order field='new_tests_smoothed' />
        <field-sort-custom-order field='new_tests_smoothed_per_thousand' />
        <field-sort-custom-order field='positive_rate' />
        <field-sort-custom-order field='tests_per_case' />
        <field-sort-custom-order field='tests_units' />
        <field-sort-custom-order field='total_vaccinations' />
        <field-sort-custom-order field='people_vaccinated' />
        <field-sort-custom-order field='people_fully_vaccinated' />
        <field-sort-custom-order field='new_vaccinations' />
        <field-sort-custom-order field='new_vaccinations_smoothed' />
        <field-sort-custom-order field='total_vaccinations_per_hundred' />
        <field-sort-custom-order field='people_vaccinated_per_hundred' />
        <field-sort-custom-order field='people_fully_vaccinated_per_hundred' />
        <field-sort-custom-order field='Calculation_46161930971766786' />
        <field-sort-custom-order field='Ppl Fully Vaccinated w Chosen Continent (copy)_46161930972540931' />
        <field-sort-custom-order field='new_vaccinations_smoothed_per_million' />
        <field-sort-custom-order field='stringency_index' />
        <field-sort-custom-order field='population' />
        <field-sort-custom-order field='population_density' />
        <field-sort-custom-order field='median_age' />
        <field-sort-custom-order field='aged_65_older' />
        <field-sort-custom-order field='aged_70_older' />
        <field-sort-custom-order field='gdp_per_capita' />
        <field-sort-custom-order field='extreme_poverty' />
        <field-sort-custom-order field='cardiovasc_death_rate' />
        <field-sort-custom-order field='diabetes_prevalence' />
        <field-sort-custom-order field='female_smokers' />
        <field-sort-custom-order field='male_smokers' />
        <field-sort-custom-order field='handwashing_facilities' />
        <field-sort-custom-order field='hospital_beds_per_thousand' />
        <field-sort-custom-order field='life_expectancy' />
        <field-sort-custom-order field='human_development_index' />
        <field-sort-custom-order field='Calculation_113786292388573184' />
        <field-sort-custom-order field='Calculation_113786292406697989' />
        <field-sort-custom-order field='Calculation_168673914198233088' />
        <field-sort-custom-order field='New Cases w Chosen Continent (copy)_113786292401016834' />
        <field-sort-custom-order field='New Deaths w Chosen Continent (copy)_113786292404805636' />
        <field-sort-custom-order field='New Deaths w Chosen Continent (copy)_113786292446183430' />
        <field-sort-custom-order field='New Deaths w Chosen Continent (copy)_168673914199609346' />
        <field-sort-custom-order field='New Tests w Chosen Continent (copy)_28780849682558976' />
        <field-sort-custom-order field='Geometry (generated)' />
        <field-sort-custom-order field='Latitude (generated)' />
        <field-sort-custom-order field='Longitude (generated)' />
        <field-sort-custom-order field=':Measure Names' />
        <field-sort-custom-order field='Multiple Values' />
      </field-sort-info>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Select Continent' datatype='string' name='[Continent Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;North America&quot;'>
          <calculation class='tableau' formula='&quot;North America&quot;' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='CovidDeaths_cleaned.csv' id='CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A'>
            <properties context=''>
              <relation connection='textscan.11mfhmv09f8irm1g1he5d02k6pq9' name='CovidDeaths_cleaned.csv' table='[CovidDeaths_cleaned#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='iso_code' ordinal='0' />
                  <column datatype='string' name='continent' ordinal='1' />
                  <column datatype='string' name='location' ordinal='2' />
                  <column datatype='date' name='date' ordinal='3' />
                  <column datatype='integer' name='total_cases' ordinal='4' />
                  <column datatype='integer' name='new_cases' ordinal='5' />
                  <column datatype='real' name='new_cases_smoothed' ordinal='6' />
                  <column datatype='integer' name='total_deaths' ordinal='7' />
                  <column datatype='integer' name='new_deaths' ordinal='8' />
                  <column datatype='real' name='new_deaths_smoothed' ordinal='9' />
                  <column datatype='real' name='total_cases_per_million' ordinal='10' />
                  <column datatype='real' name='new_cases_per_million' ordinal='11' />
                  <column datatype='real' name='new_cases_smoothed_per_million' ordinal='12' />
                  <column datatype='real' name='total_deaths_per_million' ordinal='13' />
                  <column datatype='real' name='new_deaths_per_million' ordinal='14' />
                  <column datatype='real' name='new_deaths_smoothed_per_million' ordinal='15' />
                  <column datatype='real' name='reproduction_rate' ordinal='16' />
                  <column datatype='integer' name='icu_patients' ordinal='17' />
                  <column datatype='integer' name='icu_patients_per_million' ordinal='18' />
                  <column datatype='integer' name='hosp_patients' ordinal='19' />
                  <column datatype='integer' name='hosp_patients_per_million' ordinal='20' />
                  <column datatype='integer' name='weekly_icu_admissions' ordinal='21' />
                  <column datatype='integer' name='weekly_icu_admissions_per_million' ordinal='22' />
                  <column datatype='integer' name='weekly_hosp_admissions' ordinal='23' />
                  <column datatype='integer' name='weekly_hosp_admissions_per_million' ordinal='24' />
                  <column datatype='integer' name='new_tests' ordinal='25' />
                  <column datatype='integer' name='total_tests' ordinal='26' />
                  <column datatype='real' name='total_tests_per_thousand' ordinal='27' />
                  <column datatype='real' name='new_tests_per_thousand' ordinal='28' />
                  <column datatype='integer' name='new_tests_smoothed' ordinal='29' />
                  <column datatype='real' name='new_tests_smoothed_per_thousand' ordinal='30' />
                  <column datatype='real' name='positive_rate' ordinal='31' />
                  <column datatype='real' name='tests_per_case' ordinal='32' />
                  <column datatype='string' name='tests_units' ordinal='33' />
                  <column datatype='integer' name='total_vaccinations' ordinal='34' />
                  <column datatype='integer' name='people_vaccinated' ordinal='35' />
                  <column datatype='integer' name='people_fully_vaccinated' ordinal='36' />
                  <column datatype='integer' name='new_vaccinations' ordinal='37' />
                  <column datatype='integer' name='new_vaccinations_smoothed' ordinal='38' />
                  <column datatype='real' name='total_vaccinations_per_hundred' ordinal='39' />
                  <column datatype='real' name='people_vaccinated_per_hundred' ordinal='40' />
                  <column datatype='real' name='people_fully_vaccinated_per_hundred' ordinal='41' />
                  <column datatype='integer' name='new_vaccinations_smoothed_per_million' ordinal='42' />
                  <column datatype='real' name='stringency_index' ordinal='43' />
                  <column datatype='integer' name='population' ordinal='44' />
                  <column datatype='real' name='population_density' ordinal='45' />
                  <column datatype='real' name='median_age' ordinal='46' />
                  <column datatype='real' name='aged_65_older' ordinal='47' />
                  <column datatype='real' name='aged_70_older' ordinal='48' />
                  <column datatype='real' name='gdp_per_capita' ordinal='49' />
                  <column datatype='real' name='extreme_poverty' ordinal='50' />
                  <column datatype='real' name='cardiovasc_death_rate' ordinal='51' />
                  <column datatype='real' name='diabetes_prevalence' ordinal='52' />
                  <column datatype='real' name='female_smokers' ordinal='53' />
                  <column datatype='real' name='male_smokers' ordinal='54' />
                  <column datatype='real' name='handwashing_facilities' ordinal='55' />
                  <column datatype='real' name='hospital_beds_per_thousand' ordinal='56' />
                  <column datatype='real' name='life_expectancy' ordinal='57' />
                  <column datatype='real' name='human_development_index' ordinal='58' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1_825EEC6415FF4468AAED8F61ACDE2F14]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='New Cases' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Measure Names' />
        <param name='target' value='New Cases' />
      </command>
    </action>
    <action caption='Highlight 1 (generated) 1' name='[Action2_83217D5EBBC941D2B34C832EDFD77298]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='New Deaths' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Measure Names' />
        <param name='target' value='New Deaths' />
      </command>
    </action>
    <action caption='Highlight 1 (generated) 1 1' name='[Action3_A36E38E5BCDB42EBBB7532636119893E]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Positive Rate' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Measure Names' />
        <param name='target' value='Positive Rate' />
      </command>
    </action>
    <action caption='Highlight 1 (generated) 1 1 1' name='[Action4_CF667819259C4228B504EA829C5EC44E]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='New Tests ' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Measure Names' />
        <param name='target' value='New Tests ' />
      </command>
    </action>
    <action caption='Highlight 1 (generated) 1 1 1 1' name='[Action5_99AB0E040E6A41DEA945F178CCB60E17]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='New Vaccinations' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Measure Names' />
        <param name='target' value='New Vaccinations' />
      </command>
    </action>
    <action caption='Highlight 1 (generated) 1 1 1 1 1' name='[Action6_7A4EA083941F4A4B98444B7A4A40CB2C]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Fully Vaccinated ' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Measure Names' />
        <param name='target' value='Fully Vaccinated ' />
      </command>
    </action>
    <action caption='Highlight 1 (generated) 1 1 1 1 1 1' name='[Action7_32C5854859AC4636B5F774D139C520EC]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Map total cases' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Measure Names' />
        <param name='target' value='Map total cases' />
      </command>
    </action>
    <action caption='Highlight 1 (generated) 1 1 1 1 1 2' name='[Action9_FD0852B1E82D4CA88E7AA134BCE75301]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Hosp Patients' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Measure Names' />
        <param name='target' value='Hosp Patients' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Continent'>
      <table>
        <view>
          <datasources>
            <datasource caption='CovidDeaths_cleaned' name='federated.1sfrzyp1v45e731di51f21buvywi' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select Continent' datatype='string' name='[Continent Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;North America&quot;'>
              <calculation class='tableau' formula='&quot;North America&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1sfrzyp1v45e731di51f21buvywi'>
            <column caption='New Cases w Chosen Continent' datatype='integer' name='[Calculation_113786292388573184]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [continent] = [Parameters].[Continent Parameter] THEN [new_cases]&#10;ELSE 0&#10;END' />
            </column>
            <column caption='New Deaths w Chosen Continent' datatype='integer' name='[New Cases w Chosen Continent (copy)_113786292401016834]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [continent] = [Parameters].[Continent Parameter] THEN [new_deaths]&#10;ELSE 0&#10;END' />
            </column>
            <column caption='Positive Rate w Chosen Continent' datatype='real' name='[New Deaths w Chosen Continent (copy)_113786292404805636]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [continent] = [Parameters].[Continent Parameter] THEN [positive_rate]&#10;ELSE 0&#10;END' />
            </column>
            <column-instance column='[New Deaths w Chosen Continent (copy)_113786292404805636]' derivation='Avg' name='[avg:New Deaths w Chosen Continent (copy)_113786292404805636:qk]' pivot='key' type='quantitative' />
            <column-instance column='[tests_per_case]' derivation='Avg' name='[avg:tests_per_case:qk]' pivot='key' type='quantitative' />
            <column caption='Continent' datatype='string' name='[continent]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='New Cases' datatype='integer' name='[new_cases]' role='measure' type='quantitative' />
            <column caption='New Deaths' datatype='integer' name='[new_deaths]' role='measure' type='quantitative' />
            <column caption='Positive Rate' datatype='real' name='[positive_rate]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_113786292388573184]' derivation='Sum' name='[sum:Calculation_113786292388573184:qk]' pivot='key' type='quantitative' />
            <column-instance column='[New Cases w Chosen Continent (copy)_113786292401016834]' derivation='Sum' name='[sum:New Cases w Chosen Continent (copy)_113786292401016834:qk]' pivot='key' type='quantitative' />
            <column caption='Tests Per Case' datatype='real' name='[tests_per_case]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='tick-color' value='#00000000' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1sfrzyp1v45e731di51f21buvywi].[avg:New Deaths w Chosen Continent (copy)_113786292404805636:qk]' value='p0.0%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#ffecd1' />
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='fill-above' id='refline2' value='#00000000' />
            <format attr='fill-below' id='refline2' value='#00000000' />
            <format attr='fill-above' id='refline4' value='#00000000' />
            <format attr='fill-below' id='refline4' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='stroke-size' scope='rows' value='1' />
            <format attr='line-visibility' scope='rows' value='on' />
            <format attr='line-pattern-only' scope='rows' value='dotted' />
            <format attr='stroke-size' id='refline1' value='1' />
            <format attr='line-visibility' id='refline1' value='on' />
            <format attr='line-pattern-only' id='refline1' value='dotted' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='text-format' id='refline1' value='p0.0%' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane id='9' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Text' />
            <encodings>
              <text column='[federated.1sfrzyp1v45e731di51f21buvywi].[sum:Calculation_113786292388573184:qk]' />
              <text column='[federated.1sfrzyp1v45e731di51f21buvywi].[sum:New Cases w Chosen Continent (copy)_113786292401016834:qk]' />
              <text column='[federated.1sfrzyp1v45e731di51f21buvywi].[avg:New Deaths w Chosen Continent (copy)_113786292404805636:qk]' />
              <text column='[federated.1sfrzyp1v45e731di51f21buvywi].[avg:tests_per_case:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true'>Total Cases</run>
                <run>Æ&#10;</run>
                <run bold='true' fontsize='12'><![CDATA[<[federated.1sfrzyp1v45e731di51f21buvywi].[sum:Calculation_113786292388573184:qk]>]]></run>
                <run>Æ&#10;&#10;</run>
                <run bold='true'>Total Deaths </run>
                <run>Æ&#10;</run>
                <run bold='true' fontsize='12'><![CDATA[<[federated.1sfrzyp1v45e731di51f21buvywi].[sum:New Cases w Chosen Continent (copy)_113786292401016834:qk]>]]></run>
                <run>Æ&#10;&#10;</run>
                <run bold='true'>Avg Positive Rate</run>
                <run>Æ&#10;</run>
                <run bold='true' fontsize='12'><![CDATA[<[federated.1sfrzyp1v45e731di51f21buvywi].[avg:New Deaths w Chosen Continent (copy)_113786292404805636:qk]>]]></run>
                <run>Æ&#10;&#10;</run>
                <run bold='true'>Avg Test Per Case</run>
                <run>Æ&#10;</run>
                <run bold='true' fontsize='12'><![CDATA[<[federated.1sfrzyp1v45e731di51f21buvywi].[avg:tests_per_case:qk]>]]></run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-color' value='#ff7d00' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{59753B35-FD79-495A-933D-178B4445C820}' />
    </worksheet>
    <worksheet name='Fully Vaccinated '>
      <table>
        <view>
          <datasources>
            <datasource caption='CovidDeaths_cleaned' name='federated.1sfrzyp1v45e731di51f21buvywi' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select Continent' datatype='string' name='[Continent Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;North America&quot;'>
              <calculation class='tableau' formula='&quot;North America&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1sfrzyp1v45e731di51f21buvywi'>
            <column caption='Location  w Chosen Continent' datatype='string' name='[Calculation_168673914198233088]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='tableau' formula='IF [continent] = [Parameters].[Continent Parameter] THEN [location]&#10;END' />
            </column>
            <column caption='Ppl Fully Vaccinated w Chosen Continent' datatype='integer' name='[Calculation_46161930971766786]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [continent] = [Parameters].[Continent Parameter] THEN [people_fully_vaccinated]&#10;ELSE 0&#10;END' />
            </column>
            <column caption='Ppl Fully Vaccinated Rate' datatype='real' name='[Ppl Fully Vaccinated w Chosen Continent (copy)_46161930972540931]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_46161930971766786]/ [population]' />
            </column>
            <column-instance column='[Ppl Fully Vaccinated w Chosen Continent (copy)_46161930972540931]' derivation='Avg' name='[avg:Ppl Fully Vaccinated w Chosen Continent (copy)_46161930972540931:qk]' pivot='key' type='quantitative' />
            <column caption='Continent' datatype='string' name='[continent]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[Calculation_168673914198233088]' derivation='None' name='[none:Calculation_168673914198233088:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='None' name='[none:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column caption='People Fully Vaccinated' datatype='integer' name='[people_fully_vaccinated]' role='measure' type='quantitative' />
            <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='tick-color' value='#00000000' />
            <format attr='title' class='0' field='[federated.1sfrzyp1v45e731di51f21buvywi].[none:date:qk]' scope='cols' value='' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#ffecd1' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='fill-above' id='refline2' value='#00000000' />
            <format attr='fill-below' id='refline2' value='#00000000' />
            <format attr='fill-above' id='refline4' value='#00000000' />
            <format attr='fill-below' id='refline4' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='stroke-size' scope='rows' value='1' />
            <format attr='line-visibility' scope='rows' value='on' />
            <format attr='line-pattern-only' scope='rows' value='dotted' />
            <format attr='stroke-size' id='refline1' value='1' />
            <format attr='line-visibility' id='refline1' value='on' />
            <format attr='line-pattern-only' id='refline1' value='dotted' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='text-format' id='refline1' value='p0.0%' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane id='19' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1sfrzyp1v45e731di51f21buvywi].[none:Calculation_168673914198233088:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#ff7d00' />
                <format attr='size' value='0.33983424305915833' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1sfrzyp1v45e731di51f21buvywi].[avg:Ppl Fully Vaccinated w Chosen Continent (copy)_46161930972540931:qk]</rows>
        <cols>[federated.1sfrzyp1v45e731di51f21buvywi].[none:date:qk]</cols>
        <pages>
          <column>[federated.1sfrzyp1v45e731di51f21buvywi].[none:date:ok]</column>
        </pages>
        <page-trail-options enabled='true' end='40' lines='true' mark-type='all' start='0' />
      </table>
      <simple-id uuid='{48972F99-8B17-4888-A83D-4FBD7D8A11C9}' />
    </worksheet>
    <worksheet name='Hosp Patients'>
      <table>
        <view>
          <datasources>
            <datasource caption='CovidDeaths_cleaned' name='federated.1sfrzyp1v45e731di51f21buvywi' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select Continent' datatype='string' name='[Continent Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;North America&quot;'>
              <calculation class='tableau' formula='&quot;North America&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1sfrzyp1v45e731di51f21buvywi'>
            <column caption='Location  w Chosen Continent' datatype='string' name='[Calculation_168673914198233088]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='tableau' formula='IF [continent] = [Parameters].[Continent Parameter] THEN [location]&#10;END' />
            </column>
            <column caption='Hosp Patients w Chosen Continent' datatype='integer' name='[Calculation_46161930967990272]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [continent] = [Parameters].[Continent Parameter] THEN [hosp_patients]&#10;ELSE 0&#10;END' />
            </column>
            <column caption='Continent' datatype='string' name='[continent]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Hosp Patients' datatype='integer' name='[hosp_patients]' role='measure' type='quantitative' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[Calculation_168673914198233088]' derivation='None' name='[none:Calculation_168673914198233088:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='None' name='[none:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_46161930967990272]' derivation='Sum' name='[sum:Calculation_46161930967990272:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='tick-color' value='#00000000' />
            <format attr='title' class='0' field='[federated.1sfrzyp1v45e731di51f21buvywi].[none:date:qk]' scope='cols' value='' />
            <format attr='display' class='0' field='[federated.1sfrzyp1v45e731di51f21buvywi].[sum:Calculation_46161930967990272:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#ffecd1' />
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='fill-above' id='refline2' value='#00000000' />
            <format attr='fill-below' id='refline2' value='#00000000' />
            <format attr='fill-above' id='refline4' value='#00000000' />
            <format attr='fill-below' id='refline4' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='stroke-size' scope='rows' value='1' />
            <format attr='line-visibility' scope='rows' value='on' />
            <format attr='line-pattern-only' scope='rows' value='dotted' />
            <format attr='stroke-size' id='refline1' value='1' />
            <format attr='line-visibility' id='refline1' value='on' />
            <format attr='line-pattern-only' id='refline1' value='dotted' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='text-format' id='refline1' value='p0.0%' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane id='17' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1sfrzyp1v45e731di51f21buvywi].[none:Calculation_168673914198233088:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#ff7d00' />
                <format attr='size' value='0.33983424305915833' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1sfrzyp1v45e731di51f21buvywi].[sum:Calculation_46161930967990272:qk]</rows>
        <cols>[federated.1sfrzyp1v45e731di51f21buvywi].[none:date:qk]</cols>
        <pages>
          <column>[federated.1sfrzyp1v45e731di51f21buvywi].[none:date:ok]</column>
        </pages>
        <page-trail-options enabled='true' end='40' lines='true' mark-type='all' start='0' />
      </table>
      <simple-id uuid='{BF198392-2348-46AF-89B8-E994C57AD43A}' />
    </worksheet>
    <worksheet name='Map total cases'>
      <table>
        <view>
          <datasources>
            <datasource caption='CovidDeaths_cleaned' name='federated.1sfrzyp1v45e731di51f21buvywi' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select Continent' datatype='string' name='[Continent Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;North America&quot;'>
              <calculation class='tableau' formula='&quot;North America&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1sfrzyp1v45e731di51f21buvywi'>
            <column caption='New Cases w Chosen Continent' datatype='integer' name='[Calculation_113786292388573184]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [continent] = [Parameters].[Continent Parameter] THEN [new_cases]&#10;ELSE 0&#10;END' />
            </column>
            <column caption='Location  w Chosen Continent' datatype='string' name='[Calculation_168673914198233088]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='tableau' formula='IF [continent] = [Parameters].[Continent Parameter] THEN [location]&#10;END' />
            </column>
            <column caption='Continent' datatype='string' name='[continent]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='New Cases' datatype='integer' name='[new_cases]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_168673914198233088]' derivation='None' name='[none:Calculation_168673914198233088:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_113786292388573184]' derivation='Sum' name='[sum:Calculation_113786292388573184:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='tick-color' value='#00000000' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#ffecd1' />
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='fill-above' id='refline2' value='#00000000' />
            <format attr='fill-below' id='refline2' value='#00000000' />
            <format attr='fill-above' id='refline4' value='#00000000' />
            <format attr='fill-below' id='refline4' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='stroke-size' scope='rows' value='1' />
            <format attr='line-visibility' scope='rows' value='on' />
            <format attr='line-pattern-only' scope='rows' value='dotted' />
            <format attr='stroke-size' id='refline1' value='1' />
            <format attr='line-visibility' id='refline1' value='on' />
            <format attr='line-pattern-only' id='refline1' value='dotted' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='text-format' id='refline1' value='p0.0%' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='15' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1sfrzyp1v45e731di51f21buvywi].[sum:Calculation_113786292388573184:qk]' />
              <lod column='[federated.1sfrzyp1v45e731di51f21buvywi].[none:Calculation_168673914198233088:nk]' />
              <geometry column='[federated.1sfrzyp1v45e731di51f21buvywi].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#ff7d00' />
                <format attr='size' value='2.9060773849487305' />
                <format attr='mark-transparency' value='255' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1sfrzyp1v45e731di51f21buvywi].[Latitude (generated)]</rows>
        <cols>[federated.1sfrzyp1v45e731di51f21buvywi].[Longitude (generated)]</cols>
        <page-trail-options enabled='true' end='40' lines='true' mark-type='all' start='0' />
      </table>
      <simple-id uuid='{A469EA5F-E5D5-4C0F-92F2-A3943F2F8101}' />
    </worksheet>
    <worksheet name='New Cases'>
      <table>
        <view>
          <datasources>
            <datasource caption='CovidDeaths_cleaned' name='federated.1sfrzyp1v45e731di51f21buvywi' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select Continent' datatype='string' name='[Continent Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;North America&quot;'>
              <calculation class='tableau' formula='&quot;North America&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1sfrzyp1v45e731di51f21buvywi'>
            <column caption='New Cases w Chosen Continent' datatype='integer' name='[Calculation_113786292388573184]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [continent] = [Parameters].[Continent Parameter] THEN [new_cases]&#10;ELSE 0&#10;END' />
            </column>
            <column caption='7 days Avg New Cases w Chosen Continent' datatype='real' name='[New Cases w Chosen Continent (copy)_113786292398751745]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='WINDOW_AVG(SUM([Calculation_113786292388573184]), -6, 0)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Continent' datatype='string' name='[continent]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='New Cases' datatype='integer' name='[new_cases]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_113786292388573184]' derivation='Sum' name='[sum:Calculation_113786292388573184:qk]' pivot='key' type='quantitative' />
            <column-instance column='[New Cases w Chosen Continent (copy)_113786292398751745]' derivation='User' name='[usr:New Cases w Chosen Continent (copy)_113786292398751745:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1sfrzyp1v45e731di51f21buvywi].[sum:Calculation_113786292388573184:qk]' field-type='quantitative' scope='rows' type='space' />
            <format attr='display' class='0' field='[federated.1sfrzyp1v45e731di51f21buvywi].[sum:Calculation_113786292388573184:qk]' scope='rows' value='false' />
            <format attr='tick-color' value='#00000000' />
            <format attr='title' class='0' field='[federated.1sfrzyp1v45e731di51f21buvywi].[none:date:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1sfrzyp1v45e731di51f21buvywi].[none:date:qk]' scope='cols' value='false' />
            <encoding attr='space' class='0' field='[federated.1sfrzyp1v45e731di51f21buvywi].[usr:New Cases w Chosen Continent (copy)_113786292398751745:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='0' field='[federated.1sfrzyp1v45e731di51f21buvywi].[usr:New Cases w Chosen Continent (copy)_113786292398751745:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#ffecd1' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1sfrzyp1v45e731di51f21buvywi].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#ff7d00' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1sfrzyp1v45e731di51f21buvywi].[usr:New Cases w Chosen Continent (copy)_113786292398751745:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1sfrzyp1v45e731di51f21buvywi].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#ff7d00' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1sfrzyp1v45e731di51f21buvywi].[sum:Calculation_113786292388573184:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1sfrzyp1v45e731di51f21buvywi].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#c0c0c0' />
                <format attr='mark-transparency' value='129' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1sfrzyp1v45e731di51f21buvywi].[sum:Calculation_113786292388573184:qk] + [federated.1sfrzyp1v45e731di51f21buvywi].[usr:New Cases w Chosen Continent (copy)_113786292398751745:qk])</rows>
        <cols>[federated.1sfrzyp1v45e731di51f21buvywi].[none:date:qk]</cols>
      </table>
      <simple-id uuid='{7907116C-398A-4703-ADAF-71DB0278C690}' />
    </worksheet>
    <worksheet name='New Deaths'>
      <table>
        <view>
          <datasources>
            <datasource caption='CovidDeaths_cleaned' name='federated.1sfrzyp1v45e731di51f21buvywi' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select Continent' datatype='string' name='[Continent Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;North America&quot;'>
              <calculation class='tableau' formula='&quot;North America&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1sfrzyp1v45e731di51f21buvywi'>
            <column caption='7 days Avg New Deaths w Chosen Continent' datatype='real' name='[7 days Avg New Cases w Chosen Continent (copy)_113786292401340419]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='WINDOW_AVG(SUM([New Cases w Chosen Continent (copy)_113786292401016834]), -6, 0)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='New Deaths w Chosen Continent' datatype='integer' name='[New Cases w Chosen Continent (copy)_113786292401016834]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [continent] = [Parameters].[Continent Parameter] THEN [new_deaths]&#10;ELSE 0&#10;END' />
            </column>
            <column caption='Continent' datatype='string' name='[continent]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='New Deaths' datatype='integer' name='[new_deaths]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[New Cases w Chosen Continent (copy)_113786292401016834]' derivation='Sum' name='[sum:New Cases w Chosen Continent (copy)_113786292401016834:qk]' pivot='key' type='quantitative' />
            <column-instance column='[7 days Avg New Cases w Chosen Continent (copy)_113786292401340419]' derivation='User' name='[usr:7 days Avg New Cases w Chosen Continent (copy)_113786292401340419:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='tick-color' value='#00000000' />
            <format attr='title' class='0' field='[federated.1sfrzyp1v45e731di51f21buvywi].[none:date:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1sfrzyp1v45e731di51f21buvywi].[none:date:qk]' scope='cols' value='false' />
            <encoding attr='space' class='0' field='[federated.1sfrzyp1v45e731di51f21buvywi].[usr:7 days Avg New Cases w Chosen Continent (copy)_113786292401340419:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='0' field='[federated.1sfrzyp1v45e731di51f21buvywi].[usr:7 days Avg New Cases w Chosen Continent (copy)_113786292401340419:qk]' scope='rows' value='false' />
            <format attr='display' class='0' field='[federated.1sfrzyp1v45e731di51f21buvywi].[sum:New Cases w Chosen Continent (copy)_113786292401016834:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#ffecd1' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1sfrzyp1v45e731di51f21buvywi].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#ff7d00' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1sfrzyp1v45e731di51f21buvywi].[sum:New Cases w Chosen Continent (copy)_113786292401016834:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1sfrzyp1v45e731di51f21buvywi].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#ff7d00' />
                <format attr='mark-transparency' value='129' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1sfrzyp1v45e731di51f21buvywi].[usr:7 days Avg New Cases w Chosen Continent (copy)_113786292401340419:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1sfrzyp1v45e731di51f21buvywi].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#ff7d00' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1sfrzyp1v45e731di51f21buvywi].[sum:New Cases w Chosen Continent (copy)_113786292401016834:qk] + [federated.1sfrzyp1v45e731di51f21buvywi].[usr:7 days Avg New Cases w Chosen Continent (copy)_113786292401340419:qk])</rows>
        <cols>[federated.1sfrzyp1v45e731di51f21buvywi].[none:date:qk]</cols>
      </table>
      <simple-id uuid='{38902BD9-1611-40B9-B2E2-A2712B5C51F1}' />
    </worksheet>
    <worksheet name='New Tests '>
      <table>
        <view>
          <datasources>
            <datasource caption='CovidDeaths_cleaned' name='federated.1sfrzyp1v45e731di51f21buvywi' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select Continent' datatype='string' name='[Continent Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;North America&quot;'>
              <calculation class='tableau' formula='&quot;North America&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1sfrzyp1v45e731di51f21buvywi'>
            <column caption='7 days Avg New Tests w Chosen Continent' datatype='real' name='[7 days Avg New Deaths w Chosen Continent (copy)_113786292446449671]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='WINDOW_AVG(SUM([New Deaths w Chosen Continent (copy)_113786292446183430]), -6, 0)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='New Tests w Chosen Continent' datatype='integer' name='[New Deaths w Chosen Continent (copy)_113786292446183430]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [continent] = [Parameters].[Continent Parameter] THEN [new_tests]&#10;ELSE 0&#10;END' />
            </column>
            <column caption='Continent' datatype='string' name='[continent]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='New Tests' datatype='integer' name='[new_tests]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[New Deaths w Chosen Continent (copy)_113786292446183430]' derivation='Sum' name='[sum:New Deaths w Chosen Continent (copy)_113786292446183430:qk]' pivot='key' type='quantitative' />
            <column-instance column='[7 days Avg New Deaths w Chosen Continent (copy)_113786292446449671]' derivation='User' name='[usr:7 days Avg New Deaths w Chosen Continent (copy)_113786292446449671:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='tick-color' value='#00000000' />
            <encoding attr='space' class='0' field='[federated.1sfrzyp1v45e731di51f21buvywi].[usr:7 days Avg New Deaths w Chosen Continent (copy)_113786292446449671:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='0' field='[federated.1sfrzyp1v45e731di51f21buvywi].[usr:7 days Avg New Deaths w Chosen Continent (copy)_113786292446449671:qk]' scope='rows' value='false' />
            <format attr='display' class='0' field='[federated.1sfrzyp1v45e731di51f21buvywi].[sum:New Deaths w Chosen Continent (copy)_113786292446183430:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#ffecd1' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='fill-above' id='refline2' value='#00000000' />
            <format attr='fill-below' id='refline2' value='#00000000' />
            <format attr='fill-above' id='refline4' value='#00000000' />
            <format attr='fill-below' id='refline4' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='stroke-size' scope='rows' value='1' />
            <format attr='line-visibility' scope='rows' value='on' />
            <format attr='line-pattern-only' scope='rows' value='dotted' />
            <format attr='stroke-size' id='refline1' value='1' />
            <format attr='line-visibility' id='refline1' value='on' />
            <format attr='line-pattern-only' id='refline1' value='dotted' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='text-format' id='refline1' value='p0.0%' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1sfrzyp1v45e731di51f21buvywi].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#ff7d00' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
          <pane id='8' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1sfrzyp1v45e731di51f21buvywi].[sum:New Deaths w Chosen Continent (copy)_113786292446183430:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1sfrzyp1v45e731di51f21buvywi].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#b4b4b4' />
                <format attr='mark-transparency' value='129' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
          <pane id='9' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1sfrzyp1v45e731di51f21buvywi].[usr:7 days Avg New Deaths w Chosen Continent (copy)_113786292446449671:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1sfrzyp1v45e731di51f21buvywi].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#ff7d00' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1sfrzyp1v45e731di51f21buvywi].[sum:New Deaths w Chosen Continent (copy)_113786292446183430:qk] + [federated.1sfrzyp1v45e731di51f21buvywi].[usr:7 days Avg New Deaths w Chosen Continent (copy)_113786292446449671:qk])</rows>
        <cols>[federated.1sfrzyp1v45e731di51f21buvywi].[none:date:qk]</cols>
      </table>
      <simple-id uuid='{BA7A297F-DF0C-45E5-B487-CE0FA6824EA3}' />
    </worksheet>
    <worksheet name='New Vaccinations'>
      <table>
        <view>
          <datasources>
            <datasource caption='CovidDeaths_cleaned' name='federated.1sfrzyp1v45e731di51f21buvywi' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select Continent' datatype='string' name='[Continent Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;North America&quot;'>
              <calculation class='tableau' formula='&quot;North America&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1sfrzyp1v45e731di51f21buvywi'>
            <column caption='7 days Avg New Vaccinations w Chosen Continent' datatype='real' name='[7 days Avg New Tests w Chosen Continent (copy)_28780849682935809]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='WINDOW_AVG(SUM([New Tests w Chosen Continent (copy)_28780849682558976]), -6, 0)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='New Vaccinations w Chosen Continent' datatype='integer' name='[New Tests w Chosen Continent (copy)_28780849682558976]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [continent] = [Parameters].[Continent Parameter] THEN [new_vaccinations]&#10;ELSE 0&#10;END' />
            </column>
            <column caption='Continent' datatype='string' name='[continent]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='New Vaccinations' datatype='integer' name='[new_vaccinations]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[New Tests w Chosen Continent (copy)_28780849682558976]' derivation='Sum' name='[sum:New Tests w Chosen Continent (copy)_28780849682558976:qk]' pivot='key' type='quantitative' />
            <column-instance column='[7 days Avg New Tests w Chosen Continent (copy)_28780849682935809]' derivation='User' name='[usr:7 days Avg New Tests w Chosen Continent (copy)_28780849682935809:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='tick-color' value='#00000000' />
            <encoding attr='space' class='0' field='[federated.1sfrzyp1v45e731di51f21buvywi].[usr:7 days Avg New Tests w Chosen Continent (copy)_28780849682935809:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='0' field='[federated.1sfrzyp1v45e731di51f21buvywi].[usr:7 days Avg New Tests w Chosen Continent (copy)_28780849682935809:qk]' scope='rows' value='false' />
            <format attr='display' class='0' field='[federated.1sfrzyp1v45e731di51f21buvywi].[sum:New Tests w Chosen Continent (copy)_28780849682558976:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#ffecd1' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='fill-above' id='refline2' value='#00000000' />
            <format attr='fill-below' id='refline2' value='#00000000' />
            <format attr='fill-above' id='refline4' value='#00000000' />
            <format attr='fill-below' id='refline4' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='stroke-size' scope='rows' value='1' />
            <format attr='line-visibility' scope='rows' value='on' />
            <format attr='line-pattern-only' scope='rows' value='dotted' />
            <format attr='stroke-size' id='refline1' value='1' />
            <format attr='line-visibility' id='refline1' value='on' />
            <format attr='line-pattern-only' id='refline1' value='dotted' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='text-format' id='refline1' value='p0.0%' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane id='10' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1sfrzyp1v45e731di51f21buvywi].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#ff7d00' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
          <pane id='11' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1sfrzyp1v45e731di51f21buvywi].[sum:New Tests w Chosen Continent (copy)_28780849682558976:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1sfrzyp1v45e731di51f21buvywi].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#ff7d00' />
                <format attr='mark-transparency' value='129' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
          <pane id='12' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1sfrzyp1v45e731di51f21buvywi].[usr:7 days Avg New Tests w Chosen Continent (copy)_28780849682935809:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1sfrzyp1v45e731di51f21buvywi].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#ff7d00' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1sfrzyp1v45e731di51f21buvywi].[sum:New Tests w Chosen Continent (copy)_28780849682558976:qk] + [federated.1sfrzyp1v45e731di51f21buvywi].[usr:7 days Avg New Tests w Chosen Continent (copy)_28780849682935809:qk])</rows>
        <cols>[federated.1sfrzyp1v45e731di51f21buvywi].[none:date:qk]</cols>
      </table>
      <simple-id uuid='{31B614C3-D62D-4BDF-9771-3B7384C57701}' />
    </worksheet>
    <worksheet name='Positive Rate'>
      <table>
        <view>
          <datasources>
            <datasource caption='CovidDeaths_cleaned' name='federated.1sfrzyp1v45e731di51f21buvywi' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select Continent' datatype='string' name='[Continent Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;North America&quot;'>
              <calculation class='tableau' formula='&quot;North America&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1sfrzyp1v45e731di51f21buvywi'>
            <column caption='Above Below Avg' datatype='string' name='[Calculation_113786292406697989]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF Avg([New Deaths w Chosen Continent (copy)_113786292404805636]) &gt; 0.01&#10;then &apos;above&apos;&#10;else &apos;below&apos;&#10;end' />
            </column>
            <column caption='Positive Rate w Chosen Continent' datatype='real' name='[New Deaths w Chosen Continent (copy)_113786292404805636]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [continent] = [Parameters].[Continent Parameter] THEN [positive_rate]&#10;ELSE 0&#10;END' />
            </column>
            <column-instance column='[New Deaths w Chosen Continent (copy)_113786292404805636]' derivation='Avg' name='[avg:New Deaths w Chosen Continent (copy)_113786292404805636:qk]' pivot='key' type='quantitative' />
            <column caption='Continent' datatype='string' name='[continent]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column caption='Positive Rate' datatype='real' name='[positive_rate]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_113786292406697989]' derivation='User' name='[usr:Calculation_113786292406697989:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1sfrzyp1v45e731di51f21buvywi].[none:date:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1sfrzyp1v45e731di51f21buvywi].[none:date:qk]' scope='cols' value='false' />
            <format attr='display' class='0' field='[federated.1sfrzyp1v45e731di51f21buvywi].[avg:New Deaths w Chosen Continent (copy)_113786292404805636:qk]' scope='rows' value='true' />
            <format attr='tick-color' value='#00000000' />
            <format attr='display' class='0' field='[federated.1sfrzyp1v45e731di51f21buvywi].[none:date:qk]' scope='cols' value='false' />
            <encoding attr='space' class='0' field='[federated.1sfrzyp1v45e731di51f21buvywi].[avg:New Deaths w Chosen Continent (copy)_113786292404805636:qk]' field-type='quantitative' major-origin='0.0' major-spacing='0.0050000000000000001' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.1sfrzyp1v45e731di51f21buvywi].[avg:New Deaths w Chosen Continent (copy)_113786292404805636:qk]' scope='rows' value='' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1sfrzyp1v45e731di51f21buvywi].[avg:New Deaths w Chosen Continent (copy)_113786292404805636:qk]' value='p0.0%' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#ffecd1' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='fill-above' id='refline2' value='#00000000' />
            <format attr='fill-below' id='refline2' value='#00000000' />
            <format attr='fill-above' id='refline4' value='#00000000' />
            <format attr='fill-below' id='refline4' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='stroke-size' scope='rows' value='1' />
            <format attr='line-visibility' scope='rows' value='on' />
            <format attr='line-pattern-only' scope='rows' value='dotted' />
            <format attr='stroke-size' id='refline1' value='1' />
            <format attr='line-visibility' id='refline1' value='on' />
            <format attr='line-pattern-only' id='refline1' value='dotted' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='text-format' id='refline1' value='p0.0%' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1sfrzyp1v45e731di51f21buvywi].[usr:Calculation_113786292406697989:nk]' />
            </encodings>
            <reference-line axis-column='[federated.1sfrzyp1v45e731di51f21buvywi].[avg:New Deaths w Chosen Continent (copy)_113786292404805636:qk]' enable-instant-analytics='true' formula='constant' id='refline1' label='' label-type='custom' scope='per-table' value='0.01' value-column='[federated.1sfrzyp1v45e731di51f21buvywi].[avg:New Deaths w Chosen Continent (copy)_113786292404805636:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#ff7d00' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1sfrzyp1v45e731di51f21buvywi].[avg:New Deaths w Chosen Continent (copy)_113786292404805636:qk]</rows>
        <cols>[federated.1sfrzyp1v45e731di51f21buvywi].[none:date:qk]</cols>
      </table>
      <simple-id uuid='{C13CE99B-ABAC-4386-A105-B1A75912FF19}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Covid '>
      <style />
      <size maxheight='800' maxwidth='1400' minheight='800' minwidth='1400' sizing-mode='fixed' />
      <datasources>
        <datasource name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Select Continent' datatype='string' name='[Continent Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;North America&quot;'>
          <calculation class='tableau' formula='&quot;North America&quot;' />
          <members>
            <member value='&quot;Africa&quot;' />
            <member value='&quot;Asia&quot;' />
            <member value='&quot;Europe&quot;' />
            <member value='&quot;North America&quot;' />
            <member value='&quot;Oceania&quot;' />
            <member value='&quot;South America&quot;' />
          </members>
        </column>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone friendly-name='Whole Board' h='98000' id='3' param='horz' type-v2='layout-flow' w='98858' x='571' y='1000'>
            <zone fixed-size='69' friendly-name='Overview &amp; Contacts' h='97750' id='8' is-fixed='true' param='vert' type-v2='layout-flow' w='4929' x='642' y='1125'>
              <zone h='6250' hidden-by-user='true' id='13' mode='compact' param='[Parameters].[Continent Parameter]' type-v2='paramctrl' w='4929' x='642' y='1125'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='1282' friendly-name='Main Board' h='97750' id='7' is-fixed='true' param='vert' type-v2='layout-flow' w='91571' x='5571' y='1125'>
              <zone friendly-name='Title' h='2875' id='39' type-v2='text' w='91571' x='5571' y='1125'>
                <formatted-text>
                  <run>COVID ANALYSIS DASHBOARD</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone friendly-name='KPI &amp; Detail' h='94875' id='33' param='horz' type-v2='layout-flow' w='91571' x='5571' y='4000'>
                <zone fixed-size='282' friendly-name='KPI' h='94875' id='35' is-fixed='true' layout-strategy-id='distribute-evenly' param='vert' type-v2='layout-flow' w='20143' x='5571' y='4000'>
                  <zone fixed-size='93' friendly-name='New Cases' h='19000' id='47' is-fixed='true' param='vert' type-v2='layout-flow' w='20143' x='5571' y='4000'>
                    <zone friendly-name='Title' h='2875' id='48' type-v2='text' w='20143' x='5571' y='4000'>
                      <formatted-text>
                        <run>New Cases</run>
                      </formatted-text>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone friendly-name='Graph' h='16125' id='42' name='New Cases' show-title='false' w='20143' x='5571' y='6875'>
                      <layout-cache minheight='130' minwidth='100' type-h='scalable' type-w='scalable' />
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                  </zone>
                  <zone fixed-size='96' friendly-name='New Deaths' h='19000' id='49' is-fixed='true' param='vert' type-v2='layout-flow' w='20143' x='5571' y='23000'>
                    <zone friendly-name='Title' h='2875' id='50' type-v2='text' w='20143' x='5571' y='23000'>
                      <formatted-text>
                        <run>New Deaths</run>
                      </formatted-text>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone friendly-name='Graph' h='16125' id='43' name='New Deaths' show-title='false' w='20143' x='5571' y='25875'>
                      <layout-cache minheight='130' minwidth='100' type-h='scalable' type-w='scalable' />
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                  </zone>
                  <zone fixed-size='108' friendly-name='New Tests' h='19000' id='51' is-fixed='true' param='vert' type-v2='layout-flow' w='20143' x='5571' y='42000'>
                    <zone friendly-name='Title' h='2875' id='52' type-v2='text' w='20143' x='5571' y='42000'>
                      <formatted-text>
                        <run>New Tests</run>
                      </formatted-text>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone friendly-name='Graph' h='16125' id='44' name='New Tests ' show-title='false' w='20143' x='5571' y='44875'>
                      <layout-cache minheight='151' minwidth='100' type-h='scalable' type-w='scalable' />
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                  </zone>
                  <zone fixed-size='113' friendly-name='New Vaccination' h='19000' id='53' is-fixed='true' param='vert' type-v2='layout-flow' w='20143' x='5571' y='61000'>
                    <zone friendly-name='Title' h='2875' id='54' type-v2='text' w='20143' x='5571' y='61000'>
                      <formatted-text>
                        <run>New Vaccinations</run>
                      </formatted-text>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone friendly-name='Graph' h='16125' id='45' name='New Vaccinations' show-title='false' w='20143' x='5571' y='63875'>
                      <layout-cache minheight='151' minwidth='100' type-h='scalable' type-w='scalable' />
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                  </zone>
                  <zone fixed-size='81' friendly-name='Positive Rate' h='18875' id='55' is-fixed='true' param='vert' type-v2='layout-flow' w='20143' x='5571' y='80000'>
                    <zone friendly-name='Title' h='2875' id='56' type-v2='text' w='20143' x='5571' y='80000'>
                      <formatted-text>
                        <run>Positive Rate</run>
                      </formatted-text>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone friendly-name='Graph' h='16000' id='46' name='Positive Rate' show-title='false' w='20143' x='5571' y='82875'>
                      <layout-cache minheight='100' minwidth='140' type-h='scalable' type-w='scalable' />
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                  </zone>
                </zone>
                <zone friendly-name='Map' h='94875' id='60' param='vert' type-v2='layout-flow' w='37321' x='25714' y='4000'>
                  <zone h='94875' id='63' name='Map total cases' show-title='false' w='37321' x='25714' y='4000'>
                    <layout-cache minheight='200' minwidth='200' type-h='scalable' type-w='scalable' />
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
                <zone friendly-name='Detail' h='94875' id='59' param='vert' type-v2='layout-flow' w='34106' x='63035' y='4000'>
                  <zone h='47437' id='61' name='Fully Vaccinated ' w='34106' x='63035' y='4000'>
                    <layout-cache minheight='170' minwidth='155' type-h='scalable' type-w='scalable' />
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='47437' id='65' name='Hosp Patients' w='34106' x='63035' y='51437'>
                    <layout-cache minheight='170' minwidth='100' type-h='scalable' type-w='scalable' />
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
            <zone-style>
              <format attr='border-color' value='#e9c46a' />
              <format attr='border-style' value='solid' />
              <format attr='border-width' value='1' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='3000' id='26' type-v2='dashboard-object' w='1714' x='1786' y='2750'>
          <button action='' active-visual-state-index='1'>
            <toggle-action>tabdoc:toggle-button-click-action window-id=&quot;{7AFBED2C-D68D-42F3-8CC0-953FFCDB7683}&quot; zone-id=&quot;26&quot; zone-ids=[13]</toggle-action>
            <button-visual-state />
            <button-visual-state />
          </button>
        </zone>
        <zone count='1' h='13500' id='62' name='Fully Vaccinated ' name1='Hosp Patients' synchronized='1' type-v2='currpage' w='4286' x='1214' y='15750' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='2100' minheight='2100' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='67' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='66' param='vert' type-v2='layout-flow' w='98858' x='571' y='1000'>
                <zone h='6250' id='13' mode='compact' param='[Parameters].[Continent Parameter]' type-v2='paramctrl' w='4929' x='642' y='1125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone friendly-name='Title' h='2875' id='39' type-v2='text' w='91571' x='5571' y='1125'>
                  <formatted-text>
                    <run>COVID ANALYSIS DASHBOARD</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone friendly-name='Title' h='2875' id='48' type-v2='text' w='20143' x='5571' y='4000'>
                  <formatted-text>
                    <run>New Cases</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='94875' id='63' is-fixed='true' name='Map total cases' show-title='false' w='37321' x='25714' y='4000'>
                  <layout-cache minheight='200' minwidth='200' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='47437' id='61' is-fixed='true' name='Fully Vaccinated ' w='34106' x='63035' y='4000'>
                  <layout-cache minheight='170' minwidth='155' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='121' friendly-name='Graph' h='16125' id='42' is-fixed='true' name='New Cases' show-title='false' w='20143' x='5571' y='6875'>
                  <layout-cache minheight='130' minwidth='100' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone friendly-name='Title' h='2875' id='50' type-v2='text' w='20143' x='5571' y='23000'>
                  <formatted-text>
                    <run>New Deaths</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='121' friendly-name='Graph' h='16125' id='43' is-fixed='true' name='New Deaths' show-title='false' w='20143' x='5571' y='25875'>
                  <layout-cache minheight='130' minwidth='100' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone friendly-name='Title' h='2875' id='52' type-v2='text' w='20143' x='5571' y='42000'>
                  <formatted-text>
                    <run>New Tests</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='121' friendly-name='Graph' h='16125' id='44' is-fixed='true' name='New Tests ' show-title='false' w='20143' x='5571' y='44875'>
                  <layout-cache minheight='151' minwidth='100' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='47437' id='65' is-fixed='true' name='Hosp Patients' w='34106' x='63035' y='51437'>
                  <layout-cache minheight='170' minwidth='100' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone friendly-name='Title' h='2875' id='54' type-v2='text' w='20143' x='5571' y='61000'>
                  <formatted-text>
                    <run>New Vaccinations</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='121' friendly-name='Graph' h='16125' id='45' is-fixed='true' name='New Vaccinations' show-title='false' w='20143' x='5571' y='63875'>
                  <layout-cache minheight='151' minwidth='100' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone friendly-name='Title' h='2875' id='56' type-v2='text' w='20143' x='5571' y='80000'>
                  <formatted-text>
                    <run>Positive Rate</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='120' friendly-name='Graph' h='16000' id='46' is-fixed='true' name='Positive Rate' show-title='false' w='20143' x='5571' y='82875'>
                  <layout-cache minheight='100' minwidth='140' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone count='1' h='13500' id='62' name='Fully Vaccinated ' name1='Hosp Patients' synchronized='1' type-v2='currpage' w='4286' x='1214' y='15750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{E83ADB95-FE01-4DD5-88A7-4C786FA967CB}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Continent'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Continent Parameter]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1sfrzyp1v45e731di51f21buvywi].[dy:date:ok]</field>
            <field>[federated.1sfrzyp1v45e731di51f21buvywi].[none:continent:nk]</field>
            <field>[federated.1sfrzyp1v45e731di51f21buvywi].[none:iso_code:nk]</field>
            <field>[federated.1sfrzyp1v45e731di51f21buvywi].[none:location:nk]</field>
            <field>[federated.1sfrzyp1v45e731di51f21buvywi].[none:tests_units:nk]</field>
            <field>[federated.1sfrzyp1v45e731di51f21buvywi].[tmn:date:qk]</field>
            <field>[federated.1sfrzyp1v45e731di51f21buvywi].[usr:Calculation_113786292406697989:nk]</field>
            <field>[federated.1sfrzyp1v45e731di51f21buvywi].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{45D8CE9F-0783-4211-A93E-258FF88BFD5D}' />
    </window>
    <window class='worksheet' name='Map total cases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Continent Parameter]' type='parameter' />
            <card pane-specification-id='15' param='[federated.1sfrzyp1v45e731di51f21buvywi].[sum:Calculation_113786292388573184:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1sfrzyp1v45e731di51f21buvywi].[dy:date:ok]</field>
            <field>[federated.1sfrzyp1v45e731di51f21buvywi].[none:Calculation_168673914198233088:nk]</field>
            <field>[federated.1sfrzyp1v45e731di51f21buvywi].[none:continent:nk]</field>
            <field>[federated.1sfrzyp1v45e731di51f21buvywi].[none:date:ok]</field>
            <field>[federated.1sfrzyp1v45e731di51f21buvywi].[none:iso_code:nk]</field>
            <field>[federated.1sfrzyp1v45e731di51f21buvywi].[none:location:nk]</field>
            <field>[federated.1sfrzyp1v45e731di51f21buvywi].[sum:New Deaths w Chosen Continent (copy)_168673914199609346:qk]</field>
            <field>[federated.1sfrzyp1v45e731di51f21buvywi].[tmn:date:qk]</field>
            <field>[federated.1sfrzyp1v45e731di51f21buvywi].[usr:Calculation_113786292406697989:nk]</field>
            <field>[federated.1sfrzyp1v45e731di51f21buvywi].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C39C7852-6355-4619-AD5B-9AD557977A7A}' />
    </window>
    <window class='worksheet' name='New Cases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Continent Parameter]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1sfrzyp1v45e731di51f21buvywi].[dy:date:ok]</field>
            <field>[federated.1sfrzyp1v45e731di51f21buvywi].[none:continent:nk]</field>
            <field>[federated.1sfrzyp1v45e731di51f21buvywi].[tmn:date:qk]</field>
            <field>[federated.1sfrzyp1v45e731di51f21buvywi].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BB85349D-34BB-455C-861A-286633D525F8}' />
    </window>
    <window class='worksheet' name='New Deaths'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Continent Parameter]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1sfrzyp1v45e731di51f21buvywi].[dy:date:ok]</field>
            <field>[federated.1sfrzyp1v45e731di51f21buvywi].[none:continent:nk]</field>
            <field>[federated.1sfrzyp1v45e731di51f21buvywi].[tmn:date:qk]</field>
            <field>[federated.1sfrzyp1v45e731di51f21buvywi].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C3080CD6-50CB-466A-A55F-601CD6489F16}' />
    </window>
    <window class='worksheet' name='New Tests '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Continent Parameter]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1sfrzyp1v45e731di51f21buvywi].[dy:date:ok]</field>
            <field>[federated.1sfrzyp1v45e731di51f21buvywi].[none:continent:nk]</field>
            <field>[federated.1sfrzyp1v45e731di51f21buvywi].[tmn:date:qk]</field>
            <field>[federated.1sfrzyp1v45e731di51f21buvywi].[usr:Calculation_113786292406697989:nk]</field>
            <field>[federated.1sfrzyp1v45e731di51f21buvywi].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{71675F0B-5B5F-463F-94B3-41175E89CAD4}' />
    </window>
    <window class='worksheet' name='Positive Rate'>
      <cards>
        <edge name='left'>
          <strip size='111'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='100'>
            <card mode='compact' param='[Parameters].[Continent Parameter]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1sfrzyp1v45e731di51f21buvywi].[dy:date:ok]</field>
            <field>[federated.1sfrzyp1v45e731di51f21buvywi].[none:continent:nk]</field>
            <field>[federated.1sfrzyp1v45e731di51f21buvywi].[tmn:date:qk]</field>
            <field>[federated.1sfrzyp1v45e731di51f21buvywi].[usr:Calculation_113786292406697989:nk]</field>
            <field>[federated.1sfrzyp1v45e731di51f21buvywi].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DA614AFD-F0EE-4863-97B3-8FA67914F49A}' />
    </window>
    <window class='worksheet' name='New Vaccinations'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Continent Parameter]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1sfrzyp1v45e731di51f21buvywi].[dy:date:ok]</field>
            <field>[federated.1sfrzyp1v45e731di51f21buvywi].[none:continent:nk]</field>
            <field>[federated.1sfrzyp1v45e731di51f21buvywi].[tmn:date:qk]</field>
            <field>[federated.1sfrzyp1v45e731di51f21buvywi].[usr:Calculation_113786292406697989:nk]</field>
            <field>[federated.1sfrzyp1v45e731di51f21buvywi].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F1C33F31-2EAF-4A76-BFFF-E16825EE6359}' />
    </window>
    <window class='worksheet' name='Fully Vaccinated '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Continent Parameter]' type='parameter' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2021-04-30#</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1sfrzyp1v45e731di51f21buvywi].[dy:date:ok]</field>
            <field>[federated.1sfrzyp1v45e731di51f21buvywi].[none:Calculation_168673914198233088:nk]</field>
            <field>[federated.1sfrzyp1v45e731di51f21buvywi].[none:continent:nk]</field>
            <field>[federated.1sfrzyp1v45e731di51f21buvywi].[none:date:ok]</field>
            <field>[federated.1sfrzyp1v45e731di51f21buvywi].[tmn:date:qk]</field>
            <field>[federated.1sfrzyp1v45e731di51f21buvywi].[usr:Calculation_113786292406697989:nk]</field>
            <field>[federated.1sfrzyp1v45e731di51f21buvywi].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1329EE31-8C1C-4C67-A88D-C8CE0EB01CF5}' />
    </window>
    <window class='worksheet' name='Hosp Patients'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Continent Parameter]' type='parameter' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2021-04-26#</bucket>
          </multibucket>
        </current-page>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[federated.1sfrzyp1v45e731di51f21buvywi].[sum:Calculation_46161930967990272:qk]</axis>
              </node-reference>
              <page-reference>
                <fields>
                  <field>[federated.1sfrzyp1v45e731di51f21buvywi].[none:date:ok]</field>
                </fields>
                <multibucket>
                  <bucket>#2021-04-26#</bucket>
                </multibucket>
              </page-reference>
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1sfrzyp1v45e731di51f21buvywi].[dy:date:ok]</field>
            <field>[federated.1sfrzyp1v45e731di51f21buvywi].[none:Calculation_168673914198233088:nk]</field>
            <field>[federated.1sfrzyp1v45e731di51f21buvywi].[none:continent:nk]</field>
            <field>[federated.1sfrzyp1v45e731di51f21buvywi].[none:date:ok]</field>
            <field>[federated.1sfrzyp1v45e731di51f21buvywi].[tmn:date:qk]</field>
            <field>[federated.1sfrzyp1v45e731di51f21buvywi].[usr:Calculation_113786292406697989:nk]</field>
            <field>[federated.1sfrzyp1v45e731di51f21buvywi].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{60204824-E83F-4ED8-A326-05614A852CF1}' />
    </window>
    <window class='dashboard' maximized='true' name='Covid '>
      <viewpoints>
        <viewpoint name='Fully Vaccinated '>
          <current-page>
            <multibucket>
              <bucket>#2020-08-18#</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Hosp Patients'>
          <current-page>
            <multibucket>
              <bucket>#2020-08-18#</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Map total cases'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='New Cases'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='New Deaths'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='New Tests '>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='New Vaccinations'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Positive Rate'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='62' />
      <simple-id uuid='{7AFBED2C-D68D-42F3-8CC0-953FFCDB7683}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='378' name='Continent' width='288'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='384' name='Covid ' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Fully Vaccinated ' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Hosp Patients' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO3deXwdV33//9csd9UuWbblfcnuJCQhCSWUUvYlC9CwPGh/tKX9taUlQCB0
      o18o7Q8otEC/LWEPgQIByhLWFFpCyQIkJCGJg22cOF5iW5Yly9Z+t1nO749z75VkW7Yka7/v
      5+Phh8bSvTNn7p05nzmfc+aMY4wxiIhIzXHnuwAiIjI//OqSMWDieSyKiIjMpTEBIIK+HfNY
      FBERmUtKAYmI1KiTBgADGJw5LoqIiMylkwcAxyd2U3NdFhERmUNKAYmI1CgFABGRGqUAICJS
      oxQARERqlAKAiEiNUgAQEalRCgAiIjVKAUBEpEYpAIiI1CgFABGRGqUAICJSoxQARERqlAKA
      iEiNUgAQEalRCgAiIjVKAUBEpEYpAIiI1CgFABGRGqUAICJSoxQARERqlAKAiEiNUgAQEalR
      CgAiIjVKAUBEpEYpAIiI1CgFABGRGqUAICJSoxQARERqlAKAiEiNUgAQEalRCgAiIjVKAUBE
      pEYpAIiI1CgFABGRWpQrKgCIiNSkobwCgIhITWrIKACIiNScYgDb9isAiIjUnP4R6BtWABAR
      qTl1KUgncIwxBoA4hL4ddtHxCdwGXBPMZxFFRGS2FAL8if7mAGDmrCwiIjKH0v7EAcAzeby4
      MJfFERGRuVAoQRBNHABERGQJyhXhoSdPnQISEZElaKQA+RKAAoCIyJIWx3DwKPQOwZo2aK6D
      9kYYLigAiIgsaQM52HHALueL8BvnwNM2gjEKACIiS1YhgO37oRSC64DvgeOAa28BUwAQEVmq
      CiXb6ZvwwHPhwnXVyh80HbSIyNLVkIFVrVCfgXXttiUQRNU/T3gnsHF83QcgIrLYxQZyBXh4
      jx39s6rVtgQcRy0AEZElzXUgiKtDP+nph54BiGIFABGRJa8xba/8kz4UQ3h0L+w4oAAgIrJk
      BREM5+20blvW2dSPV672B3MaBSQisiSFkZ3yYSgPK5vhovXQXA+rW6E/B5s7FABERJakQgCD
      ObvcOwRhbIeDXri++hKlgERElqJMElY0QzoB69tt5R9Edi6g2A7+VAtARGQp8ly4eD1Esb0D
      uBjYlFC+BGuXwbmr1QIQEVmyXBcSvp3+YTgPwwUbEA73Q6y5gERElgZj4OiQHee/rBFw4MiA
      7QBua4SGLLTW207h9e3gOroTWERk0TMG+kfg/sft9M+UJ3xzHcim4Jnn2jRQHENkwHfBcdQC
      EBFZ9IIItj1lfxpjUz5RbG/8cp3R17nuuKE/CgAiIoudMbbyT5ZH+vierfw7Wu24f9876dvU
      CSwisphFMew6BKUAvPI4/4RnbwTLFWzufwIKACIii1kY2cndXBcwdgposGmgwbz9+wQUAERE
      FjPfg/Ymm+tva7TP/F3Xbm8A27jCtgYmoFFAIiKL2dEhOHTUpno2LJ/SW9UJLCKymD2823YC
      9wxARwukEpN+q1JAIiKLWSXF49mx/VOhFoCIyGJ2+dnQ3QctDXbo5xQoAIiILGb1aajvmNZb
      lQISEVmsjIFSaH9Og1oAIiKLUWxgz2HoPAot9fYGMHdqfQBqAYiILEZRDJ29dp7/7n473fMU
      KQCIiCxGnmOv/AEas1CXnvIqdCOYiMhiFcX2EY+ZpH3wyxSpD0BEZLEplODgUTvtQ1vDlMf/
      VygAiIgsJsbAA0/AcNEun7MKzuqYVhBQH4CIyGJhDDzeCQN5CEKbAtpz2D7rdxoUAEREFosw
      gkPH7CMdXcf+zKamNP/PWEoBiYgsBnEMOw5AvmSv/Nsa4OwOO/pnilNAVCgAiIgsBrGBoby9
      6k94cP4aaG04o1UqBSQishh4ru3srUvD2mXQVHfGq9R9ACIii0Fs7F2/vmdbAdMc+jmWUkAi
      IovBrkPwVI+d/fOKc075qMfJUgpIRGQx6Om3P4cLMDAyI6tUABARWQxWt9mr/uY6+28GKAUk
      IrLQGQOrWu2/pA/uzFy7KwCIiCx0uw/D3m5I+fCsC2ZstUoBiYgsdL0DthVQDGYs/w+naAEY
      XGLFBxGR+Xf+BtjXbef9b2masdVOeB9A0V8GcTRjGxIRkYVlwhZAMurXjWAiIkuYcjwiIgtZ
      oWSngD501PYDzCCNAhIRWYhiYzt8n+iE/hE7F1A2PWP3AIACgIjIwhIb6DwKvYPQ3W+fAVCd
      9kEtABGRpWvHATvnT1gehJPwoaUeOlpmZAbQsdQHICKykJSC8bn+OLYPgFnRMiMzgI6lACAi
      slBEMaST9hGPq1pHn/Y1XIC+4RnfnAKAiMhCsfOgzf8DbFoBm1fazt+6tE0DzTD1AYiILBTh
      mJtvgwg2LIeVLbYT2Jv563UFABGRheKsDpvnzyRhWePo8ixRABARWQiC0A77bK23c//PcIfv
      ySgAiIgsBI93QlefXU74sKJ51jepTmARkYUgNidfnkVqAYiILATnrALfg3QCVszclM+nogAg
      IrIQpJNwwdo53aRSQCIiNUoBQERkvhljRwGFc/sQLqWARETm25EBOwlcwodLNto7f+eAWgAi
      IvPtcL+98zdXhJ6BOdusAoCIyHxb1jg6Aqi9cc42qxSQiMh8W9Vqn/Tle3b2zzmiACAishBk
      U3O+SaWARERqlAKAiMh8MsY+CMbMzfQPYykFJCIyn4YLdgho0ofz19g7gueIWgAiIvPpqR4Y
      zEHvIBzum9NNKwCIiMynhgw4gOtAY3ZON60UkIjIfDEG2hoguR7qUlCfmdPNKwCIiMyXrj74
      9QG7fPlZthUwh5QCEhGZL8eG7MNfYmP7AOaYWgAiInMtCGFPN+RLkCjf/buyZc6LoQAgIjLX
      njoC+4/Y8f8bV8DZHeDOfUJGKSARkbnmYOf+L4Ww5zAcHZqXYigAiIjMpeG8nf45isF3wXPt
      fQDzQCkgEZG51HnUzvuf8MBxoLUeOlrnpSgKACIic6k+Yyt+14WL1s9L52+FAoCIyFxa3QaN
      GRsA5mEK6LEUAERE5ooxNv3jeZBJ2pbAPFIAEBGZK0cGYcd+iIxN/yxvmtfiaBSQiMhcGRix
      D3+PYzgydw9/n4gCgIjIXFneZCd9y6ZgTdt8lwbHmPJjaOIQ+nbYRcfHOD5eXJjPsomILD1B
      ZG8E8735Lon6AERE5lRi/iv+CgUAEZG5YAz0jZQf/JKZl7l/jqcAICIyF7r7Yft+GwjOXQNr
      l813idQJLCIyJ3JFO++/AYbyNhDMM7UARETmQkerTQGBvfqf55vAQKOARETmTuWqfwFU/nCK
      FoDBJyIxl2UREVlyHAwUizg9feA4mBWtmMTCqFsnDACBW4fjzO9ERSIii17/EMmHnoChYUgm
      CMMU8eb57wCGUwSAZDygFJCIyJk62g35HGAgCkgW+yGqn+9SAeoEFhGZXW2N0JyFQmDn/l+/
      Yr5LVKUAICIyW6LIjv9vzMKF7dCQWTAdwKAAICIye7r6YF+3XXYdOH/t/JbnOLoRTERktsRm
      dOhnMrGgrv5BAUBEZHYM5eHAEfvwl/amBTH1w/EUAEREZsOxIciXwHftA2BSC2Ps/1gKACIi
      s6G1wVb6jmNH/yxAmgpCRGS2VB7+4rkLLv8PagGIiMw8Y6DzKHT2QhgvyMofNAxURGTm9QzA
      rw/Y5ZEibFk3v+WZgFoAIiIzLYpHl+N44tfNM7UARERm2spmKJZsH8Da9vkuzYQUAEREZprr
      wsaV812K01IKSESkRqkFICIyk4yxE8AVy7N/LsAbwCoUAEREZlLvEGzfbx/+PlKE89cs2GGg
      SgGJiMykKLKVP9hO4AVMLQARkZm0vBk2l2wKaG37gr36BwUAEZGZ5TqwYfmCrvgrlAISEZlp
      i6DyBwUAEZGapQAgIlKjFABERGqUOoFFRGZKbKDrGBRK0NEK2dR8l+iUFABERGZK7yDsPGjv
      A8iV4MJ1C7pDWCkgEZGZYszoTWDGnPKlC4FaACIiM6W9Cc5dbW8CW9W6oK/+QQFARGTmuA6s
      XTbfpZg0pYBERGqUWgAiIjMhjODxTsiXYNMKaG2Y7xKdlloAIiIz4dgwdPVB/wjs6Z7v0kyK
      AoCIyExI+uCVq9QFPv6/QikgEZEzFURwsNcur2mDszrmtzyTpAAgInKm+kfgcL9dHsyPtgQW
      uMVRShGRhSqMoLvPjv2PYmjKLvjx/xVqAYiInInBnL36T3g2979x+XyXaNLUAhARORMJH3wX
      XNcO/UwsnuvqxVNSEZGFqD4NTz8LckVoa1g06R9QABAROTNRDJmkDQSLqPIHBQARkekrBvDY
      PjvyZ9OKRfMw+Ar1AYiITNdwAQZydurnzmOjU0EvEgoAIiLTVZeGxowd97+qBRbPxT+gFJCI
      yPSlE3DZZnsvQDo536WZMrUARESmK1eEoTz43nyXZFrUAhARmY5cER7eDYUAOlpgy7r5LtGU
      qQUgIjIdpdBW/mDnAorj+S3PNKgFICIyHfVpWNkMQwVYt8zeCbzITBgAYicJziIb0yQiMlcS
      wIXnAGZRjf0fa8IAEDkp4kUY0UREZHImDACJeAgvLsxlWUREZA7pEl9EZDrM4k+RqxNYRGSq
      wgh2dsLACKxrh7XL5rtE06IWgIjIVOWKcLgP8iU40GsDwiKkACAiMlVJH1IJu9yY1Z3AIiI1
      I5WAZ5wDI0X7DOBFSgFARGSqHMe2ApKLuwpVCkhEpEYpAIiITFUc20dBLnKLu/0iIjLXwgi2
      7bcTwK1vX3SPgRxLLQARkanIFaF30AaCzqOLuiWgACAiMhWphJ0JFKC1wT4OcpFyjCnfzxyH
      0LfDLjo+xvE1F5CIyMlEMRQDyKbmuyRnZPGGLhGR+VAI7GMgE4vz5q+x1AksIjJZxcA+BjJX
      hOVNcPGG+S7RGVELQERksoqhnf8H4NgwxIt7RlAFABGRyYgNHBuyo39cBzausD8XMQUAEZHJ
      KAawu8tW+kkfVrfOd4nOmAKAiMikmNEx/8nEonwI/PEW/x6ILFWlcL5LIBVBCFv32eV0Ei5c
      t+jTP6BRQCILjzFw8Kh90Eg2ZSubRTrf/JIRRDBcGL3qXyLfh1oAIgtRz4BNNwzl7ZwzMr+S
      PqxsGc39L4F7AEABQGRhamuwP1MJ+8QpmT/GwP5eGCnY5/9uXLFoJ387nlJAIguN49hZJlc0
      2wAwNtdsjJ2I7ECvHZa4shnWLM4Hki8auRI81WNbZLkirGlbMikgBQCRhchxIJM88fexgScO
      jaaFcgVY3rzon0y1oCU8SCfs4x8bMkui87dCR43IYuIAKd9WQgZb8fvK5M6qILRB1ndtP8AS
      GP5ZoQAgspi4Lly80aaBjIGW+iVVIS04QQS/3G2H5NalYe3SSrcpAIgsNkkfVi3+u1AXBWNs
      CwCgFEAYQ3LpBFwFAJGFzpTvQPXcJTP6ZFEwxo78Sfh2+exVS66vZWntjchSYwx09dlHDzZm
      4ewOpXzmShjBo3tsx3s6Acsa57tEM05HkshCFhvoPGYfQnJkwN4YJnNk7PDb+SvFbFILQGQh
      GS7A/iP2mbMd5REnrmNbApmUnYdG5obvwiWbbOBd1rjk0j+gACCysDzZZUf4lAI43AfZtM1D
      uy4018G2/dBSt6TuRl3QmursSKslSgFAZKHIFWEwZ+edB3vjUa5kO3/j2PYDOA4MjNipIprq
      5re8S5kxcOgYdB2z9wCsa5/vEs0K9QGILBRPdtmflTtPm+pg80q73N5o/58r2v6AnZ22lZAr
      LvrHEi5IxcB+HwM52HMYCqX5LtGsUAtAZKFI+OUpIFKwZR00ZuzVf0eLrYj2H7H9AZmkraC2
      7bcBoDEL561ZkjnqeRGEcKSchjPY/pglMvfP8XTEiCwUZ620lU06Ca1j8s6+Z69GiwF4nv17
      Sz30DthO44GcTRFdvEFDRM+UMfDwHjjSbyv/dNIGYwUAEZlVCX/iqQYSnp2OIJOESzaWKyQD
      fSOj9wo0ZGBzx5wWeUkayo0O+/Rc+/jHJUoBQGQxuHA9HBuy89GkyhXSWeWbwp44ZCuqrj47
      NXRq6VZYs65Qslf9jmNHXa1tXzIPfzkZtRdFFoPKE6kaMqO/c13YtBLam+z/c0U7UsioU3ha
      wgge22eDQNK3QXd505IebqsAILJQGTP6byKuAxessVf9qYQduhhGc1fGpcIYm2IbLozOvRQt
      /c9RAUBkoTrcD/c/Ab8+eOqhnqnykNFCYO8dONCrVsBUxTH8ap+t+IPI3miXTc93qWadAoDI
      QhFF4yvug732av7okL35ayK+Z/sD0gn773C/rcRk8qLYBtDKMNtKWm2JUwAQmW/G2A7eR/fC
      9v2j889X8v1JH+pSp15Hyrf3A7guNGXtGPaeAbsutQZO7/FOO8w2iGy/yskex7kEaRSQyEJw
      6BjkS/Zf75C9+eucVfZnOmmHiJ5KwoeL1kN3v50xdOs+m9N2HRsY1rXb6SPk5I4O2ZFUngvN
      9Uu643csBQCR+VbtdIzt1X5T1v7edac2308Qwu7DdvK4ILKzGRvsqJYwspPI6Uax8YyxQTMI
      bT/L6jZ7B3aN0NEgMt+eOjI6z/85q88g/VCeNjo29grWYFsApRD6R2wrQ8YzxgZNx7F9KWuW
      1czVPygAiMyfMIIDR+wVqDE2/RCE06+A0gk7dr2lDhrSdgx7c91oCkkB4CQc27/iOLYfJVsb
      uf+KCVNAkZPG1FAkFJlTUYS37Qnb+eu6mESCeFkbtK8EZ5rXZQ6wLAut7Ta4JH0oBji/2o07
      PIypbyAmXVNXuKfjFHO42QwmnSHesAZSCgAAGMcjdnRLuchscPd12SdNlQJMNkN8znriFcsY
      9xjC6fLK/wDSCZxzN+Fs3QlHBzF7ezCb15z5NpaCOMbb/hQMDIHnEa9dCzVW500YAPx4BC8u
      zGVZRGpHMGJTDhicjibc1gTEQ7OzreIQRHY+e/doD6ytG33UZK2KYzh4FHqPQmxw0kmS0SDE
      4XyXbE5pFJDIfNi4wnY6+q4deeLNYndcQ8aOLOofsWmhHQfsvEH1aVuOuqV/x+s4uaK93+Jw
      n+178T1Y0zZ+nqUaoQAgMtdKAezrsZXxbFf+YLdzVoed537/kfIoIWxAwIEta2unXyA2NgB2
      949+DpkUbKjNZywrAIjMtf1H7F26YO8+HS7YSvq8Nae/4Wu6isHoHcZgh4gaY4NRGM3edhea
      3kHoGx4ddbWi2d5At4SnfD4VDQMVmWtjR/n0Dtq7fwdydnm2NGbtw82bsrC6FTYst5X+UN7e
      h1ALjIG93XbZ9+zDcy4/a3T+/xpUI2FfZAHZsNyO2fdce5fuwaP29/WzmIP2vfGpnsN99ko4
      CKG7zz6JbKk/SObgUbvPYWQ/6w3tNVvxVygAiMw1r9zxC/aqtKXePnYwPcsV8NjKrr3J5sEP
      90ExtH0S566e3e3Pt+5+GwhdpxyEa2vM/8koAIjMJ8eZ2nw/M6WS/+6vTDO9hGcMNcam2XLF
      0av/jpaav/oHBQCR2rW82VaI+ZJtkRizdCvFJw7ZdJfvweaVSz/dNUnqBBapVW659XF0CB7a
      Ze9MXqp81wY3z5n9VNsiohaASC0bzNkhomBz5O1L9CHo68s5/8asnSBPAAUAkdrWkLFTUgzm
      7TMEegftPQkN2cU/VUQl9390EPZ02/1c3bo0A9w0KQCI1LLGLKxqg1wXdPXZKaMTnh0Wevbq
      xXuDVBjBE5126GcQ2nsewsg+bW3taR6vWUPUByAyl6IYevrtlfZCeVZv0rflisv/igEc6LUP
      pV+MKtM97O22LYAwtvdbpBLQ3jjfpVtQFABE5tKhY3ZEys6DcGQW7/ydiuXN9h6A+rQNBr5n
      0yTDBRsYFpPYwK5OG7wqZXcdyKbsc5E1+mccpYBE5lJpzHw8pWD+yjGW69iUT1uDvR1gd5ft
      EO46ZvPmm1baoLAYHDgCe3tsusdzoaPVBoVM0i4r/z+OAoDIXFrTZit+z4WVLfNdmlGOMzot
      dH3GBoBSaCvTbMo+K3ehi+PyfErlid7am2DLOl31n4ICgMhcSiXsrJ8L+Up0TZt9VOXRIZsS
      Wih9Faezt8fO9RMZaK6HSzbaKTZkQgoAInNtIVf+YIPUpZvs/EAAyxZJx2kY2SedpRM2iKny
      Py0FABE5ke/ZPoGdB21aZcs620kMCzOAGWPnNioG9oavjtb5LtGioAAgIifXO1h+kEwEO/bb
      4ZRJHzatgLYF0iooBnZkVTGw9zE4wMUbbDnltPQpicjJtdTb+wEKJcgX7e8cB3oHYFOHfczk
      bD/O8lSODcHWfXa4qolt2dJJ23fR2jB/5VpEdB+AiJzcskZY1Tr+bmBjbEtgz2HoPDp/HcT5
      Emw/YJ9oFsejj7h0HXtfg0yKWgAiMrFNK+0NVQMjdiz9UN7OGxRGtn8glbC597kUG3uvwlDe
      XvUnPNsS8T3bed2UndvyLGIKACIysaQPF6wd/X9s4JdP2ruYSyFs3w91qdl9nOXxuvvgUJ8N
      TAkPnrYRWupGg4BMmlJAInJqjjP6z3PhgvKIoMqUESPl/oG5SgeF8ei8/muX2RZIOmknfFuI
      I5QWMAUAEZma+rS96m7I2Kvw/hF7A9aje+HXB+yjF2crGBRKtgUQxXZit80rF/+01fNIKSAR
      mbrmOhsICoHtEN7dZdNDxsDhfnj6ZjvV9EzrGbC5/4RnWwB6sPsZUQtARKanvcnOtR+EtlM4
      Ls++mSva4aPxDMwkGkZ2/WCv+kuB/ZlNwUrd7HWm1AIQkenpaLE3i3X325vF2httf0AY2d91
      tEx/PH5s7JTO+4/YdbfW2/6H7n6b8mmu06MdZ4ACgIhMj+PA+WvK6aAMNGft2PzOoxBFsKsL
      LsvaB7LnS3YY6WQ7aQ8dsyOMgsimlQZzo9tMJ+y4fzljCgAiMn0J3z5opeK8NbZDOIhsKmh3
      l30CWiGwLYSnbRrfaRvFMFKw6aJMyt5XMDBiH+dYqfzHqjzcZeOKudm/JU4BQERmju/akTk7
      DkAhHO0cBts53NQNG1bYOXt6B+HJLjuKKI7LE9A1jqZ2Mkn7jIKOZhjIQ/+wDQCbV2qO/xni
      GFMOsXEIfTvsouNjHB8vLsxn2URksbp3u71jOIpGf+c4drrmNW221fCrfTCQs1f5lQt91wGv
      fGdvU9Y+qrKl3v6tFNrXJjXef6aoBSAiM295sx2u6Xs2teO5No8fRbZj98iATf9UbjDzPQgC
      21qIQzDlO3rHdvRqhs8Zp09URGbeOatgdaudMqK1HlJJe5NYZ6+t5HPF0dk7K/cM9AzYjt9C
      YP+mUT6zTgFARGae49iRQWPnCLp4g51hdNtTdqioU+7QbSrP49PRYkf4DBWgvvx7pXpmlQKA
      iMwNz7Vz97iOHSqaTtr+gMozBRzH3jegufznjAKAiMyt1W32n8w7TQUhIlKjFABERGqUAoCI
      SI1SABARqVEKACIiNUoBQESkRikAiIjUKAUAEZEapQAgIlKjTnknsB66IyKydE0YAIpeK7gz
      8FBnERFZkCYMAKnomB4IIyKyhKkPQESkRikAiIjUKAUAEZEapQAgIlKjFABERGqUAoCISI1S
      ABARqVEKACIiNUoBQESkRikAiIjUKAUAEZEapQAgIlKjFABERGqUAoCISI1SABARqVEKACIi
      NUoBQESkRikAiIjUKAUAEZEapQAgIlKjFABERGqUAoCISI1SABARqVEKACIiNUoBQESkRikA
      iIjUKAUAEZEapQAgIlKjFABERGqUAoCISI1SABARqVEKACIiNUoBQESkRikAiIjUKAUAEZEa
      pQAgIlKjFABERGqUP98FEBGR2REZQy4I2dM/QsJ1SPsexShmqBQSRLECgIjIYjZYDPh5Zy+P
      9PRzJFckiGOWZVLkw4hSFLO7f5jIgDGm+p7KkgKAnBFjDIUophhGDJYCBoshrgNDpZChUshT
      gyNEsT3ckr5LxveoT/gMlkKKYURsYFk2ycq6DKvq0/iuS8J1aEol8F1lKKV2xcZQKFfivfkS
      ncN5Hjp8jIFiwFApxHMcDIbefIneXBEz5r27+0cmtQ0FAJkUYwyxgc7hPJ3DeQ4PF+gvBvTk
      CvTkCvQVAkaCkNiYaoUfl684zKlWXOY6Dq7jkCkHifPaGllVn6EplWBFNs3axgyNyUT5daOv
      F1nMYmMwBkITE8WGJ/uH2Xl0iCf7hukvBgwWSwwFIUPFkNBM5kwazwH88gVVGBsMkPJckq5L
      yvcUAGS8SgXemy9yNF+iFMUYYOuRfnb3DfPUYI6RIMQYW7EbY8Bx4LiD02BwHAcwOJxYURvs
      wVl5V2gMxDGlKGKgFHA4V8DFwXHAYTQ4NKYS1CV82tJJVtVnOKulnrZMipTn4joOKc9lWTaF
      p+AgC0AUG0pxTBjHFMKYyBiGSkG1gt/bP8xgKeTQcJ5CGJELIuIpbsMF6pI+z16zjAuXNWGA
      4VJI2nfJhxEXtDWxsakOsIEm6brlc1MtgJoWG0N/ocSxQsCuviGeGhzh0HCBwyMFRkohpTgm
      jiHGjFb42AXHsdW65zo4jkPa86hP+jSmErhA2vdI+x4rs2ma0onqVc5gMWQkCGlM+mR8H8eB
      3nyJrpE8vbkipThmuBQSxobIVLYbQwylOGagGACj26+WoRwsfMclm/DY1FzHhcuaOKe1gWzC
      J+251Cd96hI65GXmVC6YhoOQY4US/YUSR/MlClHE9t5BnhrMMVAMCKKYuNyKjoyxV/6TWL+D
      be02Jn2a0kk2NdVxdks9dQkfz7UXPKUo5oK2RtqzqWrFPhEPb/z6TaVnIA6hb4dddHyM4+PF
      hel8JrLAxMaQDyPyQcTegRG6RmzaZt/ACD25IkOlkFIUlyvc4w7LcmUPtilZl/BZWZdmfVOW
      lnSS5lSCdY1ZlmVSZHyPTMIjNoak62JgUmkaY0x5tEKEwbC7f4Qn+4YZCUKO5kt05wr2pAoj
      gjgmjMefQCeUmdEA4ToOfnn0Q53vs7I+xcq6DBuasqxvrKM+4dOQ8kl7HinPPZvcJMkAAB2L
      SURBVO0JJEtLtfobszy2dVuKY4LYMFAMOJYvMRyERHGM4zgMlQJ+dWSAQ8N5BoohuSCkGNnr
      96kkayoXMknPJZvw2dCU5aJlTWQSHqvqMrRnUzSmEmR9j5TvnW51U6IAsITlw4ifHuzlke4+
      Dgzl6CsEFKOomgs8vuKs5NVdx+YJ29Ip6pM+sTGc09rA+W2NbGisY0Xd6a80ZlIpismHESNB
      yFApIBdE9OSKdA7l2d0/TG++SCGMAChG8WgwK7/fjFl2ABwH1/7Ac2yfQ1smyYbGLGe3NrA8
      m6KtHNCMMaQ8G9iSrovnjt9vBxQ05li1osamWILYVrq+6xLEMf2FEr35EkG5xdhfCPBdh9jA
      kXyx3J9lCGLDcLmlWyxfXBhGr+ojY6/sC2FMPoiqLeGTlmmCslYq92qL1bEV/aamelbWpVle
      l2JFXZr2TIqmVILWdJLGVGJmP7BTUABYgkpRzLFCiW88fpAHuo4xWArKB64p595tJe+Vr45b
      MknWNWTZ3FzPhqYsHXUZWjPJRZUuqXQ8F6KIA4M5nuwfZmvPAEdyBYZKNu1UKrceJmo5VCpy
      d8xy9QTGIem5pH2P+oSH69q0V1smydqGLJ7rVJvqvmvTUPXlZnqlFVIpo+s4JFy7vsr/Y2Oq
      aa8wNqR9l+ZUkrTvUn4b5S6V6jqXgspAgUpnaDGK7ciXOGawGDBYCm1uvHwBEBvD0XyJI7ki
      R3KF6t+LUYwD1bThZFIsU+9SHc8Z89N1bCuzLZNkWSZFwnNYWZfmae3NtGVS1CU8GpIJYmOq
      6ZuFYN4CQLEU4DhOubllcMvLML5P0XEcYhNXOwIrza+xy47jEMexPSkciONyx6TjEMemerLE
      xuC6jr0iNExtmdEvvHrgVPo/q8tO9YC2+2PX4XkOcWwrHM91qgf72GVbRAewB7LtXLW/i8pX
      JtWDG6rDLnNhxFAppCdXtHnIfImDQzn6iwEjpbBaXg+bl2/N2M7T5dkUaxuzrGvI0pJOkE34
      UB4r7Hkuppxm8Tx3/PjhakrInLBc3WdGKzWwn2Ecjy5H5Way57lEke1Z8DzXVpDlzyUqv9dz
      7HLlKioeuxwb3PJlVRzHuOVho5XlyBhKYYTBITIxnUN5unMFDg0X2Ns/zJF8iZHADkctldNQ
      477fMcuO4YRjYOwp7OBUf3Gyqz4HZ0z4rbQ+HPub8vFeqbSMsem2pOuS8Jzq6yplSXsunuuS
      9uw+RsaQ9W2lkvRcPGf0Z8K1wSfhuTjl76sSkIwxxEDCcezw2/J3bVNyoyNTxqbygti2sFKe
      R2RiEq5bvaCoBLDK8EXfc3EdKITxaEql3JqrrK+vWGKoGBIZeyVfCYShMYTx6PYrx94JzPjv
      afT7OJFjwFS+prFNwuOWq6diWeXzrEv4ZBMenmO/k6Rvr+TPa2tgXWOWrGdTNMny51htGR53
      sFS+78p2Tn5OMbqOSv0zZnnc+VVeNpTrlNiux/fsRcdoHXSSemeiABA7SdxZCgA7dx/ipw/v
      olgKJ6x0x1YYo8uurfQBx3WJ4xhw8FwH39iK3gGKxuGIm6WEzUdXgm1crqQoH/hu+aSsVl6n
      WY6ByDgYM/bbhHK/KK4zeiXjujYymNjF97zyh28DAFGMKQejyutxHBJORBNDuI79e+zGGA9M
      FBM5DkE5ORk4DhH2ZAzskUJcPdgMpny0pcMIv3wQOUDCdahL+vjlYHvCQXGSA8R13dETzzn5
      QXnSSt9x7XLl+xwTDKsBwPUIq8v2u51o2Qb6SnB3q8tjg75b/qLj2OBUg4GpfhdxbD//SmVU
      jGxTvxTFBMYQloN57JQrinKFYQBTroQpL8NovWH/bl/vALHjjFkGt/zCuPwayq93Y/szLi/j
      nPz1joHYHV2ulKUSaOLjK7HjjG7TqVZwlUO4UgaD3W5lubLvlffHY5bNSZed0deM+VwqTHXf
      nTHLJ34m1eXj1lOtvM3otqvL2LFmprw/lfe5xw2nqZa3UvlWN1K54jzxvMaxx3XStfl5v3ye
      uOVWWBjFuOVBCFH5eHQc2yIdrcjtekbblOP3r3K9Wnnt2ADglr/r0YtXqnVHZdleMDH+PIZq
      q3P0nLbbGnt+T9jGD7wmcOom+vO0GWO4f9uDHO4dIiznbU/6uims08Mh443eNNRHkiNuiZNf
      B1TKMYUNlF8fGDBTmT7JgIOPQzhuRW58so4ih3onh+eMlP8WYTxzwi5UDpxE+d8Em2X84Vau
      2LA3aJ3iTROuZyIn/xhP37w1ZnKvO/n2JlMm5/hfTMC+ziv/m1wZplHuSe/v+Nec7vOd7GF8
      0s/tpG+ezPYnsZoJtz+1E28yn9vUPoOJOKf4uyEgZqBYOvl6TlLGidc1te/31Os6/jWnPuZP
      dgxMGACSUd+spICMMaxbkaW7xyWKJg4AE33lx1ealZ9jI2qKCBdTHk879ZN1Ii4QndD4n7px
      a6jmuiDEIzYOrlN+xZi/nXIdE5iZPZ/O/k72PdP9LM/8OzgTY4+2KV5HzJDZ/Nxqbd0zZbaP
      +Zkyfvvz0gcQRTGHevqraYNqM6qcy7Upi3Luf2xzyHXL6aDKclzOe7nE5U4gz3MJw5ii4+J6
      HkEYg+Pgew5hZdm123Qcmz4KItt/UFlOlFsTY5dLUUzSsx1ypciQ9Gw1EEaGhFdpXhnb7Co3
      zRKeSxjZD9z3HILQ7qfnQBDGtjPPdarLnutgooCEa5uPYRTheTbdEUaxXS6Xyx+znErYFFMQ
      xSTLI1fCKCbhe3b8fRTj+zYvadMgbjVVU+ljcXGg3K/ilftVxm6zFEakEnZEUBhGJCvLUUTC
      98ds06aMonIZK59LpdnpwJhmrFsdkeGNWfY9+z1HsSHhe8TlXPDxy1FsiOO42k8Rx+X3mvJ7
      PY+4nMdOePa9sbFpKNvHwbiUUCWPbz8a+//R5jzlfqfKsktkYmyfhVtuUo9+tpV9Bvv+8ctj
      9nXM65MJjzC05U0nfQql0I4a8T2KQYTjOCR8lyAcPdajyOY8qn0iY1Kp3piOZ8cppxqq37n9
      LlznxP4Wu1zev/L5VdmO57r2uDju2HVdlyCMTlx2HILI4Ll2u5XUiEM5rTEmxTq2vGOXfdcl
      KJ/ffnn/gdHPwgHfqyzb8+j483u0LJNbrqR4osjgjz2/q/1WNscelLfjuw6lMedx6STn9+iy
      i+tCENp1H1/XBOU6ZarLo/WRPaYqfU9RbHBdqvvmuy6U66B5GebheS5rO1rnY9MiIlKm2bZE
      RGqUAoCISI1SABARqVEKACIiNUoBQESkRikAiIjUKAUAEZEapQAgIlKjFABERGqUAoCISI1S
      ABARqVEKACIiNWrCyeCMkyB24on+LCIii9xJA4BjYmInSewl57o8IiIyR04eAIhJhkfnuiwi
      IjKH1AcgIlKjFABERGqUAoCISI1SABARqVEKACIiNWpRBABjDMaYSf9+saulfYWFub9BsUgU
      BDOyrlMdv3NhPj/L+d73uXay/Z3vY/lUvPe85z3vAcDEUDgy4Qt/dddd3PXFL3Jo1y42X3bZ
      tDdojKFUKHDnrbey/qKL8PwJ70XDxDF3fvZW7v7ybWy76y7qW1po6egAY3jkv/+H//70p9m3
      9THWnHcuqWx22mWqCEslfvipT5EbGGDFxo0AbPvJXTz4ve+z8ZJLTlnWU+3Dwz/4AUGxSPPy
      5ad8bc++fdxx883cf/u3OPDrHay94AKS6TR9XYf57r/+X375wx+STKdZtnYtjuNMax8r+roO
      852PfISVmzeRbWoijiL+55Zb6DvUxepzz5nWOo0xxFHEjz/3OVZs3Egykznl65944AF+8IlP
      8uD3vkd/dw9rLzgf1/PY++ij3HHzx9h21920r19HfUvLGe9vRRgE/PenP8PDP/gByUyGttWr
      T/q6e7/6VXIDgyzfsOGEfTz0xBP8+qc/Y815551yW6VCgR98/BP89D//k1//7GcsW7OG+tZW
      gmKRH332s9z7la8y2HuEtRdcgOvO/LVYYXiEH3/+P7jnK19mxz33cqyriw0XXzzt9RljyA8N
      ceetn+PsKy4/5WvDUokff+5z3H3bl9l+z900trXRvGIFAA/d8V/86JZb2PvYVtZdsIVkOj3t
      MlXs/PnP+d//+AJrzj+fdF0d+7ZuZf/2HazYtHHa6zTG8OSDD3LoiV2s2LjhlK8d7uvn+x/9
      KD//xtfZ/cuHWbFpE9nGRkYGBvjhJz7Jfd+8naBYpOPss2fnWE6naVuzZsrrmPRRt/myy7jo
      uc9lzy8fxhhDbnCQ7j176T14kDi2dwwXRkYo5fMcPdhJf3f3SaPe/u3bufXtN7HtJ3cRR9Ep
      t2mAupZmrnnLW7j0xS/ma+99H3EUcWjXLu79z69yzZtvoKWjg//62MenttcTiKOIx++7jx9/
      /j8o5nKU8nnuuu02dvz0p8RRRBSGHO3s5PCePRRHRqrvGekfII4ihvv6Tljn19//T9xx88cY
      6Ok57faDYpEtv/VbvPymmwiKRe760peIwpBvfvCDnH3lFbzgDX/IDz/xSQaOTByoJys3NMiO
      n/6Uu750GyaOObhzJ/d983b279gOQDGXo3vfPnoPHCAKQ4JSidzgYPX9xZERivn8uHUOHT3K
      l975d9xz25cpFQqnLUMUBFz1quu5+s038MQvfsH2e++lMDLCtz70Ya561fVcfs3VfP297yMs
      lc54fys8z+OZr3wFyWyWI/v3E5ZK5IeGAIjjmJH+fgDyQ0MU87kT3n/fN2/nK3//Hg78+teT
      2L+Q5RvWc93b3sbZV1zJ7f/8z0RBwM+//g1G+vp5xTtuYu+jW/nVXXfN2P6NdcfHbiY/OMjV
      N9zAb772tfR3H67+bbivj8N79lS/p1KhQGFkhL7Dhzl26NBJz919jz3G5//qr3nszjtPu+04
      imhavoJrb3wrFz33eXz7wx+hmBuh8/HHue/223nZDW+iqX05P/jEJ2bk6rjnqafYu3Urd3/p
      NowxHOvq4tCTuwBbkR892MnRzkPEcVw9VyvbDYrF6jEw1o9u+Szf+MAH6Nm397Tbj4IS6y7c
      wituegdtq1fz/X//d7uOz9xCpqGB6952I7/49rfZv237Ge9rhef7PPN3Xkkqm+XI/gOYOKa/
      u5uu3bvH1UXDff0Uc3kO79lDoVxvVUz6kjbb2GgjuONg4pj/+tjHKeZGyA8OsWztWl7xjpu4
      57Yv88QDD5BtbORYVxevuOntnHX5+CuFNeedx+ve8/d84W/fedptuq7LVddfD0Cmvh4Tx2AM
      T/3qV5z7jGfQvm4dT3v+8/jCnT8iCsNpXaEfz0skWbdlC4/+6EekMhk2XXYp2+++B4AnH3qI
      n/7n18g0NHC0s5PXvefvcVyPL/7t39LY3k5+aIg3ffpT49b3ipvezvcSkyvX6nPPZfW552KM
      oeOsszmyfz/FXI6jBw9yyQtfiOO6rDn/PA7u2HHa1sRkbLz4Ynr27uXI/v3c983bueylLyUo
      2grhJ1/4Akf2HyAMAhLJJC9701/w1X/4R/74Xz9CIp3m6//0Aa66/no2XXpJdX0Nra285l3/
      h1vfftOktn/+s54F2BO0pWMlYbHE4d17aFrezsZL7Hrv+OjNDPf10bJy5RnvL4DjujSvXEm2
      oQGwFySP/M+PuP6v/4rhvj6+8u6/588+dvOE77/yumupa25m14MPnnZbmYZ6rrzuOvsfE/Oz
      b3wDYwx7t27lOb/3u7R2dPC0F76APQ8/wiUveMGM7N9YuYFBOs7aTH1LC+3r17P+ogsB2Hrn
      nTz4/TtoWt5Of3cPv/sP7+Hx++/nri/dRlP7MoaO9fHMV76SK19+3bir1XVbtvDa//N3kzp3
      k5kMV153rV1Op/mJMcRRzJ5HHuX8q65i+fr1XHHtNXz6zW8mCkP8ROKM9/eyF7+YnffdR8++
      p6q/i6OIH3zik3Tv2YMBlq9fz0ve+GfcetM7eP3730fzihXc8+WvkGmo56pXvWrc+p77+68n
      XVdXPSdOpWn5ci5/2csAWLflAvY88ggAT23bxu/9f/9I66pVXPic32bPo4+w4eKLznhfARzH
      oXnFCjKN9lju7+7ha+99L43ty+jdf4AX/emfcu5vPIPPvOUtZBsb8ZMJirk8f/SRD5OuqwOm
      2QfguC4v/fM38oyXv5zznnUVO376UwCCUomnvfAFvOHDH+Kq669n1wMnniSe75PMZJhKIygK
      Av73P77ARc97Hq7vMzIwQKahEYBEOg0GSsddjU6XA/zGK17OQ9+/gwe++z2uvOba6t82XXop
      1974Vi787eeQymbZ99ivMCbGGMPL33Yjf/rv/3bC+pKZzJQDU393Nw9897tc9tKXEAUBjuvg
      uC6O45BpaGBkYPD0K5kE1/e44tpr+P5Hb6aUz7Nuy5bq357ze7/Hc37vd7nwOb/Fkf37aV21
      ikxjA3seeYRjnZ30dXWxbssF49bnuK79bqeYztj9y1/SvWcvZz/jSvLDQ6SzddWKJ1Nff9Kr
      s5kSRxFhsWj/Y8wJrZrj+ckkidTUpkgpFQr892du4ekvfQl+MklheJh0XT0AmYYGcgMD0yr7
      6TzvD/+AXQ8+yKduuIFb3vJWHvr+HYRBwD1f/grPevWr+c3XvpZMg/1OoyBk06WX8oYPfYjX
      /N07+cV3vnPC+jzfJ5FOM5UMRhSG3Hnr5zjvWVeV97WfTKM9d5PpNEGhaC/sZkCmsYErrrma
      e7/yFZs+APoOH2bXAw/w+x/4J/6f972XAzu209fVxeZLL2Xb3XcTlgK23X03Fzz7t05YXyKV
      wptiYMoNDvKTL32JK669BmMMQbFAIpWy527j7H3XAE3L27n+b/+Gi5/7PFZu2sTO+34O2Aus
      V/7lO/ijD38YYwz9h0dbgtO6ZA4KBT73l3/J2gsuYNmaNePyl/XNzTiOQ11LM0c7O89wl+wB
      9INPforc4CDX/81f4zgOqWyWUr5Q/TvYL2umtHR0sOrss/GTSZpXrqj+/oHvfo9f/eQnbHnO
      b5FpaKh2EmYaGmhdvXpGcntHOzv56nv+gee/4Q9Ze/755AYGAQeMAcchKBRnpL+j4qLnPo97
      vvqfXPOWN1MYGgZs/vbr73s/mYYG1m3Zgl+u8J5x3XU88N3v0b5+HZe9xFZmZ8IYw76tW7nj
      5o9x/d/8NY1tbRxJZwjHdL4GhQKpzMzt70TlmC2lfJ5vf/gjNLS28puveS2O45BIpwkDm9aa
      6e9zrNXnnMMbP/5xRvr6eWr7Nr71Lx+iff06coOD7HrwQfxEgtaODpra2ykMj5BpaMD1PBrb
      2ykVzvyCKgwCfvCJTxCWSrzgj/6ofO7WVQNuHEV4vj9jOXGAS170Ih664w4yjQ14iQTDx/po
      Wr4cP5nEB+pbWxnu6+PSF7+Y7/zrv7JszRra16+jqX3ZGW87PzTEV//hHznniit52vOfj+M4
      +MkUUTnVHRQKs/Ndlw/f3Q8/zB03f4ynPf/5pBvqCcqfs+f7ZBobcVyXuuamcefXpC7VgkKR
      UqHA0YMHSWYy9B0+TCmf54V//Mesv+gipnL6VDoKDfYAqJx8W3/8Yw7s2DHutWEQ8LX3vpf8
      4ABX3/AmwlKJKAhYfc457H30EYJCkf3bttG4fPmUI/XpXHvjW3npX/z5uN89fv/9PPP63+Hy
      l72MVPbUHZwVcRRhYoOJ42pfSe/Bg9z/7W+fUPF0Pv4EX3rn3/Gs17yasy6/nOLICMlMmmxj
      Iwd37iQ3MEjnE0+wcvOmmdlJIFWX5U2f+iRnX3FF9Xf54WEO7tzJy254E2dfeQWuYw+Ts6+8
      koGeHh778f9y6YtfdMK6Kt8tGEwUV6/s9j66le333nvC67fddTff/vBHeOVfvoPWVaso5nIs
      X7+OY4cO0d/dzbFDhygVi9S1NM/Y/uaHhwkKBY52dpKpryeZydLf3U1hZISuXbuIo/CU748r
      32N1X21/yX23f+uEPqD80BBf+j/voq6piRf80RsojAwTRxGrzj6LJx96iDAI2PXAA6w+TWfy
      dJg45mdf+xo9+/aRrq9j5cZNZOrqaFy2jPrWVs66/HJe8sY/44prr6Gxvd3ux8gIQbHIrgce
      YPn69Seu09jj2JjRc9cYw6M/upODOx8f99piPs/X3/d+8kNDXP3mG+yoqjBk9XnnsueRRyjl
      8zzxwAOs2LRpRlK3Fem6Op79utfxi+98F4DmlSs41tnJcF8fg7299B/upmXlSjrOOotUNst/
      fezjXHHNNSdttcZxbFv48eh3PdLfz8+/eTvF3Pj+oYGeHm696R2cdfnTueK6aymMjGDimPZ1
      69j36FbCUoldDz7E6nNn7rs+/lje/cuHOf+qq7jq1a+icdlEAW18sJ3UJ79/x3b++1OfxnEd
      XvjHf0zrqlWs2LiJz77t7TS0tVU3VtfUVI1wqUyGuqamE9a155FH+PHnPk9YKnHbu97NNW95
      M22rVvHjWz/Ha9/9rvE7ODTEwZ07qWts4svvejcAL/rTP2H9RRexcvNZ3HLjjbiex8tueNOM
      XEU4rkvT8uU4rlNtUYSlEi0rV+A4DpdffTX/+x+f5/7bv0UilSJVX4fn+zSVT6CTue1d76av
      q4uuJ5/kWFcXz33969n6ozsZPnbshNfue+wxoijk/tu/xf23f4uGZW28+p3v5CVvfCPf+7//
      Bo7DeVc9szpC6Uz4iQQNbW0ApOttOiKVzVDf3EK2sZELf/s5fPZtb6OxbVn174lUis1Pv4wo
      CMmWm/FjDfT08M0P/jPFXI5vfOADPOvVr2bLs3+Te776FS78reec8PonfvELXNflv27+GABr
      t1zA1TfcwDNe/nK+/O6/x5iYF/3J/zujV013feEL7H3sMRrblnHeM5+Jn0qRbWzklhtvpHnF
      Cprabd9KtrGJVLbuhPfffdtt/PpnPyMoFLntXe/m9e9/H4d37+aB73yHK665etxrj3Z20nf4
      MIXhYb5Yzpv/zt/8NVe96lXc/s//wuP3v4Wm9uVc8sKZz//jOJSKRb7+vvfjei6u5/Ps330d
      LR0dXPvWt/CjWz7LPV/+Mo7rcPUNNwDw+C/u59CuJ0ik0lz71reccE49+eBD/OSLX8DEMZ99
      +0288h3voL61hf/5zGd4w4f+Zdxrh3p76d6zh0Q6zZfe+XcAvPQv/pzNl13G9rvv5rNvezuu
      53HtjW+dcsrwZNL19XieB8CWZz+bh3/wQ7KNTTQuW8azX/c6vvA3f4vjulxx7TU0r1yJ4zhc
      cc3V3Hf7t9h06aUnXecdH72Zp7Ztw8QxQ319vPIdN7H7lw+z82c/4xkvv27ca7uefJL80BDb
      77mXHffci+v7/O4//gPP+8M/4Pv/9u/84rvfYcWGjacdPTUVd33hi+x9bKs9lq96Jis2beL2
      D36Q3Y88TF1TMx2bNwO2f6KSpWlsa8NPjLbcHVO5DI1D6Ntx4lagnMsq4icSuOUPOY5jiiMj
      pOrqzngI28GdO/nx5z7P69//vur6T8cYQymfJ5FKTfo9Z6qyTdfzpp1yMsbw+b/8K170J38y
      peGWURgSBcFph1bOFGMMheFhUtls9fMNSyVueeuNXPe2G1l1zuTKXioU+MQb/5w/u/mj1UAy
      GUGxWG5Cz+yU5HEUEZZK5Vy2U/1dqdw8n86FxE+++EUSqRS/+ZrXTPo9xhiKudy0tzlZcRRR
      yudJZjLjzpPq+ZNO47ouD37v+xzr6uJ5f/D7+InEpCvlg7/eyZ233sof/PMHJ70fc33uGmOq
      I8nOJFVsjOHbH/owZ195BRc+58QLmonEUURQnPlUXxzFhKXiuGM5KBaJo8j2xU3i+5jUfQCO
      49hc3ZiDwnGcaufGmSoMD7PhaRef8kr6ZGWayoE6EyrbPJMma6US3/z0y6b02bmuO+NprlOp
      fr9jPt++w4cJikUufu5zJ132Yi7H8nXrWLFp05T21/P9WakcnPLnOLYsjuviJ5PTPpZL+Tzn
      PfOZU6pcKsFtNit/GLNvx50n1fOnvP1iLke6vo6Os86aUplyQ4Nsfvpl1dbkpMo0x+dupf46
      41STMURhwHlXXTWlY9Nx3RkZ5XTiep0TjmXP98d9r6ddx2RaACIisvQsiqkgRERk5ikAiIjU
      qP8f6OgciMxqbUwAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Map total cases' width='384'>
      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
      AP8/HFMrLz3tkyIAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='New Cases' width='384'>
      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
      DAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='New Deaths' width='384'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='384' name='New Tests ' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO3dd5gdd2Hv//fMnLpne9HualWsZjXLNmC5IoHlUHLBwAP4d6k25BcDubmh
      3YsNuUl+mIBzQ8kNkGACuAA/EoKNO7YF7lWymi1Lsnpdle27Z/f0mfneP85qpZXWapZXNt/P
      63n82D6aMzPnHO28Z74zc9YxxhhERMQ67pleAREROTMiI/9lDJjwDK6KiIiMp8MCEEDfhjO4
      KiIiMp40BCQiYikFQETEUgqAiIilFAAREUspACIillIAREQspQCIiFhKARARsZQCICJiKQVA
      RMRSCoCIiKUUABERSykAIiKWUgBERCylAIiIWEoBEBGxlAIgImIpBUBExFIKgIiIpRQAERFL
      KQAiIpZSAERELKUAiIhYSgEQEbGUAiAiYikFQETEUgqAiIilFAAREUspACIillIAREQspQCI
      iFhKARARsZQCICJiKQVARMRSCoCIiKUUABERSykAIiKWUgBERCwVGevBEI98pGm810VERMbR
      mAFwCajwD4z3uoiIyDjSEJCIiKUUABERSykAIiKWUgBERCylAIiIWEoBEBGxlAIgImIpBUBE
      xFIKgIiIpRQAERFLKQAiIpZSAERELKUAiIhYSgEQEbGUAiAiYikFQETEUgqAiIilFAAREUsp
      ACIillIAREQspQCIiFhKARARsZQCICJiKQVARMRSCoCIiKUUABERSykAIiKWUgBERCylAIiI
      WEoBEBGxlAIgImIpBUBExFIKgIiIpRQAERFLKQAiIpZSAERELKUAiIhYSgEQEbGUAiAiYikF
      QETEUgqAiIilFAAREUspACIillIAREQspQCIiFhKARARsVRkrAcNDr6THO91ERGRcTRmAACM
      443neoiIyDgbMwAOhlg4ON7rIiIi40jnAERELKUAiIhYSgEQEbGUAiAiYikFQETEUgqAiIil
      FAAREUspACIillIAREQspQCIiFhKARARsZQCICJiKQVARMRSCoCIiKUUABERSykAIiKWUgBE
      RCylAIiIWEoBEBGxlAIgImIpBUBExFIKgIiIpRQAERFLKQAiIpZSAERELKUAiIhYSgEQEbGU
      AiAiYikFQETEUgqAiIilFAAREUspACIillIAREQspQCIiFhKARARsZQCICJiKQVARMRSCoCI
      iKUUABERSykAIiKWUgBERCylAIiIWEoBEBGxlAIgImIpBUBExFKRsR40OARObLzXRURExtGY
      AQCHwE2O75qIiMi4GjMADiHxoH+810VERMaRzgGIiFhKARARsZQCICJiKQVARMRSCoCIiKUU
      ABERSykAIiKWUgBERCylAIiIWEoBEBGxlAIgImIpBUBExFIKgIiIpRQAERFLKQAiIpZSAERE
      LKUAiIhYSgEQEbGUAiAiYikFQETEUgqAiIilFAAREUspACIillIAREQspQCIiFhKARARsZQC
      ICJiKQVARMRSCoCIiKUUABERSykAIiKWUgBERCylAIiIWEoBEBGxlAIgImIpBUBExFIKgIiI
      pRQAERFLKQAiIpZSAERELKUAiIhYSgEQEbGUAiAiYikFQETEUgqAiIilFAAREUtFxnowxCMf
      aRrvdRERkXE0ZgBcAir8A+O9LiIiMo40BCQiYikFQETEUgqAiIilFAAREUspACIillIAREQs
      pQCIiFhKARARsZQCICJiKQVARMRSCoCIiKUUABERSykAIiKWUgBERCylAIiIWEoBEBGxlAIg
      ImIpBUBExFIKgIiIpRQAERFLKQAiIpZSAERELKUAiIhYSgEQEbGUAiAiYikFQETEUgqAiIil
      FAAREUspACIillIAREQspQCIiFhKARARsZQCICJiKQVARMRSCoCIiKUUABERSykAIiKWUgBE
      RCylAIiIWEoBEBGxlAIgImIpBUBExFIKgIiIpRQAERFLKQAiIpaKjPWgAcAZ1xUREZHx9QoB
      cClEGsd7XUREZByNGQCXkKTfOd7rIiIi40jnAERELKUAiIhYSgEQEbGUAiAiYikFQETEUgqA
      iIilFAAREUspACIillIAREQspQCIiFhKARARsZQCICJiKQVARMRSCoCIiKUUABERSykAIiKW
      UgBERCylAIiIWEoBEBGxlAIgImIpBUBExFIKgIiIpRQAERFLKQAiIpZSAERELKUAiIhYSgEQ
      EbGUAiAiYikFQETEUgqAiIilFAAREUspACIillIAREQspQCIiFhKARARsZQCICJiKQVARMRS
      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
      Ipb6v9v69bW8Kww5AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='New Vaccinations' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAd80lEQVR4nO3deWCU5YHH8d9cuW+uJBCuJCCnCgQvUBQRLzxapVvwqK1ttWu7rbbdrVfd
      2m13q+3Wu97W2wpSIdgFRDHKDYJcgQiBXDC570xmMvO++0cgkiZcSYjK8/38BcOb932eeWfm
      +77vDBOHbdu2AADGcX7ZAwAAfDncbX+ybcm2vsShAAB602EBCEnVO77EoQAAehOXgADAUAQA
      AAxFAADAUAQAAAxFAADAUAQAAAxFAADAUAQAAAxFAADAUAQAAAxFAADAUAQAAAxFAADAUAQA
      AAxFAADAUAQAAAxFAADAUAQAAAxFAADAUAQAAAxFAADAUAQAAAxFAADAUAQAAAzl7uxGSy41
      u/v19lgAAL2o0wA4FFJk0NvbYwEA9KIjBAAAcKrjPQAAMBQBAABDEQAAMBQBAABDEQAAMBQB
      AABDEQAAMBQBAABDEQAAMBQBAABDEQAAMBQBAABDEQAAMBQBAABDEQAAMBQBAABDEQAAMBQB
      AABDEQAAMBQBAABDEQAAMBQBAABDEQAAMBQBAABDEQAAMBQBAABDEQAAMBQBAABDEQAAMBQB
      AABDEQAAMBQBAABDEQAAMBQBAABDEQAAMBQBAABDEQAAMBQBAABDEQAAMBQBAABDEQAAMBQB
      AABDEQAAMBQBAABDEQAAMBQBAABDEQAAMBQBAABDEQAAMBQBAABDEQAAMBQBAABDEQAAMBQB
      AABDEQAAMBQBAABDEQAAMBQBAABDuTu70ZJLze5+vT0WAEAv6jQAToUUFfT29lgAAL2IS0AA
      YCgCAACGIgAAYCgCAACGIgAAYCgCAACGIgAAYCgCAACGIgAAYCgCAACGIgAAYCgCAACGIgAA
      YCgCAACGIgAAYCgCAACGIgAAYCgCAACGIgAAYCgCAACGIgAAYCgCAACGIgAAYCgCAACGIgAA
      YCgCAACGIgAAYCgCAACGIgAAYCgCAACGIgAAYCgCAACGIgAAYCgCAACGIgAAYCgCAACGIgAA
      YCgCAACGIgAAYCgCAACGIgAAYCgCAACGIgAAYCgCAACGIgAAYCgCAACGIgAAYCgCAACGIgAA
      YCgCAACGIgAAYCgCAACGIgAAYCgCAACGIgAAYCgCAACGIgAAYCgCAACGcnd2oy3JcoT38lAA
      AL2p0wBITgWdUb07EgBAr+o0AA5ZCg9V9/ZYAAC9iPcAAMBQBAAADEUAAMBQBAAADEUAAMBQ
      BAAADEUAAMBQBAAADEUAAMBQBAAADEUAAMBQBAAADEUAAMBQBAAADEUAAMBQBAAADEUAAMBQ
      BAAADEUAAMBQBAAADEUAAMBQBAAADEUAAMBQBAAADEUAAMBQBAAADEUAAMBQBAAADEUAAMBQ
      BAAADEUAAMBQBAAADEUAAMBQBAAADEUAAMBQBAAADEUAAMBQBAAADEUAAMBQBAAADEUAAMBQ
      BAAADEUAAMBQBAAADEUAAMBQBAAADEUAAMBQBAAADEUAAMBQBAAADEUAAMBQBAAADEUAAMBQ
      BAAADEUAAMBQBAAADEUAAMBQ7s5utHt7FACAXneEALjU7O7b22MBAPSiTgPgVEhRwdLeHgsA
      oBfxHgAAGIoAAIChCAAAGIoAAIChCAAAGIoAAIChCAAAGIoAAIChCAAAGIoAAIChCAAAGIoA
      AIChCAAAGIoAAIChCAAAGIoAAIChCAAAGIoAAIChCAAAGIoAAIChCAAAGIoAAIChCAAAGIoA
      AIChCAAAGIoAAIChCAAAGIoAAIChCAAAGIoAAIChCAAAGIoAAIChCAAAGIoAAIChCAAAGIoA
      AIChCAAAGIoAAIChCAAAGIoAAIChCAAAGIoAAIChCAAAGIoAAIChCAAAGIoAAIChCAAAGIoA
      AIChCAAAGIoAAIChCAAAGIoAAIChCAAAGIoAAIChCAAAGIoAAIChCAAAGIoAAICh3J3daMuh
      Fmdsb48FANCLOg2AJDntlt4cBwCgl3UaAIdsuW1fb48FANCLeA8AAAxFAADAUAQAAAxFAADA
      UAQAAAxFAADAUAQAAAxFAADAUAQAAAxFAADAUAQAAAxFAADAUAQAAAxFAADAUAQAAAxFAADA
      UAQAAAxFAADAUAQAAAxFAADAUAQAAAxFAADAUAQAAAxFAADAUAQAAAxFAADAUAQAAAxFAADA
      UAQAAAxFAADAUAQAAAxFAADAUAQAAAxFAADAUAQAAAxFAADAUAQAAAxFAADAUAQAAAxFAADA
      UAQAAAxFAADAUAQAAAxFAADAUAQAAAxFAADAUAQAAAxFAADAUAQAAAxFAADAUAQAAAxFAADA
      UAQAAAxFAADAUAQAAAzl/rIHAADouuqGFvn8oeNaNiHGo6hwV9vfCQAAfI2FQrYCQfv4lrXa
      L0cAAOAU4wzUy1ObL5evXM6WRkm2HFZInnBJ/dPljx0sf2ND5wGw5VTAGXfSBmdZlkKhkGzZ
      kt26xbDK7Qrf8ZZkWydtuwBwqokOhBTh90lWixxWQA7bkqcmX+6mUjnsYMcfcDgV5omWJxQ4
      0hmALZftO2kDbvYFVNPQrGDIkm3ZUrBZaSv+Q6reddK2CQCnosgj/YM7QooaIHkiW/98SOUe
      OVoa5XA45bBtu/WikBWUqnec9MEeUUWetPkNzgAA4ER5IiWXR3J6JIdTShomDcqSYvp3XNbf
      INUWStH9vkIBAAD0Kv4fAAAYigAAgKEIAAAYigAAgKEIAAAYigAAgKEIAAAYigAAgKEIAAAY
      igAAgKEIAAAYigAAgKEIAAAYigAAgKEIAAAYigAAgKEIAAAYigAAgKEIAAAYigAAgKEIAAAY
      qssBCAWDqiktVY23VMGWlm4PxFdfr0Bz8zGXC7a0qLKkRKX5+fLV18u2bUmSbduqPuBVeVGR
      goFAt8djW5Zqy8vl9/nabmtuaFBdRUXbNruiqa5OLX7/MZcLBYOqPuCVNz9fDdXVX8zTslR1
      4IAqiop65H63LEu1ZWXt7ntffb3qKiu7vW5ffb0Ch91/RxxDKKSa0lJ58/NVX1V10vbp4fxN
      Tar2elVbXn7EZVoCAe1avabT/W3btuorK2WFQsfcVovfr8qSEnnz89Xc0NB2e7ClRRVFxao6
      cECWZXVtIkdh27aa6upUtm+fKktK2j2Wu7xOy1JdxbEfG7Ztq7G2VqV796qiuFihYLDt3wI+
      n8oKClRXUdHt8Uit92O116uWg49hKxRSfWVlt56nUutz43jWc/j9XFFUpNBhz0tfQ4PK9hWo
      obq6W2NpN66Dz5dqr7fbzwt3V3/QV1+v/3v6aRVt36E5v/lPDRw5ssuD2Ldli5a/+KLOve46
      jTrvvKMuu2refG3PyZHb41Fjba1u+v3vlJiSonXvLtSG995TREy0YhKTdP3dv5LT5erymPxN
      TXr+Z3cqMytLs/7tJ7IsSwseelhV+/fr9r88JccJrtu2LO3bskVLn31O0797izImTjzq8ttz
      cpTzxhuKjI1V9QGvZt97j9JGj9Ynb7+tbR+ukCciQkmpqbrm53fJ6ez6iVxzQ4OevuPHOn36
      dM384Q9khUJ6+7/+S0119brtySe6vN59W7fqgxdf0lnXXKMx50896rJ569Zp2XPPKzohQVX7
      9+uau+5S+sQJWr8oW+uzsxUZE6Oo+HjNvveebu3TwxVu367V899RZUmJfvbKy50u429s1P89
      /bRGnDVZcjjabg80N2vPp5/qH08+pe8/8ohi+yQddVsfvfa6dm9YL6fLpUCzXzf89kHF9++v
      d//4p9YXLr9fY6ddoCmzZ8tx2Ha6a8/GT7X48ccVk5ioFn+zAs3N+skLL3R5fY01NcpdtUqr
      3p6nn7x49PX4G5v02r33yRMertqyMqVPnKgr7vhXBVta9PKv7pYnLEz1VVW6+Hvf1cizz+7W
      vMsLC/XMHT/WOd/4hmbc+j011tTorQd/q+/+8eETfp4eUlterm0rVihvzVp956E/tNv//6yl
      uVlvPvCfksOh+spKDTptpK79xS9UX1mlNx54QFFxcaopK9M3/+PfNXDEiK5Os42vvl5Ln31O
      hdu26fp77taQceO6vK4uByAmMVH/cv/9evbffiorFFJZQYE2L12qgK9Zg8eO0bgLL5Svvl47
      Pv5ElhVSeUGBzphxiQaO7HgHFGzdqqa6uuM6mppw6UxNmX29HE6n3vnDQ8pbu1ZnzpyplW+/
      rVsf+bOi4uP1/E9/qv15eRo0alRXp6eDx6DavX696ioq1FBVpaoD++X3+WTbkjc/X1uWL1eL
      36+h48dr1JQp8tXVafeGjYpOiFdFcbHOvuaaL9Zn2yrYuq31rCV07KO9jIkTNXrqVLk9Hq14
      9VVt/fBD9U1L04bsbH3/kUcUHhOjZ+64Q2V79yo5Pb3r87RtOV0u5a5apXOvv05VJSWqq6hs
      OyLdn5enrStWyOlyacKllyomMVGbli7V5Fmz5HS55N2zR3UVla0vkocpPIF9OmTsWN325BPy
      hIdrzYIF+mz5+0obM1qfvPWWbv3z/yoqIUEv/OxOFe/cpcFjRnd5rofLzMpSv8GD9cJdP5ck
      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
      yB3m0WU/ul0ut1sxiUlqrKmWbVmyQiE119crKi6uW/M53KHH45mXXKIJM2equbFRT912u8oK
      9skTHqYzZlyiqLg4ZV15pWL79NH2j3IktT5urVCo3WP9mPMOhVojdthRtG3bOrBnj+b/93/r
      kh98XxmTWg8SYvskqba8vO2N0/CoqG69h3W41rOAq5Tz2utHXa7voEGKTUrShuxsSa1nNsfj
      0GuSw+Fod8Zg27Yqior01oO/1QVzvq3RU6fK4XAoJilJ9Qc/TFFXUamouHi53N16yW0/llBI
      ckhLnn5a/YcN0/lzvq1V8+a17ftDr0JOp1MOp7PT+HTpng8Fg9q8dJnWLVyo+upqxfXrJztk
      qcZbqp2rVmrXmjUntL6dq1apxutV0Y4dKsnLkyRtW7FCr//6gQ7LLn7sce3ZtElpo0Zp89Jl
      2rVmjSLj4pQ2erSWPvus1i9apKqS/Ro8dmxXptapiZdfrsysrHa3WaGQag54teOTlfp83fpj
      rsOyLOWuXKna8nIVbNuqA7v3SJI2LV2qeb/7fYflP3nzLa35+7vKmDRR23M+1tYVKxSdmKh+
      g9O0/MWXtGbB39VUV6fUzMyemaSks665WsNOP73dbaFgUJUlxVrxysuyQq2f5PBEROj06dO1
      a81anXHxxZ2ua+fq1ao+4FVxbm7bteftOTl6/b77Oyy7fuEirXjlVY08+2zlfrJSny1frrCI
      CA0dN05LnnlG67OzVVFY1K03uw5XW1auT5cs0er57yhp4EBJUlJqqlbNm6fV8+dr58pVR/15
      X0ODcleukq++QXlr16ra65Vt21r6zDPKef2NDssvePhhFefmKjUzU5uWLNXuDRuUNma0asvK
      tfbdd7Xi1VeVnJ6u8KioHpmf1PoC8cqv7tY/nvqLtnzwgVbPny+n06m0UaM0eMxYrVu4UJXF
      Rfps+XKV5reeARRu26bPln+g7Ecf0/gLL+ywzprSUuWtXafmxiZtz/lYvoYGhYJBvXbf/dq5
      anW7ZWvLyvTXX/xSqRmZqiuv0PpF2aopLdVp557buo/ff19Ln31Oo6dObXfA0V2nz7i47VJa
      WGSkBo0epeUvvqRtH+Voy/IPlDm59XmcNetKLXvueU28/PJOj/7LCwq1Z+OnaqytVe6qVWrx
      +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
      DPX/uxo8FJLvv2sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Positive Rate' width='384'>
      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
      okj9P2f0Aey0kxMlAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
