<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20242.24.0807.0327                               -->
<workbook original-version='18.1' source-build='2024.2.2 (20242.24.0807.0327)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
    <ZoneFriendlyName />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style>
    <style-rule element='all'>
      <format attr='font-family' value='Verdana' />
      <format attr='color' value='#78290f' />
    </style-rule>
  </style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Select Continent' datatype='string' name='[Continent Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Asia&quot;'>
        <calculation class='tableau' formula='&quot;Asia&quot;' />
        <members>
          <member value='&quot;Africa&quot;' />
          <member value='&quot;Asia&quot;' />
          <member value='&quot;Europe&quot;' />
          <member value='&quot;North America&quot;' />
          <member value='&quot;Oceania&quot;' />
          <member value='&quot;South America&quot;' />
        </members>
      </column>
    </datasource>
    <datasource caption='CovidDeaths_cleaned' inline='true' name='federated.1sfrzyp1v45e731di51f21buvywi' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='CovidDeaths_cleaned' name='textscan.11mfhmv09f8irm1g1he5d02k6pq9'>
            <connection class='textscan' directory='/Users/miadang/Desktop/DA/Covid_Analysis' filename='CovidDeaths_cleaned.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.11mfhmv09f8irm1g1he5d02k6pq9' name='CovidDeaths_cleaned.csv' table='[CovidDeaths_cleaned#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='iso_code' ordinal='0' />
            <column datatype='string' name='continent' ordinal='1' />
            <column datatype='string' name='location' ordinal='2' />
            <column datatype='date' name='date' ordinal='3' />
            <column datatype='integer' name='total_cases' ordinal='4' />
            <column datatype='integer' name='new_cases' ordinal='5' />
            <column datatype='real' name='new_cases_smoothed' ordinal='6' />
            <column datatype='integer' name='total_deaths' ordinal='7' />
            <column datatype='integer' name='new_deaths' ordinal='8' />
            <column datatype='real' name='new_deaths_smoothed' ordinal='9' />
            <column datatype='real' name='total_cases_per_million' ordinal='10' />
            <column datatype='real' name='new_cases_per_million' ordinal='11' />
            <column datatype='real' name='new_cases_smoothed_per_million' ordinal='12' />
            <column datatype='real' name='total_deaths_per_million' ordinal='13' />
            <column datatype='real' name='new_deaths_per_million' ordinal='14' />
            <column datatype='real' name='new_deaths_smoothed_per_million' ordinal='15' />
            <column datatype='real' name='reproduction_rate' ordinal='16' />
            <column datatype='integer' name='icu_patients' ordinal='17' />
            <column datatype='integer' name='icu_patients_per_million' ordinal='18' />
            <column datatype='integer' name='hosp_patients' ordinal='19' />
            <column datatype='integer' name='hosp_patients_per_million' ordinal='20' />
            <column datatype='integer' name='weekly_icu_admissions' ordinal='21' />
            <column datatype='integer' name='weekly_icu_admissions_per_million' ordinal='22' />
            <column datatype='integer' name='weekly_hosp_admissions' ordinal='23' />
            <column datatype='integer' name='weekly_hosp_admissions_per_million' ordinal='24' />
            <column datatype='integer' name='new_tests' ordinal='25' />
            <column datatype='integer' name='total_tests' ordinal='26' />
            <column datatype='real' name='total_tests_per_thousand' ordinal='27' />
            <column datatype='real' name='new_tests_per_thousand' ordinal='28' />
            <column datatype='integer' name='new_tests_smoothed' ordinal='29' />
            <column datatype='real' name='new_tests_smoothed_per_thousand' ordinal='30' />
            <column datatype='real' name='positive_rate' ordinal='31' />
            <column datatype='real' name='tests_per_case' ordinal='32' />
            <column datatype='string' name='tests_units' ordinal='33' />
            <column datatype='integer' name='total_vaccinations' ordinal='34' />
            <column datatype='integer' name='people_vaccinated' ordinal='35' />
            <column datatype='integer' name='people_fully_vaccinated' ordinal='36' />
            <column datatype='integer' name='new_vaccinations' ordinal='37' />
            <column datatype='integer' name='new_vaccinations_smoothed' ordinal='38' />
            <column datatype='real' name='total_vaccinations_per_hundred' ordinal='39' />
            <column datatype='real' name='people_vaccinated_per_hundred' ordinal='40' />
            <column datatype='real' name='people_fully_vaccinated_per_hundred' ordinal='41' />
            <column datatype='integer' name='new_vaccinations_smoothed_per_million' ordinal='42' />
            <column datatype='real' name='stringency_index' ordinal='43' />
            <column datatype='integer' name='population' ordinal='44' />
            <column datatype='real' name='population_density' ordinal='45' />
            <column datatype='real' name='median_age' ordinal='46' />
            <column datatype='real' name='aged_65_older' ordinal='47' />
            <column datatype='real' name='aged_70_older' ordinal='48' />
            <column datatype='real' name='gdp_per_capita' ordinal='49' />
            <column datatype='real' name='extreme_poverty' ordinal='50' />
            <column datatype='real' name='cardiovasc_death_rate' ordinal='51' />
            <column datatype='real' name='diabetes_prevalence' ordinal='52' />
            <column datatype='real' name='female_smokers' ordinal='53' />
            <column datatype='real' name='male_smokers' ordinal='54' />
            <column datatype='real' name='handwashing_facilities' ordinal='55' />
            <column datatype='real' name='hospital_beds_per_thousand' ordinal='56' />
            <column datatype='real' name='life_expectancy' ordinal='57' />
            <column datatype='real' name='human_development_index' ordinal='58' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.11mfhmv09f8irm1g1he5d02k6pq9' name='CovidDeaths_cleaned.csv' table='[CovidDeaths_cleaned#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='iso_code' ordinal='0' />
            <column datatype='string' name='continent' ordinal='1' />
            <column datatype='string' name='location' ordinal='2' />
            <column datatype='date' name='date' ordinal='3' />
            <column datatype='integer' name='total_cases' ordinal='4' />
            <column datatype='integer' name='new_cases' ordinal='5' />
            <column datatype='real' name='new_cases_smoothed' ordinal='6' />
            <column datatype='integer' name='total_deaths' ordinal='7' />
            <column datatype='integer' name='new_deaths' ordinal='8' />
            <column datatype='real' name='new_deaths_smoothed' ordinal='9' />
            <column datatype='real' name='total_cases_per_million' ordinal='10' />
            <column datatype='real' name='new_cases_per_million' ordinal='11' />
            <column datatype='real' name='new_cases_smoothed_per_million' ordinal='12' />
            <column datatype='real' name='total_deaths_per_million' ordinal='13' />
            <column datatype='real' name='new_deaths_per_million' ordinal='14' />
            <column datatype='real' name='new_deaths_smoothed_per_million' ordinal='15' />
            <column datatype='real' name='reproduction_rate' ordinal='16' />
            <column datatype='integer' name='icu_patients' ordinal='17' />
            <column datatype='integer' name='icu_patients_per_million' ordinal='18' />
            <column datatype='integer' name='hosp_patients' ordinal='19' />
            <column datatype='integer' name='hosp_patients_per_million' ordinal='20' />
            <column datatype='integer' name='weekly_icu_admissions' ordinal='21' />
            <column datatype='integer' name='weekly_icu_admissions_per_million' ordinal='22' />
            <column datatype='integer' name='weekly_hosp_admissions' ordinal='23' />
            <column datatype='integer' name='weekly_hosp_admissions_per_million' ordinal='24' />
            <column datatype='integer' name='new_tests' ordinal='25' />
            <column datatype='integer' name='total_tests' ordinal='26' />
            <column datatype='real' name='total_tests_per_thousand' ordinal='27' />
            <column datatype='real' name='new_tests_per_thousand' ordinal='28' />
            <column datatype='integer' name='new_tests_smoothed' ordinal='29' />
            <column datatype='real' name='new_tests_smoothed_per_thousand' ordinal='30' />
            <column datatype='real' name='positive_rate' ordinal='31' />
            <column datatype='real' name='tests_per_case' ordinal='32' />
            <column datatype='string' name='tests_units' ordinal='33' />
            <column datatype='integer' name='total_vaccinations' ordinal='34' />
            <column datatype='integer' name='people_vaccinated' ordinal='35' />
            <column datatype='integer' name='people_fully_vaccinated' ordinal='36' />
            <column datatype='integer' name='new_vaccinations' ordinal='37' />
            <column datatype='integer' name='new_vaccinations_smoothed' ordinal='38' />
            <column datatype='real' name='total_vaccinations_per_hundred' ordinal='39' />
            <column datatype='real' name='people_vaccinated_per_hundred' ordinal='40' />
            <column datatype='real' name='people_fully_vaccinated_per_hundred' ordinal='41' />
            <column datatype='integer' name='new_vaccinations_smoothed_per_million' ordinal='42' />
            <column datatype='real' name='stringency_index' ordinal='43' />
            <column datatype='integer' name='population' ordinal='44' />
            <column datatype='real' name='population_density' ordinal='45' />
            <column datatype='real' name='median_age' ordinal='46' />
            <column datatype='real' name='aged_65_older' ordinal='47' />
            <column datatype='real' name='aged_70_older' ordinal='48' />
            <column datatype='real' name='gdp_per_capita' ordinal='49' />
            <column datatype='real' name='extreme_poverty' ordinal='50' />
            <column datatype='real' name='cardiovasc_death_rate' ordinal='51' />
            <column datatype='real' name='diabetes_prevalence' ordinal='52' />
            <column datatype='real' name='female_smokers' ordinal='53' />
            <column datatype='real' name='male_smokers' ordinal='54' />
            <column datatype='real' name='handwashing_facilities' ordinal='55' />
            <column datatype='real' name='hospital_beds_per_thousand' ordinal='56' />
            <column datatype='real' name='life_expectancy' ordinal='57' />
            <column datatype='real' name='human_development_index' ordinal='58' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[CovidDeaths_cleaned.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>iso_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[iso_code]</local-name>
            <parent-name>[CovidDeaths_cleaned.csv]</parent-name>
            <remote-alias>iso_code</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>continent</remote-name>
            <remote-type>129</remote-type>
            <local-name>[continent]</local-name>
            <parent-name>[CovidDeaths_cleaned.csv]</parent-name>
            <remote-alias>continent</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[CovidDeaths_cleaned.csv]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[CovidDeaths_cleaned.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[CovidDeaths_cleaned.csv]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_cases]</local-name>
            <parent-name>[CovidDeaths_cleaned.csv]</parent-name>
            <remote-alias>new_cases</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_smoothed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_smoothed]</local-name>
            <parent-name>[CovidDeaths_cleaned.csv]</parent-name>
            <remote-alias>new_cases_smoothed</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[CovidDeaths_cleaned.csv]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_deaths]</local-name>
            <parent-name>[CovidDeaths_cleaned.csv]</parent-name>
            <remote-alias>new_deaths</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_smoothed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_smoothed]</local-name>
            <parent-name>[CovidDeaths_cleaned.csv]</parent-name>
            <remote-alias>new_deaths_smoothed</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_cases_per_million]</local-name>
            <parent-name>[CovidDeaths_cleaned.csv]</parent-name>
            <remote-alias>total_cases_per_million</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_per_million]</local-name>
            <parent-name>[CovidDeaths_cleaned.csv]</parent-name>
            <remote-alias>new_cases_per_million</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_smoothed_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_smoothed_per_million]</local-name>
            <parent-name>[CovidDeaths_cleaned.csv]</parent-name>
            <remote-alias>new_cases_smoothed_per_million</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_deaths_per_million]</local-name>
            <parent-name>[CovidDeaths_cleaned.csv]</parent-name>
            <remote-alias>total_deaths_per_million</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_per_million]</local-name>
            <parent-name>[CovidDeaths_cleaned.csv]</parent-name>
            <remote-alias>new_deaths_per_million</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_smoothed_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_smoothed_per_million]</local-name>
            <parent-name>[CovidDeaths_cleaned.csv]</parent-name>
            <remote-alias>new_deaths_smoothed_per_million</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>reproduction_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[reproduction_rate]</local-name>
            <parent-name>[CovidDeaths_cleaned.csv]</parent-name>
            <remote-alias>reproduction_rate</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>icu_patients</remote-name>
            <remote-type>20</remote-type>
            <local-name>[icu_patients]</local-name>
            <parent-name>[CovidDeaths_cleaned.csv]</parent-name>
            <remote-alias>icu_patients</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>icu_patients_per_million</remote-name>
            <remote-type>20</remote-type>
            <local-name>[icu_patients_per_million]</local-name>
            <parent-name>[CovidDeaths_cleaned.csv]</parent-name>
            <remote-alias>icu_patients_per_million</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hosp_patients</remote-name>
            <remote-type>20</remote-type>
            <local-name>[hosp_patients]</local-name>
            <parent-name>[CovidDeaths_cleaned.csv]</parent-name>
            <remote-alias>hosp_patients</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hosp_patients_per_million</remote-name>
            <remote-type>20</remote-type>
            <local-name>[hosp_patients_per_million]</local-name>
            <parent-name>[CovidDeaths_cleaned.csv]</parent-name>
            <remote-alias>hosp_patients_per_million</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_icu_admissions</remote-name>
            <remote-type>20</remote-type>
            <local-name>[weekly_icu_admissions]</local-name>
            <parent-name>[CovidDeaths_cleaned.csv]</parent-name>
            <remote-alias>weekly_icu_admissions</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_icu_admissions_per_million</remote-name>
            <remote-type>20</remote-type>
            <local-name>[weekly_icu_admissions_per_million]</local-name>
            <parent-name>[CovidDeaths_cleaned.csv]</parent-name>
            <remote-alias>weekly_icu_admissions_per_million</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_hosp_admissions</remote-name>
            <remote-type>20</remote-type>
            <local-name>[weekly_hosp_admissions]</local-name>
            <parent-name>[CovidDeaths_cleaned.csv]</parent-name>
            <remote-alias>weekly_hosp_admissions</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_hosp_admissions_per_million</remote-name>
            <remote-type>20</remote-type>
            <local-name>[weekly_hosp_admissions_per_million]</local-name>
            <parent-name>[CovidDeaths_cleaned.csv]</parent-name>
            <remote-alias>weekly_hosp_admissions_per_million</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_tests]</local-name>
            <parent-name>[CovidDeaths_cleaned.csv]</parent-name>
            <remote-alias>new_tests</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_tests</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_tests]</local-name>
            <parent-name>[CovidDeaths_cleaned.csv]</parent-name>
            <remote-alias>total_tests</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_tests_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_tests_per_thousand]</local-name>
            <parent-name>[CovidDeaths_cleaned.csv]</parent-name>
            <remote-alias>total_tests_per_thousand</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_tests_per_thousand]</local-name>
            <parent-name>[CovidDeaths_cleaned.csv]</parent-name>
            <remote-alias>new_tests_per_thousand</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_smoothed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_tests_smoothed]</local-name>
            <parent-name>[CovidDeaths_cleaned.csv]</parent-name>
            <remote-alias>new_tests_smoothed</remote-alias>
            <ordinal>29</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_smoothed_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_tests_smoothed_per_thousand]</local-name>
            <parent-name>[CovidDeaths_cleaned.csv]</parent-name>
            <remote-alias>new_tests_smoothed_per_thousand</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>positive_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[positive_rate]</local-name>
            <parent-name>[CovidDeaths_cleaned.csv]</parent-name>
            <remote-alias>positive_rate</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tests_per_case</remote-name>
            <remote-type>5</remote-type>
            <local-name>[tests_per_case]</local-name>
            <parent-name>[CovidDeaths_cleaned.csv]</parent-name>
            <remote-alias>tests_per_case</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tests_units</remote-name>
            <remote-type>129</remote-type>
            <local-name>[tests_units]</local-name>
            <parent-name>[CovidDeaths_cleaned.csv]</parent-name>
            <remote-alias>tests_units</remote-alias>
            <ordinal>33</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_vaccinations</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_vaccinations]</local-name>
            <parent-name>[CovidDeaths_cleaned.csv]</parent-name>
            <remote-alias>total_vaccinations</remote-alias>
            <ordinal>34</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_vaccinated</remote-name>
            <remote-type>20</remote-type>
            <local-name>[people_vaccinated]</local-name>
            <parent-name>[CovidDeaths_cleaned.csv]</parent-name>
            <remote-alias>people_vaccinated</remote-alias>
            <ordinal>35</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_fully_vaccinated</remote-name>
            <remote-type>20</remote-type>
            <local-name>[people_fully_vaccinated]</local-name>
            <parent-name>[CovidDeaths_cleaned.csv]</parent-name>
            <remote-alias>people_fully_vaccinated</remote-alias>
            <ordinal>36</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_vaccinations</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_vaccinations]</local-name>
            <parent-name>[CovidDeaths_cleaned.csv]</parent-name>
            <remote-alias>new_vaccinations</remote-alias>
            <ordinal>37</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_vaccinations_smoothed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_vaccinations_smoothed]</local-name>
            <parent-name>[CovidDeaths_cleaned.csv]</parent-name>
            <remote-alias>new_vaccinations_smoothed</remote-alias>
            <ordinal>38</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_vaccinations_per_hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_vaccinations_per_hundred]</local-name>
            <parent-name>[CovidDeaths_cleaned.csv]</parent-name>
            <remote-alias>total_vaccinations_per_hundred</remote-alias>
            <ordinal>39</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_vaccinated_per_hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[people_vaccinated_per_hundred]</local-name>
            <parent-name>[CovidDeaths_cleaned.csv]</parent-name>
            <remote-alias>people_vaccinated_per_hundred</remote-alias>
            <ordinal>40</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_fully_vaccinated_per_hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[people_fully_vaccinated_per_hundred]</local-name>
            <parent-name>[CovidDeaths_cleaned.csv]</parent-name>
            <remote-alias>people_fully_vaccinated_per_hundred</remote-alias>
            <ordinal>41</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_vaccinations_smoothed_per_million</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_vaccinations_smoothed_per_million]</local-name>
            <parent-name>[CovidDeaths_cleaned.csv]</parent-name>
            <remote-alias>new_vaccinations_smoothed_per_million</remote-alias>
            <ordinal>42</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stringency_index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[stringency_index]</local-name>
            <parent-name>[CovidDeaths_cleaned.csv]</parent-name>
            <remote-alias>stringency_index</remote-alias>
            <ordinal>43</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[CovidDeaths_cleaned.csv]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>44</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population_density</remote-name>
            <remote-type>5</remote-type>
            <local-name>[population_density]</local-name>
            <parent-name>[CovidDeaths_cleaned.csv]</parent-name>
            <remote-alias>population_density</remote-alias>
            <ordinal>45</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_age</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_age]</local-name>
            <parent-name>[CovidDeaths_cleaned.csv]</parent-name>
            <remote-alias>median_age</remote-alias>
            <ordinal>46</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>aged_65_older</remote-name>
            <remote-type>5</remote-type>
            <local-name>[aged_65_older]</local-name>
            <parent-name>[CovidDeaths_cleaned.csv]</parent-name>
            <remote-alias>aged_65_older</remote-alias>
            <ordinal>47</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>aged_70_older</remote-name>
            <remote-type>5</remote-type>
            <local-name>[aged_70_older]</local-name>
            <parent-name>[CovidDeaths_cleaned.csv]</parent-name>
            <remote-alias>aged_70_older</remote-alias>
            <ordinal>48</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gdp_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[gdp_per_capita]</local-name>
            <parent-name>[CovidDeaths_cleaned.csv]</parent-name>
            <remote-alias>gdp_per_capita</remote-alias>
            <ordinal>49</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>extreme_poverty</remote-name>
            <remote-type>5</remote-type>
            <local-name>[extreme_poverty]</local-name>
            <parent-name>[CovidDeaths_cleaned.csv]</parent-name>
            <remote-alias>extreme_poverty</remote-alias>
            <ordinal>50</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cardiovasc_death_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cardiovasc_death_rate]</local-name>
            <parent-name>[CovidDeaths_cleaned.csv]</parent-name>
            <remote-alias>cardiovasc_death_rate</remote-alias>
            <ordinal>51</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>diabetes_prevalence</remote-name>
            <remote-type>5</remote-type>
            <local-name>[diabetes_prevalence]</local-name>
            <parent-name>[CovidDeaths_cleaned.csv]</parent-name>
            <remote-alias>diabetes_prevalence</remote-alias>
            <ordinal>52</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>female_smokers</remote-name>
            <remote-type>5</remote-type>
            <local-name>[female_smokers]</local-name>
            <parent-name>[CovidDeaths_cleaned.csv]</parent-name>
            <remote-alias>female_smokers</remote-alias>
            <ordinal>53</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>male_smokers</remote-name>
            <remote-type>5</remote-type>
            <local-name>[male_smokers]</local-name>
            <parent-name>[CovidDeaths_cleaned.csv]</parent-name>
            <remote-alias>male_smokers</remote-alias>
            <ordinal>54</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>handwashing_facilities</remote-name>
            <remote-type>5</remote-type>
            <local-name>[handwashing_facilities]</local-name>
            <parent-name>[CovidDeaths_cleaned.csv]</parent-name>
            <remote-alias>handwashing_facilities</remote-alias>
            <ordinal>55</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hospital_beds_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hospital_beds_per_thousand]</local-name>
            <parent-name>[CovidDeaths_cleaned.csv]</parent-name>
            <remote-alias>hospital_beds_per_thousand</remote-alias>
            <ordinal>56</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>life_expectancy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[life_expectancy]</local-name>
            <parent-name>[CovidDeaths_cleaned.csv]</parent-name>
            <remote-alias>life_expectancy</remote-alias>
            <ordinal>57</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>human_development_index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[human_development_index]</local-name>
            <parent-name>[CovidDeaths_cleaned.csv]</parent-name>
            <remote-alias>human_development_index</remote-alias>
            <ordinal>58</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='7 days Avg New Deaths w Chosen Continent' datatype='real' name='[7 days Avg New Cases w Chosen Continent (copy)_113786292401340419]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_AVG(SUM([New Cases w Chosen Continent (copy)_113786292401016834]), -6, 0)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='7 days Avg New Tests w Chosen Continent' datatype='real' name='[7 days Avg New Deaths w Chosen Continent (copy)_113786292446449671]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_AVG(SUM([New Deaths w Chosen Continent (copy)_113786292446183430]), -6, 0)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='7 days Avg New Vaccinations w Chosen Continent' datatype='real' name='[7 days Avg New Tests w Chosen Continent (copy)_28780849682935809]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_AVG(SUM([New Tests w Chosen Continent (copy)_28780849682558976]), -6, 0)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='New Cases w Chosen Continent' datatype='integer' name='[Calculation_113786292388573184]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [continent] = [Parameters].[Continent Parameter] THEN [new_cases]&#10;ELSE 0&#10;END' />
      </column>
      <column caption='Above Below Avg' datatype='string' name='[Calculation_113786292406697989]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF Avg([New Deaths w Chosen Continent (copy)_113786292404805636]) &gt; 0.01&#10;then &apos;above&apos;&#10;else &apos;below&apos;&#10;end' />
      </column>
      <column caption='Location  w Chosen Continent' datatype='string' name='[Calculation_168673914198233088]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
        <calculation class='tableau' formula='IF [continent] = [Parameters].[Continent Parameter] THEN [location]&#10;END' />
      </column>
      <column caption='7 days Avg New Cases w Chosen Continent' datatype='real' name='[New Cases w Chosen Continent (copy)_113786292398751745]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_AVG(SUM([Calculation_113786292388573184]), -6, 0)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='New Deaths w Chosen Continent' datatype='integer' name='[New Cases w Chosen Continent (copy)_113786292401016834]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [continent] = [Parameters].[Continent Parameter] THEN [new_deaths]&#10;ELSE 0&#10;END' />
      </column>
      <column caption='Positive Rate w Chosen Continent' datatype='real' name='[New Deaths w Chosen Continent (copy)_113786292404805636]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [continent] = [Parameters].[Continent Parameter] THEN [positive_rate]&#10;ELSE 0&#10;END' />
      </column>
      <column caption='New Tests w Chosen Continent' datatype='integer' name='[New Deaths w Chosen Continent (copy)_113786292446183430]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [continent] = [Parameters].[Continent Parameter] THEN [new_tests]&#10;ELSE 0&#10;END' />
      </column>
      <column caption='New Deaths Per Mil w Chosen Country' datatype='real' name='[New Deaths w Chosen Continent (copy)_168673914199609346]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [continent] = [Parameters].[Continent Parameter] THEN [new_deaths_per_million]&#10;ELSE 0&#10;END' />
      </column>
      <column caption='New Vaccinations w Chosen Continent' datatype='integer' name='[New Tests w Chosen Continent (copy)_28780849682558976]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [continent] = [Parameters].[Continent Parameter] THEN [new_vaccinations]&#10;ELSE 0&#10;END' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='CovidDeaths_cleaned.csv' datatype='table' name='[__tableau_internal_object_id__].[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]' role='measure' type='quantitative' />
      <column caption='Aged 65 Older' datatype='real' name='[aged_65_older]' role='measure' type='quantitative' />
      <column caption='Aged 70 Older' datatype='real' name='[aged_70_older]' role='measure' type='quantitative' />
      <column caption='Cardiovasc Death Rate' datatype='real' name='[cardiovasc_death_rate]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[continent]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Diabetes Prevalence' datatype='real' name='[diabetes_prevalence]' role='measure' type='quantitative' />
      <column caption='Extreme Poverty' datatype='real' name='[extreme_poverty]' role='measure' type='quantitative' />
      <column caption='Female Smokers' datatype='real' name='[female_smokers]' role='measure' type='quantitative' />
      <column caption='Gdp Per Capita' datatype='real' name='[gdp_per_capita]' role='measure' type='quantitative' />
      <column caption='Handwashing Facilities' datatype='real' name='[handwashing_facilities]' role='measure' type='quantitative' />
      <column caption='Hosp Patients' datatype='integer' name='[hosp_patients]' role='measure' type='quantitative' />
      <column caption='Hosp Patients Per Million' datatype='integer' name='[hosp_patients_per_million]' role='measure' type='quantitative' />
      <column caption='Hospital Beds Per Thousand' datatype='real' name='[hospital_beds_per_thousand]' role='measure' type='quantitative' />
      <column caption='Human Development Index' datatype='real' name='[human_development_index]' role='measure' type='quantitative' />
      <column caption='Icu Patients' datatype='integer' name='[icu_patients]' role='measure' type='quantitative' />
      <column caption='Icu Patients Per Million' datatype='integer' name='[icu_patients_per_million]' role='measure' type='quantitative' />
      <column caption='Iso Code' datatype='string' name='[iso_code]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Life Expectancy' datatype='real' name='[life_expectancy]' role='measure' type='quantitative' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Male Smokers' datatype='real' name='[male_smokers]' role='measure' type='quantitative' />
      <column caption='Median Age' datatype='real' name='[median_age]' role='measure' type='quantitative' />
      <column caption='New Cases' datatype='integer' name='[new_cases]' role='measure' type='quantitative' />
      <column caption='New Cases Per Million' datatype='real' name='[new_cases_per_million]' role='measure' type='quantitative' />
      <column caption='New Cases Smoothed' datatype='real' name='[new_cases_smoothed]' role='measure' type='quantitative' />
      <column caption='New Cases Smoothed Per Million' datatype='real' name='[new_cases_smoothed_per_million]' role='measure' type='quantitative' />
      <column caption='New Deaths' datatype='integer' name='[new_deaths]' role='measure' type='quantitative' />
      <column caption='New Deaths Per Million' datatype='real' name='[new_deaths_per_million]' role='measure' type='quantitative' />
      <column caption='New Deaths Smoothed' datatype='real' name='[new_deaths_smoothed]' role='measure' type='quantitative' />
      <column caption='New Deaths Smoothed Per Million' datatype='real' name='[new_deaths_smoothed_per_million]' role='measure' type='quantitative' />
      <column caption='New Tests' datatype='integer' name='[new_tests]' role='measure' type='quantitative' />
      <column caption='New Tests Per Thousand' datatype='real' name='[new_tests_per_thousand]' role='measure' type='quantitative' />
      <column caption='New Tests Smoothed' datatype='integer' name='[new_tests_smoothed]' role='measure' type='quantitative' />
      <column caption='New Tests Smoothed Per Thousand' datatype='real' name='[new_tests_smoothed_per_thousand]' role='measure' type='quantitative' />
      <column caption='New Vaccinations' datatype='integer' name='[new_vaccinations]' role='measure' type='quantitative' />
      <column caption='New Vaccinations Smoothed' datatype='integer' name='[new_vaccinations_smoothed]' role='measure' type='quantitative' />
      <column caption='New Vaccinations Smoothed Per Million' datatype='integer' name='[new_vaccinations_smoothed_per_million]' role='measure' type='quantitative' />
      <column caption='People Fully Vaccinated' datatype='integer' name='[people_fully_vaccinated]' role='measure' type='quantitative' />
      <column caption='People Fully Vaccinated Per Hundred' datatype='real' name='[people_fully_vaccinated_per_hundred]' role='measure' type='quantitative' />
      <column caption='People Vaccinated' datatype='integer' name='[people_vaccinated]' role='measure' type='quantitative' />
      <column caption='People Vaccinated Per Hundred' datatype='real' name='[people_vaccinated_per_hundred]' role='measure' type='quantitative' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <column caption='Population Density' datatype='real' name='[population_density]' role='measure' type='quantitative' />
      <column caption='Positive Rate' datatype='real' name='[positive_rate]' role='measure' type='quantitative' />
      <column caption='Reproduction Rate' datatype='real' name='[reproduction_rate]' role='measure' type='quantitative' />
      <column caption='Stringency Index' datatype='real' name='[stringency_index]' role='measure' type='quantitative' />
      <column caption='Tests Per Case' datatype='real' name='[tests_per_case]' role='measure' type='quantitative' />
      <column caption='Tests Units' datatype='string' name='[tests_units]' role='dimension' type='nominal' />
      <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Cases Per Million' datatype='real' name='[total_cases_per_million]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
      <column caption='Total Deaths Per Million' datatype='real' name='[total_deaths_per_million]' role='measure' type='quantitative' />
      <column caption='Total Tests' datatype='integer' name='[total_tests]' role='measure' type='quantitative' />
      <column caption='Total Tests Per Thousand' datatype='real' name='[total_tests_per_thousand]' role='measure' type='quantitative' />
      <column caption='Total Vaccinations' datatype='integer' name='[total_vaccinations]' role='measure' type='quantitative' />
      <column caption='Total Vaccinations Per Hundred' datatype='real' name='[total_vaccinations_per_hundred]' role='measure' type='quantitative' />
      <column caption='Weekly Hosp Admissions' datatype='integer' name='[weekly_hosp_admissions]' role='measure' type='quantitative' />
      <column caption='Weekly Hosp Admissions Per Million' datatype='integer' name='[weekly_hosp_admissions_per_million]' role='measure' type='quantitative' />
      <column caption='Weekly Icu Admissions' datatype='integer' name='[weekly_icu_admissions]' role='measure' type='quantitative' />
      <column caption='Weekly Icu Admissions Per Million' datatype='integer' name='[weekly_icu_admissions_per_million]' role='measure' type='quantitative' />
      <column-instance column='[New Deaths w Chosen Continent (copy)_113786292404805636]' derivation='Avg' name='[avg:New Deaths w Chosen Continent (copy)_113786292404805636:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_168673914198233088]' derivation='None' name='[none:Calculation_168673914198233088:nk]' pivot='key' type='nominal' />
      <column-instance column='[new_deaths_per_million]' derivation='None' name='[none:new_deaths_per_million:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_113786292388573184]' derivation='Sum' name='[sum:Calculation_113786292388573184:qk]' pivot='key' type='quantitative' />
      <column-instance column='[New Cases w Chosen Continent (copy)_113786292401016834]' derivation='Sum' name='[sum:New Cases w Chosen Continent (copy)_113786292401016834:qk]' pivot='key' type='quantitative' />
      <column-instance column='[New Deaths w Chosen Continent (copy)_113786292404805636]' derivation='Sum' name='[sum:New Deaths w Chosen Continent (copy)_113786292404805636:qk]' pivot='key' type='quantitative' />
      <column-instance column='[New Deaths w Chosen Continent (copy)_113786292446183430]' derivation='Sum' name='[sum:New Deaths w Chosen Continent (copy)_113786292446183430:qk]' pivot='key' type='quantitative' />
      <column-instance column='[New Tests w Chosen Continent (copy)_28780849682558976]' derivation='Sum' name='[sum:New Tests w Chosen Continent (copy)_28780849682558976:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_deaths_per_million]' derivation='Sum' name='[sum:new_deaths_per_million:qk]' pivot='key' type='quantitative' />
      <column-instance column='[7 days Avg New Cases w Chosen Continent (copy)_113786292401340419]' derivation='User' name='[usr:7 days Avg New Cases w Chosen Continent (copy)_113786292401340419:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <column-instance column='[7 days Avg New Deaths w Chosen Continent (copy)_113786292446449671]' derivation='User' name='[usr:7 days Avg New Deaths w Chosen Continent (copy)_113786292446449671:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <column-instance column='[7 days Avg New Tests w Chosen Continent (copy)_28780849682935809]' derivation='User' name='[usr:7 days Avg New Tests w Chosen Continent (copy)_28780849682935809:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <column-instance column='[New Cases w Chosen Continent (copy)_113786292398751745]' derivation='User' name='[usr:New Cases w Chosen Continent (copy)_113786292398751745:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <drill-paths>
        <drill-path name='Location Hierachy'>
          <field>[continent]</field>
          <field>[location]</field>
        </drill-path>
      </drill-paths>
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='/var/folders/pz/x922ffzx1z77z1strd8qk2qh0000gn/T/tableau-temp/#TableauTemp_05y8sx203mbz3v18wbl6t01yokcx.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='01/03/2025 09:52:49 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>iso_code</remote-name>
              <remote-type>129</remote-type>
              <local-name>[iso_code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>iso_code</remote-alias>
              <ordinal>0</ordinal>
              <family>CovidDeaths_cleaned.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>289</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>continent</remote-name>
              <remote-type>129</remote-type>
              <local-name>[continent]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>continent</remote-alias>
              <ordinal>1</ordinal>
              <family>CovidDeaths_cleaned.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location</remote-alias>
              <ordinal>2</ordinal>
              <family>CovidDeaths_cleaned.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>289</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>date</remote-alias>
              <ordinal>3</ordinal>
              <family>CovidDeaths_cleaned.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1277</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_cases</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_cases]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_cases</remote-alias>
              <ordinal>4</ordinal>
              <family>CovidDeaths_cleaned.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>20428</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>new_cases</remote-name>
              <remote-type>20</remote-type>
              <local-name>[new_cases]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>new_cases</remote-alias>
              <ordinal>5</ordinal>
              <family>CovidDeaths_cleaned.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5363</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>new_cases_smoothed</remote-name>
              <remote-type>5</remote-type>
              <local-name>[new_cases_smoothed]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>new_cases_smoothed</remote-alias>
              <ordinal>6</ordinal>
              <family>CovidDeaths_cleaned.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>9806</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_deaths</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_deaths]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_deaths</remote-alias>
              <ordinal>7</ordinal>
              <family>CovidDeaths_cleaned.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6337</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>new_deaths</remote-name>
              <remote-type>20</remote-type>
              <local-name>[new_deaths]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>new_deaths</remote-alias>
              <ordinal>8</ordinal>
              <family>CovidDeaths_cleaned.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1294</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>new_deaths_smoothed</remote-name>
              <remote-type>5</remote-type>
              <local-name>[new_deaths_smoothed]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>new_deaths_smoothed</remote-alias>
              <ordinal>9</ordinal>
              <family>CovidDeaths_cleaned.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2461</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_cases_per_million</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_cases_per_million]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_cases_per_million</remote-alias>
              <ordinal>10</ordinal>
              <family>CovidDeaths_cleaned.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>35631</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>new_cases_per_million</remote-name>
              <remote-type>5</remote-type>
              <local-name>[new_cases_per_million]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>new_cases_per_million</remote-alias>
              <ordinal>11</ordinal>
              <family>CovidDeaths_cleaned.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>21298</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>new_cases_smoothed_per_million</remote-name>
              <remote-type>5</remote-type>
              <local-name>[new_cases_smoothed_per_million]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>new_cases_smoothed_per_million</remote-alias>
              <ordinal>12</ordinal>
              <family>CovidDeaths_cleaned.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>22334</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_deaths_per_million</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_deaths_per_million]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_deaths_per_million</remote-alias>
              <ordinal>13</ordinal>
              <family>CovidDeaths_cleaned.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>16968</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>new_deaths_per_million</remote-name>
              <remote-type>5</remote-type>
              <local-name>[new_deaths_per_million]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>new_deaths_per_million</remote-alias>
              <ordinal>14</ordinal>
              <family>CovidDeaths_cleaned.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5829</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>new_deaths_smoothed_per_million</remote-name>
              <remote-type>5</remote-type>
              <local-name>[new_deaths_smoothed_per_million]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>new_deaths_smoothed_per_million</remote-alias>
              <ordinal>15</ordinal>
              <family>CovidDeaths_cleaned.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6122</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>reproduction_rate</remote-name>
              <remote-type>5</remote-type>
              <local-name>[reproduction_rate]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>reproduction_rate</remote-alias>
              <ordinal>16</ordinal>
              <family>CovidDeaths_cleaned.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>503</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>icu_patients</remote-name>
              <remote-type>20</remote-type>
              <local-name>[icu_patients]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>icu_patients</remote-alias>
              <ordinal>17</ordinal>
              <family>CovidDeaths_cleaned.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3002</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>icu_patients_per_million</remote-name>
              <remote-type>20</remote-type>
              <local-name>[icu_patients_per_million]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>icu_patients_per_million</remote-alias>
              <ordinal>18</ordinal>
              <family>CovidDeaths_cleaned.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>hosp_patients</remote-name>
              <remote-type>20</remote-type>
              <local-name>[hosp_patients]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>hosp_patients</remote-alias>
              <ordinal>19</ordinal>
              <family>CovidDeaths_cleaned.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4990</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>hosp_patients_per_million</remote-name>
              <remote-type>20</remote-type>
              <local-name>[hosp_patients_per_million]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>hosp_patients_per_million</remote-alias>
              <ordinal>20</ordinal>
              <family>CovidDeaths_cleaned.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>weekly_icu_admissions</remote-name>
              <remote-type>20</remote-type>
              <local-name>[weekly_icu_admissions]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>weekly_icu_admissions</remote-alias>
              <ordinal>21</ordinal>
              <family>CovidDeaths_cleaned.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>weekly_icu_admissions_per_million</remote-name>
              <remote-type>20</remote-type>
              <local-name>[weekly_icu_admissions_per_million]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>weekly_icu_admissions_per_million</remote-alias>
              <ordinal>22</ordinal>
              <family>CovidDeaths_cleaned.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>weekly_hosp_admissions</remote-name>
              <remote-type>20</remote-type>
              <local-name>[weekly_hosp_admissions]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>weekly_hosp_admissions</remote-alias>
              <ordinal>23</ordinal>
              <family>CovidDeaths_cleaned.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>weekly_hosp_admissions_per_million</remote-name>
              <remote-type>20</remote-type>
              <local-name>[weekly_hosp_admissions_per_million]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>weekly_hosp_admissions_per_million</remote-alias>
              <ordinal>24</ordinal>
              <family>CovidDeaths_cleaned.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>new_tests</remote-name>
              <remote-type>20</remote-type>
              <local-name>[new_tests]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>new_tests</remote-alias>
              <ordinal>25</ordinal>
              <family>CovidDeaths_cleaned.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>20746</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_tests</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_tests]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_tests</remote-alias>
              <ordinal>26</ordinal>
              <family>CovidDeaths_cleaned.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>44113</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_tests_per_thousand</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_tests_per_thousand]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_tests_per_thousand</remote-alias>
              <ordinal>27</ordinal>
              <family>CovidDeaths_cleaned.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>30292</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>new_tests_per_thousand</remote-name>
              <remote-type>5</remote-type>
              <local-name>[new_tests_per_thousand]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>new_tests_per_thousand</remote-alias>
              <ordinal>28</ordinal>
              <family>CovidDeaths_cleaned.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6759</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>new_tests_smoothed</remote-name>
              <remote-type>20</remote-type>
              <local-name>[new_tests_smoothed]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>new_tests_smoothed</remote-alias>
              <ordinal>29</ordinal>
              <family>CovidDeaths_cleaned.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>26295</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>new_tests_smoothed_per_thousand</remote-name>
              <remote-type>5</remote-type>
              <local-name>[new_tests_smoothed_per_thousand]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>new_tests_smoothed_per_thousand</remote-alias>
              <ordinal>30</ordinal>
              <family>CovidDeaths_cleaned.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6938</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>positive_rate</remote-name>
              <remote-type>5</remote-type>
              <local-name>[positive_rate]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>positive_rate</remote-alias>
              <ordinal>31</ordinal>
              <family>CovidDeaths_cleaned.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>946</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>tests_per_case</remote-name>
              <remote-type>5</remote-type>
              <local-name>[tests_per_case]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>tests_per_case</remote-alias>
              <ordinal>32</ordinal>
              <family>CovidDeaths_cleaned.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2279</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>tests_units</remote-name>
              <remote-type>129</remote-type>
              <local-name>[tests_units]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>tests_units</remote-alias>
              <ordinal>33</ordinal>
              <family>CovidDeaths_cleaned.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_vaccinations</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_vaccinations]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_vaccinations</remote-alias>
              <ordinal>34</ordinal>
              <family>CovidDeaths_cleaned.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>9737</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>people_vaccinated</remote-name>
              <remote-type>20</remote-type>
              <local-name>[people_vaccinated]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>people_vaccinated</remote-alias>
              <ordinal>35</ordinal>
              <family>CovidDeaths_cleaned.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>8494</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>people_fully_vaccinated</remote-name>
              <remote-type>20</remote-type>
              <local-name>[people_fully_vaccinated]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>people_fully_vaccinated</remote-alias>
              <ordinal>36</ordinal>
              <family>CovidDeaths_cleaned.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4713</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>new_vaccinations</remote-name>
              <remote-type>20</remote-type>
              <local-name>[new_vaccinations]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>new_vaccinations</remote-alias>
              <ordinal>37</ordinal>
              <family>CovidDeaths_cleaned.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11869</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>new_vaccinations_smoothed</remote-name>
              <remote-type>20</remote-type>
              <local-name>[new_vaccinations_smoothed]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>new_vaccinations_smoothed</remote-alias>
              <ordinal>38</ordinal>
              <family>CovidDeaths_cleaned.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6566</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_vaccinations_per_hundred</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_vaccinations_per_hundred]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_vaccinations_per_hundred</remote-alias>
              <ordinal>39</ordinal>
              <family>CovidDeaths_cleaned.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4236</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>people_vaccinated_per_hundred</remote-name>
              <remote-type>5</remote-type>
              <local-name>[people_vaccinated_per_hundred]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>people_vaccinated_per_hundred</remote-alias>
              <ordinal>40</ordinal>
              <family>CovidDeaths_cleaned.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4503</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>people_fully_vaccinated_per_hundred</remote-name>
              <remote-type>5</remote-type>
              <local-name>[people_fully_vaccinated_per_hundred]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>people_fully_vaccinated_per_hundred</remote-alias>
              <ordinal>41</ordinal>
              <family>CovidDeaths_cleaned.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3625</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>new_vaccinations_smoothed_per_million</remote-name>
              <remote-type>20</remote-type>
              <local-name>[new_vaccinations_smoothed_per_million]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>new_vaccinations_smoothed_per_million</remote-alias>
              <ordinal>42</ordinal>
              <family>CovidDeaths_cleaned.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5988</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>stringency_index</remote-name>
              <remote-type>5</remote-type>
              <local-name>[stringency_index]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>stringency_index</remote-alias>
              <ordinal>43</ordinal>
              <family>CovidDeaths_cleaned.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>277</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>population</remote-alias>
              <ordinal>44</ordinal>
              <family>CovidDeaths_cleaned.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>288</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>population_density</remote-name>
              <remote-type>5</remote-type>
              <local-name>[population_density]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>population_density</remote-alias>
              <ordinal>45</ordinal>
              <family>CovidDeaths_cleaned.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>250</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>median_age</remote-name>
              <remote-type>5</remote-type>
              <local-name>[median_age]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>median_age</remote-alias>
              <ordinal>46</ordinal>
              <family>CovidDeaths_cleaned.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>155</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>aged_65_older</remote-name>
              <remote-type>5</remote-type>
              <local-name>[aged_65_older]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>aged_65_older</remote-alias>
              <ordinal>47</ordinal>
              <family>CovidDeaths_cleaned.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>205</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>aged_70_older</remote-name>
              <remote-type>5</remote-type>
              <local-name>[aged_70_older]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>aged_70_older</remote-alias>
              <ordinal>48</ordinal>
              <family>CovidDeaths_cleaned.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>203</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>gdp_per_capita</remote-name>
              <remote-type>5</remote-type>
              <local-name>[gdp_per_capita]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>gdp_per_capita</remote-alias>
              <ordinal>49</ordinal>
              <family>CovidDeaths_cleaned.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>226</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>extreme_poverty</remote-name>
              <remote-type>5</remote-type>
              <local-name>[extreme_poverty]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>extreme_poverty</remote-alias>
              <ordinal>50</ordinal>
              <family>CovidDeaths_cleaned.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>83</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cardiovasc_death_rate</remote-name>
              <remote-type>5</remote-type>
              <local-name>[cardiovasc_death_rate]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>cardiovasc_death_rate</remote-alias>
              <ordinal>51</ordinal>
              <family>CovidDeaths_cleaned.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>211</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>diabetes_prevalence</remote-name>
              <remote-type>5</remote-type>
              <local-name>[diabetes_prevalence]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>diabetes_prevalence</remote-alias>
              <ordinal>52</ordinal>
              <family>CovidDeaths_cleaned.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>170</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>female_smokers</remote-name>
              <remote-type>5</remote-type>
              <local-name>[female_smokers]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>female_smokers</remote-alias>
              <ordinal>53</ordinal>
              <family>CovidDeaths_cleaned.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>109</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>male_smokers</remote-name>
              <remote-type>5</remote-type>
              <local-name>[male_smokers]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>male_smokers</remote-alias>
              <ordinal>54</ordinal>
              <family>CovidDeaths_cleaned.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>133</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>handwashing_facilities</remote-name>
              <remote-type>5</remote-type>
              <local-name>[handwashing_facilities]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>handwashing_facilities</remote-alias>
              <ordinal>55</ordinal>
              <family>CovidDeaths_cleaned.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>104</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>hospital_beds_per_thousand</remote-name>
              <remote-type>5</remote-type>
              <local-name>[hospital_beds_per_thousand]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>hospital_beds_per_thousand</remote-alias>
              <ordinal>56</ordinal>
              <family>CovidDeaths_cleaned.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>109</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>life_expectancy</remote-name>
              <remote-type>5</remote-type>
              <local-name>[life_expectancy]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>life_expectancy</remote-alias>
              <ordinal>57</ordinal>
              <family>CovidDeaths_cleaned.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>268</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>human_development_index</remote-name>
              <remote-type>5</remote-type>
              <local-name>[human_development_index]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>human_development_index</remote-alias>
              <ordinal>58</ordinal>
              <family>CovidDeaths_cleaned.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>176</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1sfrzyp1v45e731di51f21buvywi]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1sfrzyp1v45e731di51f21buvywi].[none:new_deaths_per_million:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1sfrzyp1v45e731di51f21buvywi].[sum:new_deaths_per_million:qk]&quot;</bucket>
            </map>
            <map to='#bfbfbf'>
              <bucket>&quot;[federated.1sfrzyp1v45e731di51f21buvywi].[sum:Calculation_113786292388573184:qk]&quot;</bucket>
            </map>
            <map to='#bfbfbf'>
              <bucket>&quot;[federated.1sfrzyp1v45e731di51f21buvywi].[sum:New Cases w Chosen Continent (copy)_113786292401016834:qk]&quot;</bucket>
            </map>
            <map to='#bfbfbf'>
              <bucket>&quot;[federated.1sfrzyp1v45e731di51f21buvywi].[sum:New Deaths w Chosen Continent (copy)_113786292446183430:qk]&quot;</bucket>
            </map>
            <map to='#bfbfbf'>
              <bucket>&quot;[federated.1sfrzyp1v45e731di51f21buvywi].[sum:New Tests w Chosen Continent (copy)_28780849682558976:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1sfrzyp1v45e731di51f21buvywi].[avg:New Deaths w Chosen Continent (copy)_113786292404805636:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1sfrzyp1v45e731di51f21buvywi].[sum:New Deaths w Chosen Continent (copy)_113786292404805636:qk]&quot;</bucket>
            </map>
            <map to='#ff7d00'>
              <bucket>&quot;[federated.1sfrzyp1v45e731di51f21buvywi].[usr:7 days Avg New Cases w Chosen Continent (copy)_113786292401340419:qk]&quot;</bucket>
            </map>
            <map to='#ff7d00'>
              <bucket>&quot;[federated.1sfrzyp1v45e731di51f21buvywi].[usr:7 days Avg New Deaths w Chosen Continent (copy)_113786292446449671:qk]&quot;</bucket>
            </map>
            <map to='#ff7d00'>
              <bucket>&quot;[federated.1sfrzyp1v45e731di51f21buvywi].[usr:7 days Avg New Tests w Chosen Continent (copy)_28780849682935809:qk]&quot;</bucket>
            </map>
            <map to='#ff7d00'>
              <bucket>&quot;[federated.1sfrzyp1v45e731di51f21buvywi].[usr:New Cases w Chosen Continent (copy)_113786292398751745:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_168673914198233088:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Select Continent' datatype='string' name='[Continent Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Asia&quot;'>
          <calculation class='tableau' formula='&quot;Asia&quot;' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='CovidDeaths_cleaned.csv' id='CovidDeaths_cleaned.csv_F4A544DC471C460EB8F3F74304CF050A'>
            <properties context=''>
              <relation connection='textscan.11mfhmv09f8irm1g1he5d02k6pq9' name='CovidDeaths_cleaned.csv' table='[CovidDeaths_cleaned#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='iso_code' ordinal='0' />
                  <column datatype='string' name='continent' ordinal='1' />
                  <column datatype='string' name='location' ordinal='2' />
                  <column datatype='date' name='date' ordinal='3' />
                  <column datatype='integer' name='total_cases' ordinal='4' />
                  <column datatype='integer' name='new_cases' ordinal='5' />
                  <column datatype='real' name='new_cases_smoothed' ordinal='6' />
                  <column datatype='integer' name='total_deaths' ordinal='7' />
                  <column datatype='integer' name='new_deaths' ordinal='8' />
                  <column datatype='real' name='new_deaths_smoothed' ordinal='9' />
                  <column datatype='real' name='total_cases_per_million' ordinal='10' />
                  <column datatype='real' name='new_cases_per_million' ordinal='11' />
                  <column datatype='real' name='new_cases_smoothed_per_million' ordinal='12' />
                  <column datatype='real' name='total_deaths_per_million' ordinal='13' />
                  <column datatype='real' name='new_deaths_per_million' ordinal='14' />
                  <column datatype='real' name='new_deaths_smoothed_per_million' ordinal='15' />
                  <column datatype='real' name='reproduction_rate' ordinal='16' />
                  <column datatype='integer' name='icu_patients' ordinal='17' />
                  <column datatype='integer' name='icu_patients_per_million' ordinal='18' />
                  <column datatype='integer' name='hosp_patients' ordinal='19' />
                  <column datatype='integer' name='hosp_patients_per_million' ordinal='20' />
                  <column datatype='integer' name='weekly_icu_admissions' ordinal='21' />
                  <column datatype='integer' name='weekly_icu_admissions_per_million' ordinal='22' />
                  <column datatype='integer' name='weekly_hosp_admissions' ordinal='23' />
                  <column datatype='integer' name='weekly_hosp_admissions_per_million' ordinal='24' />
                  <column datatype='integer' name='new_tests' ordinal='25' />
                  <column datatype='integer' name='total_tests' ordinal='26' />
                  <column datatype='real' name='total_tests_per_thousand' ordinal='27' />
                  <column datatype='real' name='new_tests_per_thousand' ordinal='28' />
                  <column datatype='integer' name='new_tests_smoothed' ordinal='29' />
                  <column datatype='real' name='new_tests_smoothed_per_thousand' ordinal='30' />
                  <column datatype='real' name='positive_rate' ordinal='31' />
                  <column datatype='real' name='tests_per_case' ordinal='32' />
                  <column datatype='string' name='tests_units' ordinal='33' />
                  <column datatype='integer' name='total_vaccinations' ordinal='34' />
                  <column datatype='integer' name='people_vaccinated' ordinal='35' />
                  <column datatype='integer' name='people_fully_vaccinated' ordinal='36' />
                  <column datatype='integer' name='new_vaccinations' ordinal='37' />
                  <column datatype='integer' name='new_vaccinations_smoothed' ordinal='38' />
                  <column datatype='real' name='total_vaccinations_per_hundred' ordinal='39' />
                  <column datatype='real' name='people_vaccinated_per_hundred' ordinal='40' />
                  <column datatype='real' name='people_fully_vaccinated_per_hundred' ordinal='41' />
                  <column datatype='integer' name='new_vaccinations_smoothed_per_million' ordinal='42' />
                  <column datatype='real' name='stringency_index' ordinal='43' />
                  <column datatype='integer' name='population' ordinal='44' />
                  <column datatype='real' name='population_density' ordinal='45' />
                  <column datatype='real' name='median_age' ordinal='46' />
                  <column datatype='real' name='aged_65_older' ordinal='47' />
                  <column datatype='real' name='aged_70_older' ordinal='48' />
                  <column datatype='real' name='gdp_per_capita' ordinal='49' />
                  <column datatype='real' name='extreme_poverty' ordinal='50' />
                  <column datatype='real' name='cardiovasc_death_rate' ordinal='51' />
                  <column datatype='real' name='diabetes_prevalence' ordinal='52' />
                  <column datatype='real' name='female_smokers' ordinal='53' />
                  <column datatype='real' name='male_smokers' ordinal='54' />
                  <column datatype='real' name='handwashing_facilities' ordinal='55' />
                  <column datatype='real' name='hospital_beds_per_thousand' ordinal='56' />
                  <column datatype='real' name='life_expectancy' ordinal='57' />
                  <column datatype='real' name='human_development_index' ordinal='58' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1_825EEC6415FF4468AAED8F61ACDE2F14]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='New Cases' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Measure Names' />
        <param name='target' value='New Cases' />
      </command>
    </action>
    <action caption='Highlight 1 (generated) 1' name='[Action2_83217D5EBBC941D2B34C832EDFD77298]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='New Deaths' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Measure Names' />
        <param name='target' value='New Deaths' />
      </command>
    </action>
    <action caption='Highlight 1 (generated) 1 1' name='[Action3_A36E38E5BCDB42EBBB7532636119893E]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Positive Rate' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Measure Names' />
        <param name='target' value='Positive Rate' />
      </command>
    </action>
    <action caption='Highlight 1 (generated) 1 1 1' name='[Action4_CF667819259C4228B504EA829C5EC44E]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='New Tests ' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Measure Names' />
        <param name='target' value='New Tests ' />
      </command>
    </action>
    <action caption='Highlight 1 (generated) 1 1 1 1' name='[Action5_99AB0E040E6A41DEA945F178CCB60E17]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='New Vaccinations' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Measure Names' />
        <param name='target' value='New Vaccinations' />
      </command>
    </action>
    <action caption='Highlight 1 (generated) 1 1 1 1 1' name='[Action6_7A4EA083941F4A4B98444B7A4A40CB2C]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Daily New Deaths Per Mil ' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Measure Names' />
        <param name='target' value='Daily New Deaths Per Mil ' />
      </command>
    </action>
    <action caption='Highlight 1 (generated) 1 1 1 1 1 1' name='[Action7_32C5854859AC4636B5F774D139C520EC]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Map Daily New Deaths Per Mil' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Measure Names' />
        <param name='target' value='Map Daily New Deaths Per Mil' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Continent'>
      <table>
        <view>
          <datasources>
            <datasource caption='CovidDeaths_cleaned' name='federated.1sfrzyp1v45e731di51f21buvywi' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select Continent' datatype='string' name='[Continent Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Asia&quot;'>
              <calculation class='tableau' formula='&quot;Asia&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1sfrzyp1v45e731di51f21buvywi'>
            <column caption='New Cases w Chosen Continent' datatype='integer' name='[Calculation_113786292388573184]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [continent] = [Parameters].[Continent Parameter] THEN [new_cases]&#10;ELSE 0&#10;END' />
            </column>
            <column caption='New Deaths w Chosen Continent' datatype='integer' name='[New Cases w Chosen Continent (copy)_113786292401016834]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [continent] = [Parameters].[Continent Parameter] THEN [new_deaths]&#10;ELSE 0&#10;END' />
            </column>
            <column caption='Positive Rate w Chosen Continent' datatype='real' name='[New Deaths w Chosen Continent (copy)_113786292404805636]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [continent] = [Parameters].[Continent Parameter] THEN [positive_rate]&#10;ELSE 0&#10;END' />
            </column>
            <column-instance column='[New Deaths w Chosen Continent (copy)_113786292404805636]' derivation='Avg' name='[avg:New Deaths w Chosen Continent (copy)_113786292404805636:qk]' pivot='key' type='quantitative' />
            <column-instance column='[tests_per_case]' derivation='Avg' name='[avg:tests_per_case:qk]' pivot='key' type='quantitative' />
            <column caption='Continent' datatype='string' name='[continent]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='New Cases' datatype='integer' name='[new_cases]' role='measure' type='quantitative' />
            <column caption='New Deaths' datatype='integer' name='[new_deaths]' role='measure' type='quantitative' />
            <column caption='Positive Rate' datatype='real' name='[positive_rate]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_113786292388573184]' derivation='Sum' name='[sum:Calculation_113786292388573184:qk]' pivot='key' type='quantitative' />
            <column-instance column='[New Cases w Chosen Continent (copy)_113786292401016834]' derivation='Sum' name='[sum:New Cases w Chosen Continent (copy)_113786292401016834:qk]' pivot='key' type='quantitative' />
            <column caption='Tests Per Case' datatype='real' name='[tests_per_case]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='tick-color' value='#00000000' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1sfrzyp1v45e731di51f21buvywi].[avg:New Deaths w Chosen Continent (copy)_113786292404805636:qk]' value='p0.0%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#ffecd1' />
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='fill-above' id='refline2' value='#00000000' />
            <format attr='fill-below' id='refline2' value='#00000000' />
            <format attr='fill-above' id='refline4' value='#00000000' />
            <format attr='fill-below' id='refline4' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='stroke-size' scope='rows' value='1' />
            <format attr='line-visibility' scope='rows' value='on' />
            <format attr='line-pattern-only' scope='rows' value='dotted' />
            <format attr='stroke-size' id='refline1' value='1' />
            <format attr='line-visibility' id='refline1' value='on' />
            <format attr='line-pattern-only' id='refline1' value='dotted' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='text-format' id='refline1' value='p0.0%' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane id='9' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Text' />
            <encodings>
              <text column='[federated.1sfrzyp1v45e731di51f21buvywi].[sum:Calculation_113786292388573184:qk]' />
              <text column='[federated.1sfrzyp1v45e731di51f21buvywi].[sum:New Cases w Chosen Continent (copy)_113786292401016834:qk]' />
              <text column='[federated.1sfrzyp1v45e731di51f21buvywi].[avg:New Deaths w Chosen Continent (copy)_113786292404805636:qk]' />
              <text column='[federated.1sfrzyp1v45e731di51f21buvywi].[avg:tests_per_case:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true'>Total Cases</run>
                <run>Æ&#10;</run>
                <run bold='true' fontsize='12'><![CDATA[<[federated.1sfrzyp1v45e731di51f21buvywi].[sum:Calculation_113786292388573184:qk]>]]></run>
                <run>Æ&#10;&#10;</run>
                <run bold='true'>Total Deaths </run>
                <run>Æ&#10;</run>
                <run bold='true' fontsize='12'><![CDATA[<[federated.1sfrzyp1v45e731di51f21buvywi].[sum:New Cases w Chosen Continent (copy)_113786292401016834:qk]>]]></run>
                <run>Æ&#10;&#10;</run>
                <run bold='true'>Avg Positive Rate</run>
                <run>Æ&#10;</run>
                <run bold='true' fontsize='12'><![CDATA[<[federated.1sfrzyp1v45e731di51f21buvywi].[avg:New Deaths w Chosen Continent (copy)_113786292404805636:qk]>]]></run>
                <run>Æ&#10;&#10;</run>
                <run bold='true'>Avg Test Per Case</run>
                <run>Æ&#10;</run>
                <run bold='true' fontsize='12'><![CDATA[<[federated.1sfrzyp1v45e731di51f21buvywi].[avg:tests_per_case:qk]>]]></run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-color' value='#ff7d00' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{59753B35-FD79-495A-933D-178B4445C820}' />
    </worksheet>
    <worksheet name='Daily New Deaths Per Mil '>
      <table>
        <view>
          <datasources>
            <datasource caption='CovidDeaths_cleaned' name='federated.1sfrzyp1v45e731di51f21buvywi' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select Continent' datatype='string' name='[Continent Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Asia&quot;'>
              <calculation class='tableau' formula='&quot;Asia&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1sfrzyp1v45e731di51f21buvywi'>
            <column caption='Location  w Chosen Continent' datatype='string' name='[Calculation_168673914198233088]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='tableau' formula='IF [continent] = [Parameters].[Continent Parameter] THEN [location]&#10;END' />
            </column>
            <column caption='New Deaths Per Mil w Chosen Country' datatype='real' name='[New Deaths w Chosen Continent (copy)_168673914199609346]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [continent] = [Parameters].[Continent Parameter] THEN [new_deaths_per_million]&#10;ELSE 0&#10;END' />
            </column>
            <column caption='Continent' datatype='string' name='[continent]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='New Deaths Per Million' datatype='real' name='[new_deaths_per_million]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_168673914198233088]' derivation='None' name='[none:Calculation_168673914198233088:nk]' pivot='key' type='nominal' />
            <column-instance column='[New Deaths w Chosen Continent (copy)_168673914199609346]' derivation='None' name='[none:New Deaths w Chosen Continent (copy)_168673914199609346:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='None' name='[none:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='tick-color' value='#00000000' />
            <format attr='title' class='0' field='[federated.1sfrzyp1v45e731di51f21buvywi].[none:date:qk]' scope='cols' value='' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#ffecd1' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='fill-above' id='refline2' value='#00000000' />
            <format attr='fill-below' id='refline2' value='#00000000' />
            <format attr='fill-above' id='refline4' value='#00000000' />
            <format attr='fill-below' id='refline4' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='stroke-size' scope='rows' value='1' />
            <format attr='line-visibility' scope='rows' value='on' />
            <format attr='line-pattern-only' scope='rows' value='dotted' />
            <format attr='stroke-size' id='refline1' value='1' />
            <format attr='line-visibility' id='refline1' value='on' />
            <format attr='line-pattern-only' id='refline1' value='dotted' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='text-format' id='refline1' value='p0.0%' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane id='15' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1sfrzyp1v45e731di51f21buvywi].[none:Calculation_168673914198233088:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#ff7d00' />
                <format attr='size' value='0.33983424305915833' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1sfrzyp1v45e731di51f21buvywi].[none:New Deaths w Chosen Continent (copy)_168673914199609346:qk]</rows>
        <cols>[federated.1sfrzyp1v45e731di51f21buvywi].[none:date:qk]</cols>
        <pages>
          <column>[federated.1sfrzyp1v45e731di51f21buvywi].[none:date:ok]</column>
        </pages>
        <page-trail-options enabled='true' end='40' lines='true' mark-type='all' start='0' />
      </table>
      <simple-id uuid='{48972F99-8B17-4888-A83D-4FBD7D8A11C9}' />
    </worksheet>
    <worksheet name='Map Daily New Deaths Per Mil'>
      <table>
        <view>
          <datasources>
            <datasource caption='CovidDeaths_cleaned' name='federated.1sfrzyp1v45e731di51f21buvywi' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select Continent' datatype='string' name='[Continent Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Asia&quot;'>
              <calculation class='tableau' formula='&quot;Asia&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1sfrzyp1v45e731di51f21buvywi'>
            <column caption='Location  w Chosen Continent' datatype='string' name='[Calculation_168673914198233088]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='tableau' formula='IF [continent] = [Parameters].[Continent Parameter] THEN [location]&#10;END' />
            </column>
            <column caption='New Deaths Per Mil w Chosen Country' datatype='real' name='[New Deaths w Chosen Continent (copy)_168673914199609346]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [continent] = [Parameters].[Continent Parameter] THEN [new_deaths_per_million]&#10;ELSE 0&#10;END' />
            </column>
            <column caption='Continent' datatype='string' name='[continent]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='New Deaths Per Million' datatype='real' name='[new_deaths_per_million]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_168673914198233088]' derivation='None' name='[none:Calculation_168673914198233088:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='None' name='[none:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[New Deaths w Chosen Continent (copy)_168673914199609346]' derivation='Sum' name='[sum:New Deaths w Chosen Continent (copy)_168673914199609346:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='tick-color' value='#00000000' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1sfrzyp1v45e731di51f21buvywi].[sum:New Deaths w Chosen Continent (copy)_168673914199609346:qk]' num-steps='5' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#78290f</color>
                <color>#883d24</color>
                <color>#98553f</color>
                <color>#a8715e</color>
                <color>#b89082</color>
                <color>#c8b2ab</color>
                <color>#d9d9d9</color>
                <color>#b4c0cb</color>
                <color>#92a9be</color>
                <color>#7493b1</color>
                <color>#587fa4</color>
                <color>#406d97</color>
                <color>#2b5c8a</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#ffecd1' />
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='fill-above' id='refline2' value='#00000000' />
            <format attr='fill-below' id='refline2' value='#00000000' />
            <format attr='fill-above' id='refline4' value='#00000000' />
            <format attr='fill-below' id='refline4' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='stroke-size' scope='rows' value='1' />
            <format attr='line-visibility' scope='rows' value='on' />
            <format attr='line-pattern-only' scope='rows' value='dotted' />
            <format attr='stroke-size' id='refline1' value='1' />
            <format attr='line-visibility' id='refline1' value='on' />
            <format attr='line-pattern-only' id='refline1' value='dotted' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='text-format' id='refline1' value='p0.0%' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='15' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1sfrzyp1v45e731di51f21buvywi].[sum:New Deaths w Chosen Continent (copy)_168673914199609346:qk]' />
              <lod column='[federated.1sfrzyp1v45e731di51f21buvywi].[none:Calculation_168673914198233088:nk]' />
              <geometry column='[federated.1sfrzyp1v45e731di51f21buvywi].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#ff7d00' />
                <format attr='size' value='2.9060773849487305' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1sfrzyp1v45e731di51f21buvywi].[Latitude (generated)]</rows>
        <cols>[federated.1sfrzyp1v45e731di51f21buvywi].[Longitude (generated)]</cols>
        <pages>
          <column>[federated.1sfrzyp1v45e731di51f21buvywi].[none:date:ok]</column>
        </pages>
        <page-trail-options enabled='true' end='40' lines='true' mark-type='all' start='0' />
      </table>
      <simple-id uuid='{A469EA5F-E5D5-4C0F-92F2-A3943F2F8101}' />
    </worksheet>
    <worksheet name='New Cases'>
      <table>
        <view>
          <datasources>
            <datasource caption='CovidDeaths_cleaned' name='federated.1sfrzyp1v45e731di51f21buvywi' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select Continent' datatype='string' name='[Continent Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Asia&quot;'>
              <calculation class='tableau' formula='&quot;Asia&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1sfrzyp1v45e731di51f21buvywi'>
            <column caption='New Cases w Chosen Continent' datatype='integer' name='[Calculation_113786292388573184]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [continent] = [Parameters].[Continent Parameter] THEN [new_cases]&#10;ELSE 0&#10;END' />
            </column>
            <column caption='7 days Avg New Cases w Chosen Continent' datatype='real' name='[New Cases w Chosen Continent (copy)_113786292398751745]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='WINDOW_AVG(SUM([Calculation_113786292388573184]), -6, 0)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Continent' datatype='string' name='[continent]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='New Cases' datatype='integer' name='[new_cases]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_113786292388573184]' derivation='Sum' name='[sum:Calculation_113786292388573184:qk]' pivot='key' type='quantitative' />
            <column-instance column='[New Cases w Chosen Continent (copy)_113786292398751745]' derivation='User' name='[usr:New Cases w Chosen Continent (copy)_113786292398751745:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1sfrzyp1v45e731di51f21buvywi].[sum:Calculation_113786292388573184:qk]' field-type='quantitative' scope='rows' type='space' />
            <format attr='display' class='0' field='[federated.1sfrzyp1v45e731di51f21buvywi].[sum:Calculation_113786292388573184:qk]' scope='rows' value='false' />
            <format attr='tick-color' value='#00000000' />
            <format attr='title' class='0' field='[federated.1sfrzyp1v45e731di51f21buvywi].[none:date:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1sfrzyp1v45e731di51f21buvywi].[none:date:qk]' scope='cols' value='false' />
            <encoding attr='space' class='0' field='[federated.1sfrzyp1v45e731di51f21buvywi].[usr:New Cases w Chosen Continent (copy)_113786292398751745:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='0' field='[federated.1sfrzyp1v45e731di51f21buvywi].[usr:New Cases w Chosen Continent (copy)_113786292398751745:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#ffecd1' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1sfrzyp1v45e731di51f21buvywi].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#ff7d00' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1sfrzyp1v45e731di51f21buvywi].[usr:New Cases w Chosen Continent (copy)_113786292398751745:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1sfrzyp1v45e731di51f21buvywi].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#ff7d00' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1sfrzyp1v45e731di51f21buvywi].[sum:Calculation_113786292388573184:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1sfrzyp1v45e731di51f21buvywi].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#c0c0c0' />
                <format attr='mark-transparency' value='129' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1sfrzyp1v45e731di51f21buvywi].[sum:Calculation_113786292388573184:qk] + [federated.1sfrzyp1v45e731di51f21buvywi].[usr:New Cases w Chosen Continent (copy)_113786292398751745:qk])</rows>
        <cols>[federated.1sfrzyp1v45e731di51f21buvywi].[none:date:qk]</cols>
      </table>
      <simple-id uuid='{7907116C-398A-4703-ADAF-71DB0278C690}' />
    </worksheet>
    <worksheet name='New Deaths'>
      <table>
        <view>
          <datasources>
            <datasource caption='CovidDeaths_cleaned' name='federated.1sfrzyp1v45e731di51f21buvywi' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select Continent' datatype='string' name='[Continent Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Asia&quot;'>
              <calculation class='tableau' formula='&quot;Asia&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1sfrzyp1v45e731di51f21buvywi'>
            <column caption='7 days Avg New Deaths w Chosen Continent' datatype='real' name='[7 days Avg New Cases w Chosen Continent (copy)_113786292401340419]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='WINDOW_AVG(SUM([New Cases w Chosen Continent (copy)_113786292401016834]), -6, 0)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='New Deaths w Chosen Continent' datatype='integer' name='[New Cases w Chosen Continent (copy)_113786292401016834]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [continent] = [Parameters].[Continent Parameter] THEN [new_deaths]&#10;ELSE 0&#10;END' />
            </column>
            <column caption='Continent' datatype='string' name='[continent]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='New Deaths' datatype='integer' name='[new_deaths]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[New Cases w Chosen Continent (copy)_113786292401016834]' derivation='Sum' name='[sum:New Cases w Chosen Continent (copy)_113786292401016834:qk]' pivot='key' type='quantitative' />
            <column-instance column='[7 days Avg New Cases w Chosen Continent (copy)_113786292401340419]' derivation='User' name='[usr:7 days Avg New Cases w Chosen Continent (copy)_113786292401340419:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='tick-color' value='#00000000' />
            <format attr='title' class='0' field='[federated.1sfrzyp1v45e731di51f21buvywi].[none:date:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1sfrzyp1v45e731di51f21buvywi].[none:date:qk]' scope='cols' value='false' />
            <encoding attr='space' class='0' field='[federated.1sfrzyp1v45e731di51f21buvywi].[usr:7 days Avg New Cases w Chosen Continent (copy)_113786292401340419:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='0' field='[federated.1sfrzyp1v45e731di51f21buvywi].[usr:7 days Avg New Cases w Chosen Continent (copy)_113786292401340419:qk]' scope='rows' value='false' />
            <format attr='display' class='0' field='[federated.1sfrzyp1v45e731di51f21buvywi].[sum:New Cases w Chosen Continent (copy)_113786292401016834:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#ffecd1' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1sfrzyp1v45e731di51f21buvywi].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#ff7d00' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1sfrzyp1v45e731di51f21buvywi].[sum:New Cases w Chosen Continent (copy)_113786292401016834:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1sfrzyp1v45e731di51f21buvywi].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#ff7d00' />
                <format attr='mark-transparency' value='129' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1sfrzyp1v45e731di51f21buvywi].[usr:7 days Avg New Cases w Chosen Continent (copy)_113786292401340419:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1sfrzyp1v45e731di51f21buvywi].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#ff7d00' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1sfrzyp1v45e731di51f21buvywi].[sum:New Cases w Chosen Continent (copy)_113786292401016834:qk] + [federated.1sfrzyp1v45e731di51f21buvywi].[usr:7 days Avg New Cases w Chosen Continent (copy)_113786292401340419:qk])</rows>
        <cols>[federated.1sfrzyp1v45e731di51f21buvywi].[none:date:qk]</cols>
      </table>
      <simple-id uuid='{38902BD9-1611-40B9-B2E2-A2712B5C51F1}' />
    </worksheet>
    <worksheet name='New Tests '>
      <table>
        <view>
          <datasources>
            <datasource caption='CovidDeaths_cleaned' name='federated.1sfrzyp1v45e731di51f21buvywi' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select Continent' datatype='string' name='[Continent Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Asia&quot;'>
              <calculation class='tableau' formula='&quot;Asia&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1sfrzyp1v45e731di51f21buvywi'>
            <column caption='7 days Avg New Tests w Chosen Continent' datatype='real' name='[7 days Avg New Deaths w Chosen Continent (copy)_113786292446449671]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='WINDOW_AVG(SUM([New Deaths w Chosen Continent (copy)_113786292446183430]), -6, 0)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='New Tests w Chosen Continent' datatype='integer' name='[New Deaths w Chosen Continent (copy)_113786292446183430]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [continent] = [Parameters].[Continent Parameter] THEN [new_tests]&#10;ELSE 0&#10;END' />
            </column>
            <column caption='Continent' datatype='string' name='[continent]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='New Tests' datatype='integer' name='[new_tests]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[New Deaths w Chosen Continent (copy)_113786292446183430]' derivation='Sum' name='[sum:New Deaths w Chosen Continent (copy)_113786292446183430:qk]' pivot='key' type='quantitative' />
            <column-instance column='[7 days Avg New Deaths w Chosen Continent (copy)_113786292446449671]' derivation='User' name='[usr:7 days Avg New Deaths w Chosen Continent (copy)_113786292446449671:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='tick-color' value='#00000000' />
            <encoding attr='space' class='0' field='[federated.1sfrzyp1v45e731di51f21buvywi].[usr:7 days Avg New Deaths w Chosen Continent (copy)_113786292446449671:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='0' field='[federated.1sfrzyp1v45e731di51f21buvywi].[usr:7 days Avg New Deaths w Chosen Continent (copy)_113786292446449671:qk]' scope='rows' value='false' />
            <format attr='display' class='0' field='[federated.1sfrzyp1v45e731di51f21buvywi].[sum:New Deaths w Chosen Continent (copy)_113786292446183430:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#ffecd1' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='fill-above' id='refline2' value='#00000000' />
            <format attr='fill-below' id='refline2' value='#00000000' />
            <format attr='fill-above' id='refline4' value='#00000000' />
            <format attr='fill-below' id='refline4' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='stroke-size' scope='rows' value='1' />
            <format attr='line-visibility' scope='rows' value='on' />
            <format attr='line-pattern-only' scope='rows' value='dotted' />
            <format attr='stroke-size' id='refline1' value='1' />
            <format attr='line-visibility' id='refline1' value='on' />
            <format attr='line-pattern-only' id='refline1' value='dotted' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='text-format' id='refline1' value='p0.0%' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1sfrzyp1v45e731di51f21buvywi].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#ff7d00' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
          <pane id='8' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1sfrzyp1v45e731di51f21buvywi].[sum:New Deaths w Chosen Continent (copy)_113786292446183430:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1sfrzyp1v45e731di51f21buvywi].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#b4b4b4' />
                <format attr='mark-transparency' value='129' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
          <pane id='9' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1sfrzyp1v45e731di51f21buvywi].[usr:7 days Avg New Deaths w Chosen Continent (copy)_113786292446449671:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1sfrzyp1v45e731di51f21buvywi].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#ff7d00' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1sfrzyp1v45e731di51f21buvywi].[sum:New Deaths w Chosen Continent (copy)_113786292446183430:qk] + [federated.1sfrzyp1v45e731di51f21buvywi].[usr:7 days Avg New Deaths w Chosen Continent (copy)_113786292446449671:qk])</rows>
        <cols>[federated.1sfrzyp1v45e731di51f21buvywi].[none:date:qk]</cols>
      </table>
      <simple-id uuid='{BA7A297F-DF0C-45E5-B487-CE0FA6824EA3}' />
    </worksheet>
    <worksheet name='New Vaccinations'>
      <table>
        <view>
          <datasources>
            <datasource caption='CovidDeaths_cleaned' name='federated.1sfrzyp1v45e731di51f21buvywi' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select Continent' datatype='string' name='[Continent Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Asia&quot;'>
              <calculation class='tableau' formula='&quot;Asia&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1sfrzyp1v45e731di51f21buvywi'>
            <column caption='7 days Avg New Vaccinations w Chosen Continent' datatype='real' name='[7 days Avg New Tests w Chosen Continent (copy)_28780849682935809]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='WINDOW_AVG(SUM([New Tests w Chosen Continent (copy)_28780849682558976]), -6, 0)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='New Vaccinations w Chosen Continent' datatype='integer' name='[New Tests w Chosen Continent (copy)_28780849682558976]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [continent] = [Parameters].[Continent Parameter] THEN [new_vaccinations]&#10;ELSE 0&#10;END' />
            </column>
            <column caption='Continent' datatype='string' name='[continent]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='New Vaccinations' datatype='integer' name='[new_vaccinations]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[New Tests w Chosen Continent (copy)_28780849682558976]' derivation='Sum' name='[sum:New Tests w Chosen Continent (copy)_28780849682558976:qk]' pivot='key' type='quantitative' />
            <column-instance column='[7 days Avg New Tests w Chosen Continent (copy)_28780849682935809]' derivation='User' name='[usr:7 days Avg New Tests w Chosen Continent (copy)_28780849682935809:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='tick-color' value='#00000000' />
            <encoding attr='space' class='0' field='[federated.1sfrzyp1v45e731di51f21buvywi].[usr:7 days Avg New Tests w Chosen Continent (copy)_28780849682935809:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='0' field='[federated.1sfrzyp1v45e731di51f21buvywi].[usr:7 days Avg New Tests w Chosen Continent (copy)_28780849682935809:qk]' scope='rows' value='false' />
            <format attr='display' class='0' field='[federated.1sfrzyp1v45e731di51f21buvywi].[sum:New Tests w Chosen Continent (copy)_28780849682558976:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#ffecd1' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='fill-above' id='refline2' value='#00000000' />
            <format attr='fill-below' id='refline2' value='#00000000' />
            <format attr='fill-above' id='refline4' value='#00000000' />
            <format attr='fill-below' id='refline4' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='stroke-size' scope='rows' value='1' />
            <format attr='line-visibility' scope='rows' value='on' />
            <format attr='line-pattern-only' scope='rows' value='dotted' />
            <format attr='stroke-size' id='refline1' value='1' />
            <format attr='line-visibility' id='refline1' value='on' />
            <format attr='line-pattern-only' id='refline1' value='dotted' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='text-format' id='refline1' value='p0.0%' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane id='10' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1sfrzyp1v45e731di51f21buvywi].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#ff7d00' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
          <pane id='11' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1sfrzyp1v45e731di51f21buvywi].[sum:New Tests w Chosen Continent (copy)_28780849682558976:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1sfrzyp1v45e731di51f21buvywi].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#ff7d00' />
                <format attr='mark-transparency' value='129' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
          <pane id='12' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1sfrzyp1v45e731di51f21buvywi].[usr:7 days Avg New Tests w Chosen Continent (copy)_28780849682935809:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1sfrzyp1v45e731di51f21buvywi].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#ff7d00' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1sfrzyp1v45e731di51f21buvywi].[sum:New Tests w Chosen Continent (copy)_28780849682558976:qk] + [federated.1sfrzyp1v45e731di51f21buvywi].[usr:7 days Avg New Tests w Chosen Continent (copy)_28780849682935809:qk])</rows>
        <cols>[federated.1sfrzyp1v45e731di51f21buvywi].[none:date:qk]</cols>
      </table>
      <simple-id uuid='{31B614C3-D62D-4BDF-9771-3B7384C57701}' />
    </worksheet>
    <worksheet name='Positive Rate'>
      <table>
        <view>
          <datasources>
            <datasource caption='CovidDeaths_cleaned' name='federated.1sfrzyp1v45e731di51f21buvywi' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select Continent' datatype='string' name='[Continent Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Asia&quot;'>
              <calculation class='tableau' formula='&quot;Asia&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1sfrzyp1v45e731di51f21buvywi'>
            <column caption='Above Below Avg' datatype='string' name='[Calculation_113786292406697989]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF Avg([New Deaths w Chosen Continent (copy)_113786292404805636]) &gt; 0.01&#10;then &apos;above&apos;&#10;else &apos;below&apos;&#10;end' />
            </column>
            <column caption='Positive Rate w Chosen Continent' datatype='real' name='[New Deaths w Chosen Continent (copy)_113786292404805636]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [continent] = [Parameters].[Continent Parameter] THEN [positive_rate]&#10;ELSE 0&#10;END' />
            </column>
            <column-instance column='[New Deaths w Chosen Continent (copy)_113786292404805636]' derivation='Avg' name='[avg:New Deaths w Chosen Continent (copy)_113786292404805636:qk]' pivot='key' type='quantitative' />
            <column caption='Continent' datatype='string' name='[continent]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column caption='Positive Rate' datatype='real' name='[positive_rate]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_113786292406697989]' derivation='User' name='[usr:Calculation_113786292406697989:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1sfrzyp1v45e731di51f21buvywi].[none:date:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1sfrzyp1v45e731di51f21buvywi].[none:date:qk]' scope='cols' value='false' />
            <format attr='display' class='0' field='[federated.1sfrzyp1v45e731di51f21buvywi].[avg:New Deaths w Chosen Continent (copy)_113786292404805636:qk]' scope='rows' value='true' />
            <format attr='tick-color' value='#00000000' />
            <format attr='display' class='0' field='[federated.1sfrzyp1v45e731di51f21buvywi].[none:date:qk]' scope='cols' value='false' />
            <encoding attr='space' class='0' field='[federated.1sfrzyp1v45e731di51f21buvywi].[avg:New Deaths w Chosen Continent (copy)_113786292404805636:qk]' field-type='quantitative' major-origin='0.0' major-spacing='0.0050000000000000001' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.1sfrzyp1v45e731di51f21buvywi].[avg:New Deaths w Chosen Continent (copy)_113786292404805636:qk]' scope='rows' value='' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1sfrzyp1v45e731di51f21buvywi].[avg:New Deaths w Chosen Continent (copy)_113786292404805636:qk]' value='p0.0%' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#ffecd1' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='fill-above' id='refline2' value='#00000000' />
            <format attr='fill-below' id='refline2' value='#00000000' />
            <format attr='fill-above' id='refline4' value='#00000000' />
            <format attr='fill-below' id='refline4' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='stroke-size' scope='rows' value='1' />
            <format attr='line-visibility' scope='rows' value='on' />
            <format attr='line-pattern-only' scope='rows' value='dotted' />
            <format attr='stroke-size' id='refline1' value='1' />
            <format attr='line-visibility' id='refline1' value='on' />
            <format attr='line-pattern-only' id='refline1' value='dotted' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='text-format' id='refline1' value='p0.0%' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1sfrzyp1v45e731di51f21buvywi].[usr:Calculation_113786292406697989:nk]' />
            </encodings>
            <reference-line axis-column='[federated.1sfrzyp1v45e731di51f21buvywi].[avg:New Deaths w Chosen Continent (copy)_113786292404805636:qk]' enable-instant-analytics='true' formula='constant' id='refline1' label='' label-type='custom' scope='per-table' value='0.01' value-column='[federated.1sfrzyp1v45e731di51f21buvywi].[avg:New Deaths w Chosen Continent (copy)_113786292404805636:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#ff7d00' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1sfrzyp1v45e731di51f21buvywi].[avg:New Deaths w Chosen Continent (copy)_113786292404805636:qk]</rows>
        <cols>[federated.1sfrzyp1v45e731di51f21buvywi].[none:date:qk]</cols>
      </table>
      <simple-id uuid='{C13CE99B-ABAC-4386-A105-B1A75912FF19}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Covid '>
      <style />
      <size maxheight='800' maxwidth='1400' minheight='800' minwidth='1400' sizing-mode='fixed' />
      <datasources>
        <datasource name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Select Continent' datatype='string' name='[Continent Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Asia&quot;'>
          <calculation class='tableau' formula='&quot;Asia&quot;' />
          <members>
            <member value='&quot;Africa&quot;' />
            <member value='&quot;Asia&quot;' />
            <member value='&quot;Europe&quot;' />
            <member value='&quot;North America&quot;' />
            <member value='&quot;Oceania&quot;' />
            <member value='&quot;South America&quot;' />
          </members>
        </column>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone friendly-name='Whole Board' h='98000' id='3' param='horz' type-v2='layout-flow' w='98858' x='571' y='1000'>
            <zone fixed-size='69' friendly-name='Overview &amp; Contacts' h='97750' id='8' is-fixed='true' param='vert' type-v2='layout-flow' w='4929' x='642' y='1125'>
              <zone h='13500' id='12' name='Daily New Deaths Per Mil ' synchronized='1' type-v2='currpage' w='4929' x='642' y='1125'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='6250' id='13' mode='compact' param='[Parameters].[Continent Parameter]' type-v2='paramctrl' w='4929' x='642' y='14625'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='1282' friendly-name='Main Board' h='97750' id='7' is-fixed='true' param='vert' type-v2='layout-flow' w='91571' x='5571' y='1125'>
              <zone h='26833' id='10' type-v2='empty' w='91571' x='5571' y='1125'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='44083' id='11' name='Daily New Deaths Per Mil ' w='91571' x='5571' y='27958'>
                <layout-cache minheight='170' minwidth='161' type-h='scalable' type-w='scalable' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='26833' id='9' type-v2='empty' w='91571' x='5571' y='72041'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone-style>
              <format attr='border-color' value='#e9c46a' />
              <format attr='border-style' value='solid' />
              <format attr='border-width' value='1' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='17' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='16' param='vert' type-v2='layout-flow' w='98858' x='571' y='1000'>
                <zone h='6250' id='13' mode='compact' param='[Parameters].[Continent Parameter]' type-v2='paramctrl' w='4929' x='642' y='14625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44083' id='11' is-fixed='true' name='Daily New Deaths Per Mil ' w='91571' x='5571' y='27958'>
                  <layout-cache minheight='170' minwidth='161' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='13500' id='12' name='Daily New Deaths Per Mil ' synchronized='1' type-v2='currpage' w='4929' x='642' y='1125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{E83ADB95-FE01-4DD5-88A7-4C786FA967CB}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Continent'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Continent Parameter]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1sfrzyp1v45e731di51f21buvywi].[dy:date:ok]</field>
            <field>[federated.1sfrzyp1v45e731di51f21buvywi].[none:continent:nk]</field>
            <field>[federated.1sfrzyp1v45e731di51f21buvywi].[none:iso_code:nk]</field>
            <field>[federated.1sfrzyp1v45e731di51f21buvywi].[none:location:nk]</field>
            <field>[federated.1sfrzyp1v45e731di51f21buvywi].[none:tests_units:nk]</field>
            <field>[federated.1sfrzyp1v45e731di51f21buvywi].[tmn:date:qk]</field>
            <field>[federated.1sfrzyp1v45e731di51f21buvywi].[usr:Calculation_113786292406697989:nk]</field>
            <field>[federated.1sfrzyp1v45e731di51f21buvywi].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{45D8CE9F-0783-4211-A93E-258FF88BFD5D}' />
    </window>
    <window class='worksheet' name='New Cases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Continent Parameter]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1sfrzyp1v45e731di51f21buvywi].[dy:date:ok]</field>
            <field>[federated.1sfrzyp1v45e731di51f21buvywi].[none:continent:nk]</field>
            <field>[federated.1sfrzyp1v45e731di51f21buvywi].[tmn:date:qk]</field>
            <field>[federated.1sfrzyp1v45e731di51f21buvywi].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BB85349D-34BB-455C-861A-286633D525F8}' />
    </window>
    <window class='worksheet' name='New Deaths'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Continent Parameter]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1sfrzyp1v45e731di51f21buvywi].[dy:date:ok]</field>
            <field>[federated.1sfrzyp1v45e731di51f21buvywi].[none:continent:nk]</field>
            <field>[federated.1sfrzyp1v45e731di51f21buvywi].[tmn:date:qk]</field>
            <field>[federated.1sfrzyp1v45e731di51f21buvywi].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C3080CD6-50CB-466A-A55F-601CD6489F16}' />
    </window>
    <window class='worksheet' name='Positive Rate'>
      <cards>
        <edge name='left'>
          <strip size='111'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='100'>
            <card mode='compact' param='[Parameters].[Continent Parameter]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1sfrzyp1v45e731di51f21buvywi].[dy:date:ok]</field>
            <field>[federated.1sfrzyp1v45e731di51f21buvywi].[none:continent:nk]</field>
            <field>[federated.1sfrzyp1v45e731di51f21buvywi].[tmn:date:qk]</field>
            <field>[federated.1sfrzyp1v45e731di51f21buvywi].[usr:Calculation_113786292406697989:nk]</field>
            <field>[federated.1sfrzyp1v45e731di51f21buvywi].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DA614AFD-F0EE-4863-97B3-8FA67914F49A}' />
    </window>
    <window class='worksheet' name='New Tests '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Continent Parameter]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1sfrzyp1v45e731di51f21buvywi].[dy:date:ok]</field>
            <field>[federated.1sfrzyp1v45e731di51f21buvywi].[none:continent:nk]</field>
            <field>[federated.1sfrzyp1v45e731di51f21buvywi].[tmn:date:qk]</field>
            <field>[federated.1sfrzyp1v45e731di51f21buvywi].[usr:Calculation_113786292406697989:nk]</field>
            <field>[federated.1sfrzyp1v45e731di51f21buvywi].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{71675F0B-5B5F-463F-94B3-41175E89CAD4}' />
    </window>
    <window class='worksheet' name='New Vaccinations'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Continent Parameter]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1sfrzyp1v45e731di51f21buvywi].[dy:date:ok]</field>
            <field>[federated.1sfrzyp1v45e731di51f21buvywi].[none:continent:nk]</field>
            <field>[federated.1sfrzyp1v45e731di51f21buvywi].[tmn:date:qk]</field>
            <field>[federated.1sfrzyp1v45e731di51f21buvywi].[usr:Calculation_113786292406697989:nk]</field>
            <field>[federated.1sfrzyp1v45e731di51f21buvywi].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F1C33F31-2EAF-4A76-BFFF-E16825EE6359}' />
    </window>
    <window class='worksheet' name='Daily New Deaths Per Mil '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Continent Parameter]' type='parameter' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2021-04-30#</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1sfrzyp1v45e731di51f21buvywi].[dy:date:ok]</field>
            <field>[federated.1sfrzyp1v45e731di51f21buvywi].[none:Calculation_168673914198233088:nk]</field>
            <field>[federated.1sfrzyp1v45e731di51f21buvywi].[none:continent:nk]</field>
            <field>[federated.1sfrzyp1v45e731di51f21buvywi].[none:date:ok]</field>
            <field>[federated.1sfrzyp1v45e731di51f21buvywi].[tmn:date:qk]</field>
            <field>[federated.1sfrzyp1v45e731di51f21buvywi].[usr:Calculation_113786292406697989:nk]</field>
            <field>[federated.1sfrzyp1v45e731di51f21buvywi].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1329EE31-8C1C-4C67-A88D-C8CE0EB01CF5}' />
    </window>
    <window class='worksheet' maximized='true' name='Map Daily New Deaths Per Mil'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Continent Parameter]' type='parameter' />
            <card type='currpage' />
            <card pane-specification-id='15' param='[federated.1sfrzyp1v45e731di51f21buvywi].[sum:New Deaths w Chosen Continent (copy)_168673914199609346:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2021-04-04#</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1sfrzyp1v45e731di51f21buvywi].[dy:date:ok]</field>
            <field>[federated.1sfrzyp1v45e731di51f21buvywi].[none:Calculation_168673914198233088:nk]</field>
            <field>[federated.1sfrzyp1v45e731di51f21buvywi].[none:continent:nk]</field>
            <field>[federated.1sfrzyp1v45e731di51f21buvywi].[none:date:ok]</field>
            <field>[federated.1sfrzyp1v45e731di51f21buvywi].[none:iso_code:nk]</field>
            <field>[federated.1sfrzyp1v45e731di51f21buvywi].[none:location:nk]</field>
            <field>[federated.1sfrzyp1v45e731di51f21buvywi].[sum:New Deaths w Chosen Continent (copy)_168673914199609346:qk]</field>
            <field>[federated.1sfrzyp1v45e731di51f21buvywi].[tmn:date:qk]</field>
            <field>[federated.1sfrzyp1v45e731di51f21buvywi].[usr:Calculation_113786292406697989:nk]</field>
            <field>[federated.1sfrzyp1v45e731di51f21buvywi].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C39C7852-6355-4619-AD5B-9AD557977A7A}' />
    </window>
    <window class='dashboard' name='Covid '>
      <viewpoints>
        <viewpoint name='Daily New Deaths Per Mil '>
          <current-page>
            <multibucket>
              <bucket>#2021-04-30#</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='12' />
      <simple-id uuid='{7AFBED2C-D68D-42F3-8CC0-953FFCDB7683}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='378' name='Continent' width='288'>
      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
    </thumbnail>
    <thumbnail height='384' name='Covid ' width='384'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='384' name='Daily New Deaths Per Mil ' width='384'>
      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
      kJCwj/L/AapNQZOwVyszAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='Map Daily New Deaths Per Mil' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='New Cases' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='New Deaths' width='384'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='384' name='New Tests ' width='384'>
      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
      Hx+UNToAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='New Vaccinations' width='384'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Positive Rate' width='384'>
      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
      okj9P2f0Aey0kxMlAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
